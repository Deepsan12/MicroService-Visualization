{
  "name": "train-ticket",
  "commitID": "313886e99befb94be6cd45f085c98e0019f59829",
  "microservices": [
    {
      "name": "ts-admin-basic-info-service",
      "path": "/ts-admin-basic-info-service",
      "controllers": [
        {
          "packageName": "adminbasic.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/adminbasicservice/adminbasic/prices/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "pricesId",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/prices/{pricesId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "deletePrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/configs",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "Config",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "c",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/configs"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "addConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/contacts",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "Contacts",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "c",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/contacts"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "addContacts",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/configs",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "Config",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "c",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/configs"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "modifyConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/contacts/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "contactsId",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/contacts/{contactsId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "deleteContacts",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/configs/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "name",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/configs/{name}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "deleteConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/configs",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/configs"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "getAllConfigs",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/contacts",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/contacts"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "getAllContacts",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/trains",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TrainType",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "t",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/trains"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "addTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/prices",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PriceInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "pi",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/prices"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "addPrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/prices",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "PriceInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "pi",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/prices"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "modifyPrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/stations/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/stations/{id}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "deleteStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/trains",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "TrainType",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "t",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/trains"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "modifyTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/trains/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/trains/{id}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "deleteTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/stations",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "Station",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "s",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/stations"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "modifyStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/stations",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "Station",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "s",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/stations"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "addStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "home",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/contacts",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "type": "Contacts",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "mci",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/contacts"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "modifyContacts",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/stations",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/stations"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "getAllStations",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/trains",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "path": "/adminbasic/trains"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "getAllTrains",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "url": "/api/v1/adminbasicservice/adminbasic/prices",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminbasic/prices"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
                }
              ],
              "className": "AdminBasicInfoController",
              "name": "getAllPrices",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            }
          ],
          "fields": [
            {
              "type": "AdminBasicInfoService",
              "name": "adminBasicInfoService",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "attributes": {
                "default": "/api/v1/adminbasicservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllContacts",
              "parameterContents": "\"[getAllContacts][Find All Contacts by admin][getAllContacts] \"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllContacts",
              "parameterContents": "adminBasicInfoService.getAllContacts(headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "getAllContacts",
              "parameterContents": "headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getAllContacts",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteContacts",
              "parameterContents": "\"[deleteContacts][Delete Contacts by admin][contactsId: {}]\",contactsId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteContacts",
              "parameterContents": "adminBasicInfoService.deleteContact(contactsId, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "deleteContacts",
              "parameterContents": "contactsId,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "deleteContact",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyContacts",
              "parameterContents": "\"[modifyContacts][Modify Contacts by admin][Contacts name:{}]\",mci.getName()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "mci",
              "objectType": "Contacts",
              "calledFrom": "modifyContacts",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getName",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyContacts",
              "parameterContents": "adminBasicInfoService.modifyContact(mci, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "modifyContacts",
              "parameterContents": "mci,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "modifyContact",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addContacts",
              "parameterContents": "\"[addContacts][Modify Contacts by admin][Contacts name: {}]\",c.getName()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "c",
              "objectType": "Contacts",
              "calledFrom": "addContacts",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getName",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addContacts",
              "parameterContents": "adminBasicInfoService.addContact(c, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "addContacts",
              "parameterContents": "c,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "addContact",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllStations",
              "parameterContents": "\"[getAllStations][Find All Station by admin][getAllStations]\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllStations",
              "parameterContents": "adminBasicInfoService.getAllStations(headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "getAllStations",
              "parameterContents": "headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getAllStations",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteStation",
              "parameterContents": "\"[deleteStation][Delete Station by admin][Station id: {}]\",id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteStation",
              "parameterContents": "adminBasicInfoService.deleteStation(id, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "deleteStation",
              "parameterContents": "id,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "deleteStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyStation",
              "parameterContents": "\"[modifyStation][Modify Station by admin][Station id: {}]\",s.getId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "s",
              "objectType": "Station",
              "calledFrom": "modifyStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyStation",
              "parameterContents": "adminBasicInfoService.modifyStation(s, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "modifyStation",
              "parameterContents": "s,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "modifyStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addStation",
              "parameterContents": "\"[addStation][Add Station by admin][Station id: {}]\",s.getId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "s",
              "objectType": "Station",
              "calledFrom": "addStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addStation",
              "parameterContents": "adminBasicInfoService.addStation(s, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "addStation",
              "parameterContents": "s,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "addStation",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllTrains",
              "parameterContents": "\"[getAllTrains][Find All Train by admin][getAllStations]\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllTrains",
              "parameterContents": "adminBasicInfoService.getAllTrains(headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "getAllTrains",
              "parameterContents": "headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getAllTrains",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteTrain",
              "parameterContents": "\"[deleteTrain][Delete Train by admin][train id: {}]\",id",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteTrain",
              "parameterContents": "adminBasicInfoService.deleteTrain(id, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "deleteTrain",
              "parameterContents": "id,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "deleteTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyTrain",
              "parameterContents": "\"[modifyTrain][Modify Train by admin][TrainType id: {}]\",t.getId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "t",
              "objectType": "TrainType",
              "calledFrom": "modifyTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyTrain",
              "parameterContents": "adminBasicInfoService.modifyTrain(t, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "modifyTrain",
              "parameterContents": "t,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "modifyTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addTrain",
              "parameterContents": "\"[addTrain][Add Train by admin][TrainType id: {}]\",t.getId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "t",
              "objectType": "TrainType",
              "calledFrom": "addTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addTrain",
              "parameterContents": "adminBasicInfoService.addTrain(t, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "addTrain",
              "parameterContents": "t,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "addTrain",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllConfigs",
              "parameterContents": "\"[getAllConfigs][Find All Config by admin][getAllConfigs]\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllConfigs",
              "parameterContents": "adminBasicInfoService.getAllConfigs(headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "getAllConfigs",
              "parameterContents": "headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getAllConfigs",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteConfig",
              "parameterContents": "\"[deleteConfig][Delete Config by admin][Config name: {}]\",name",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteConfig",
              "parameterContents": "adminBasicInfoService.deleteConfig(name, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "deleteConfig",
              "parameterContents": "name,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "deleteConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyConfig",
              "parameterContents": "\"[modifyConfig][Modify Config by admin][Config name: {}]\",c.getName()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "c",
              "objectType": "Config",
              "calledFrom": "modifyConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getName",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyConfig",
              "parameterContents": "adminBasicInfoService.modifyConfig(c, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "modifyConfig",
              "parameterContents": "c,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "modifyConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addConfig",
              "parameterContents": "\"[addConfig][Add Config by admin][Config name: {}]\",c.getName()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "c",
              "objectType": "Config",
              "calledFrom": "addConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getName",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addConfig",
              "parameterContents": "adminBasicInfoService.addConfig(c, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "addConfig",
              "parameterContents": "c,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "addConfig",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllPrices",
              "parameterContents": "\"[getAllPrices][Find All Price by admin][getAllPrices]\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllPrices",
              "parameterContents": "adminBasicInfoService.getAllPrices(headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "getAllPrices",
              "parameterContents": "headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getAllPrices",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deletePrice",
              "parameterContents": "\"[deletePrice][Delete Price by admin][PriceInfo id: {}]\",pricesId",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deletePrice",
              "parameterContents": "adminBasicInfoService.deletePrice(pricesId, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "deletePrice",
              "parameterContents": "pricesId,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "deletePrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyPrice",
              "parameterContents": "\"[modifyPrice][Modify Price by admin][PriceInfo id: {}]\",pi.getId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "pi",
              "objectType": "PriceInfo",
              "calledFrom": "modifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyPrice",
              "parameterContents": "adminBasicInfoService.modifyPrice(pi, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "modifyPrice",
              "parameterContents": "pi,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "modifyPrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addPrice",
              "parameterContents": "\"[addPrice][Add Price by admin[PriceInfo id: {}]\",pi.getId()",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "info",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "pi",
              "objectType": "PriceInfo",
              "calledFrom": "addPrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "getId",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addPrice",
              "parameterContents": "adminBasicInfoService.addPrice(pi, headers)",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "ok",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            },
            {
              "objectName": "adminBasicInfoService",
              "objectType": "AdminBasicInfoService",
              "calledFrom": "addPrice",
              "parameterContents": "pi,headers",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoController",
              "name": "addPrice",
              "packageAndClassName": "adminbasic.controller.AdminBasicInfoController"
            }
          ],
          "name": "AdminBasicInfoController",
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "adminbasic.service",
          "implementedTypes": [
            "AdminBasicInfoService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                },
                {
                  "type": "Station",
                  "annotations": [],
                  "name": "s",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "addStation",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "getAllContacts",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                },
                {
                  "type": "TrainType",
                  "annotations": [],
                  "name": "t",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "addTrain",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Contacts",
                  "annotations": [],
                  "name": "mci",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "modifyContact",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                },
                {
                  "type": "Config",
                  "annotations": [],
                  "name": "c",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "addConfig",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [],
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "contactsId",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "deleteContact",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                },
                {
                  "type": "PriceInfo",
                  "annotations": [],
                  "name": "pi",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-basic-info-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
                }
              ],
              "className": "AdminBasicInfoServiceImpl",
              "name": "addPrice",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllContacts",
              "parameterContents": "\"ts-contacts-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/api/v1/contactservice/contacts",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllContacts",
              "parameterContents": "contacts_service_url + \"/api/v1/contactservice/contacts\",HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllContacts",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteContact",
              "parameterContents": "\"ts-contacts-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/api/v1/contactservice/contacts/{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteContact",
              "parameterContents": "contacts_service_url + \"/api/v1/contactservice/contacts/\" + contactsId,HttpMethod.DELETE,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteContact",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyContact",
              "parameterContents": "\"ts-contacts-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/api/v1/contactservice/contacts",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "modifyContact",
              "parameterContents": "contacts_service_url + \"/api/v1/contactservice/contacts\",HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "modifyContact",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addContact",
              "parameterContents": "\"ts-contacts-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/api/v1/contactservice/contacts/admin",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addContact",
              "parameterContents": "contacts_service_url + \"/api/v1/contactservice/contacts/admin\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addContact",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllStations",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllStations",
              "parameterContents": "stations,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllStations",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addStation",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addStation",
              "parameterContents": "stations,HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteStation",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteStation",
              "parameterContents": "path,HttpMethod.DELETE,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyStation",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "modifyStation",
              "parameterContents": "stations,HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "modifyStation",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllTrains",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllTrains",
              "parameterContents": "trains,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllTrains",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addTrain",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addTrain",
              "parameterContents": "trains,HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteTrain",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/api/v1/trainservice/trains/{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteTrain",
              "parameterContents": "train_service_url + \"/api/v1/trainservice/trains/\" + id,HttpMethod.DELETE,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyTrain",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "modifyTrain",
              "parameterContents": "trains,HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "modifyTrain",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllConfigs",
              "parameterContents": "\"ts-config-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllConfigs",
              "parameterContents": "configs,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllConfigs",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addConfig",
              "parameterContents": "\"ts-config-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addConfig",
              "parameterContents": "configs,HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteConfig",
              "parameterContents": "\"ts-config-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "/api/v1/configservice/configs/{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteConfig",
              "parameterContents": "config_service_url + \"/api/v1/configservice/configs/\" + name,HttpMethod.DELETE,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyConfig",
              "parameterContents": "\"ts-config-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "modifyConfig",
              "parameterContents": "configs,HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "modifyConfig",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllPrices",
              "parameterContents": "\"ts-price-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllPrices",
              "parameterContents": "prices,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllPrices",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addPrice",
              "parameterContents": "\"ts-price-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addPrice",
              "parameterContents": "prices,HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addPrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deletePrice",
              "parameterContents": "\"ts-price-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deletePrice",
              "parameterContents": "path,HttpMethod.DELETE,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deletePrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyPrice",
              "parameterContents": "\"ts-price-service\"",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "modifyPrice",
              "parameterContents": "prices,HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "modifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-admin-basic-info-service",
              "className": "AdminBasicInfoServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
            }
          ],
          "name": "AdminBasicInfoServiceImpl",
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-admin-basic-info-service",
              "artifactId": "ts-admin-basic-info-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-admin-basic-info-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18767
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-admin-basic-info-service"
              }
            },
            "swagger": {
              "controllerPackage": "adminbasic.microservice"
            }
          },
          "name": "application.yml",
          "path": "/ts-admin-basic-info-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-admin-order-service",
      "path": "/ts-admin-order-service",
      "controllers": [
        {
          "packageName": "adminorder.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/adminorderservice/adminorder",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminorder"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "className": "AdminOrderController",
              "name": "addOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "url": "/api/v1/adminorderservice/adminorder",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/adminorder"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "className": "AdminOrderController",
              "name": "getAllOrders",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "url": "/api/v1/adminorderservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "className": "AdminOrderController",
              "name": "home",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "url": "/api/v1/adminorderservice/adminorder",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminorder"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "className": "AdminOrderController",
              "name": "updateOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "url": "/api/v1/adminorderservice/adminorder/{?}/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminorder.controller.AdminOrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminorder/{orderId}/{trainNumber}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "adminorder.controller.AdminOrderController"
                }
              ],
              "className": "AdminOrderController",
              "name": "deleteOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "type": "AdminOrderService",
              "name": "adminOrderService",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/adminorderservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Get all orders][getAllOrders]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "info",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllOrders",
              "parameterContents": "adminOrderService.getAllOrders(headers)",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "ok",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "adminOrderService",
              "objectType": "AdminOrderService",
              "calledFrom": "getAllOrders",
              "parameterContents": "headers",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "getAllOrders",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "addOrder",
              "parameterContents": "\"[addOrder][Add new order][AccountID: {}]\",request.getAccountId()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "info",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "request",
              "objectType": "Order",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "getAccountId",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addOrder",
              "parameterContents": "adminOrderService.addOrder(request, headers)",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "ok",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "adminOrderService",
              "objectType": "AdminOrderService",
              "calledFrom": "addOrder",
              "parameterContents": "request,headers",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "addOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Update order][AccountID: {}, OrderId: {}]\",request.getAccountId(),request.getId()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "info",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "request",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "getAccountId",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "request",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "getId",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "adminOrderService.updateOrder(request, headers)",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "ok",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "adminOrderService",
              "objectType": "AdminOrderService",
              "calledFrom": "updateOrder",
              "parameterContents": "request,headers",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "updateOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[deleteOrder][Delete order][OrderId: {}, TrainNumber: {}]\",orderId,trainNumber",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "info",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "adminOrderService.deleteOrder(orderId, trainNumber, headers)",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "ok",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            },
            {
              "objectName": "adminOrderService",
              "objectType": "AdminOrderService",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderId,trainNumber,headers",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderController",
              "name": "deleteOrder",
              "packageAndClassName": "adminorder.controller.AdminOrderController"
            }
          ],
          "name": "AdminOrderController",
          "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "adminorder.service",
          "implementedTypes": [
            "AdminOrderService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "className": "AdminOrderServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "className": "AdminOrderServiceImpl",
              "name": "getAllOrders",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "className": "AdminOrderServiceImpl",
              "name": "deleteOrder",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-order-service",
              "annotations": [],
              "className": "AdminOrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Get All Orders: Generate Reponse Begin]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllOrders",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order\",HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<ArrayList<Order>>>() {\r\n}",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Get Orders From ts-order-service successfully!]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getData",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "getAllOrders",
              "parameterContents": "orders1",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "addAll",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][receive response][Get Orders From ts-order-service fail!]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "error",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllOrders",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther\",HttpMethod.GET,requestEntity2,new ParameterizedTypeReference<Response<ArrayList<Order>>>() {\r\n}",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "re2",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Get Orders From ts-order-other-service successfully!]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getData",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "getAllOrders",
              "parameterContents": "orders1",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "addAll",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][receive response][Get Orders From ts-order-other-service fail!]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "error",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[deleteOrder][Delete Order][orderId: {}, trainNumber: {}]\",orderId,trainNumber",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order/{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteOrder",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order/\" + orderId,HttpMethod.DELETE,requestEntity,Response.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[deleteOrder][Delete Order Other][trainNumber doesn't starts With G or D]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteOrder",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther/\" + orderId,HttpMethod.DELETE,requestEntity,Response.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][UPDATE ORDER INFO][request info: {}]\",request.toString()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Update Order][trainNumber starts With G or D]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order/admin",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateOrder",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order/admin\",HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Add New Order Other][trainNumber doesn't starts With G or D]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/admin",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateOrder",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther/admin\",HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "addOrder",
              "parameterContents": "\"[addOrder][ADD ORDER][request info: {}]\",request.toString()",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "Order",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "addOrder",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "Order",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "addOrder",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "Order",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addOrder",
              "parameterContents": "\"[addOrder][Add New Order][trainNumber starts With G or D]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order/admin",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addOrder",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order/admin\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addOrder",
              "parameterContents": "\"[addOrder][Add New Order Other][trainNumber doesn't starts With G or D]\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addOrder",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/admin",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addOrder",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther/admin\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addOrder",
              "parameterContents": "",
              "microserviceName": "ts-admin-order-service",
              "className": "AdminOrderServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminorder.service.AdminOrderServiceImpl"
            }
          ],
          "name": "AdminOrderServiceImpl",
          "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.services",
                  "artifactId": "ts-common",
                  "version": "0.1.0"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-admin-order-service",
              "artifactId": "ts-admin-order-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-admin-order-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 16112
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-admin-order-service"
              }
            },
            "swagger": {
              "controllerPackage": "adminorder.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-admin-order-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-admin-route-service",
      "path": "/ts-admin-route-service",
      "controllers": [
        {
          "packageName": "adminroute.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/adminrouteservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminroute.controller.AdminRouteController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "className": "AdminRouteController",
              "name": "home",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "url": "/api/v1/adminrouteservice/adminroute/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminroute.controller.AdminRouteController"
                    }
                  ],
                  "name": "routeId",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminroute.controller.AdminRouteController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminroute/{routeId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "className": "AdminRouteController",
              "name": "deleteRoute",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "url": "/api/v1/adminrouteservice/adminroute",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminroute.controller.AdminRouteController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                },
                {
                  "type": "RouteInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminroute.controller.AdminRouteController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/adminroute"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "className": "AdminRouteController",
              "name": "addRoute",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "url": "/api/v1/adminrouteservice/adminroute",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminroute.controller.AdminRouteController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                },
                {
                  "attributes": {
                    "path": "/adminroute"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminroute.controller.AdminRouteController"
                }
              ],
              "className": "AdminRouteController",
              "name": "getAllRoutes",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            }
          ],
          "fields": [
            {
              "type": "AdminRouteService",
              "name": "adminRouteService",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/adminrouteservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getAllRoutes",
              "parameterContents": "\"[getAllRoutes][Get all routes request]\"",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "info",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllRoutes",
              "parameterContents": "adminRouteService.getAllRoutes(headers)",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "ok",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "adminRouteService",
              "objectType": "AdminRouteService",
              "calledFrom": "getAllRoutes",
              "parameterContents": "headers",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "getAllRoutes",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "addRoute",
              "parameterContents": "\"[addRoute][Create and modify route][route id: {}, from station {} to station {}]\",request.getId(),request.getStartStation(),request.getEndStation()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "info",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "request",
              "objectType": "RouteInfo",
              "calledFrom": "addRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "getId",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "request",
              "objectType": "RouteInfo",
              "calledFrom": "addRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "getStartStation",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "request",
              "objectType": "RouteInfo",
              "calledFrom": "addRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "getEndStation",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addRoute",
              "parameterContents": "adminRouteService.createAndModifyRoute(request, headers)",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "ok",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "adminRouteService",
              "objectType": "AdminRouteService",
              "calledFrom": "addRoute",
              "parameterContents": "request,headers",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "createAndModifyRoute",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "deleteRoute",
              "parameterContents": "\"[deleteRoute][Delete route][route id: {}]\",routeId",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "info",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteRoute",
              "parameterContents": "adminRouteService.deleteRoute(routeId, headers)",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "ok",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            },
            {
              "objectName": "adminRouteService",
              "objectType": "AdminRouteService",
              "calledFrom": "deleteRoute",
              "parameterContents": "routeId,headers",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteController",
              "name": "deleteRoute",
              "packageAndClassName": "adminroute.controller.AdminRouteController"
            }
          ],
          "name": "AdminRouteController",
          "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "adminroute.service",
          "implementedTypes": [
            "AdminRouteService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "className": "AdminRouteServiceImpl",
              "name": "deleteRoute",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stationNames",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-route-service",
              "annotations": [],
              "className": "AdminRouteServiceImpl",
              "name": "checkStationsExists",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-route-service",
              "annotations": [],
              "className": "AdminRouteServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                },
                {
                  "type": "RouteInfo",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "className": "AdminRouteServiceImpl",
              "name": "createAndModifyRoute",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
                }
              ],
              "className": "AdminRouteServiceImpl",
              "name": "getAllRoutes",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllRoutes",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllRoutes",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes\",HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllRoutes",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStatusCode",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getAllRoutes",
              "parameterContents": "\"[getAllRoutes][receive response][Get routes error][response code: {}]\",re.getStatusCodeValue()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "error",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllRoutes",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStatusCodeValue",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllRoutes",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStations",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "start",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "contains",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "end",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "contains",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "\"[createAndModifyRoute][check stations][start or end not included in stationList][start: {}, end: {}]\",start,end",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "error",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "stations,headers",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "checkStationsExists",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<Route>>() {\r\n}",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStatusCode",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "\"[createAndModifyRoute][receive response][Get status error][response code: {}]\",re.getStatusCodeValue()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "error",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStatusCodeValue",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteRoute",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes/{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteRoute",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes/\" + routeId,HttpMethod.DELETE,requestEntity,Response.class",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStatusCode",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "deleteRoute",
              "parameterContents": "\"[deleteRoute][response response][Delete error][response code: {}]\",re.getStatusCodeValue()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "error",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStatusCodeValue",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteRoute",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "checkStationsExists",
              "parameterContents": "\"[checkStationsExists][Check Stations Exists][stationNames: {}]\",stationNames",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "info",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "checkStationsExists",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "url": "/api/v1/stationservice/stations/idlist",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "checkStationsExists",
              "parameterContents": "station_service_url + \"/api/v1/stationservice/stations/idlist\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getData",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "stationMap",
              "objectType": "Map",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "entrySet",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Entry",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getValue",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "notExists",
              "objectType": "List",
              "calledFrom": "checkStationsExists",
              "parameterContents": "s.getKey()",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "add",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Entry",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "getKey",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            },
            {
              "objectName": "notExists",
              "objectType": "List",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-route-service",
              "className": "AdminRouteServiceImpl",
              "name": "size",
              "packageAndClassName": "adminroute.service.AdminRouteServiceImpl"
            }
          ],
          "name": "AdminRouteServiceImpl",
          "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.services",
                  "artifactId": "ts-common",
                  "version": "0.1.0"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-admin-route-service",
              "artifactId": "ts-admin-route-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-admin-route-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 16113
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-admin-route-service"
              }
            },
            "swagger": {
              "controllerPackage": "adminroute.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-admin-route-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-admin-travel-service",
      "path": "/ts-admin-travel-service",
      "controllers": [
        {
          "packageName": "admintravel.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/admintravelservice/admintravel",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TravelInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/admintravel"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "className": "AdminTravelController",
              "name": "addTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "url": "/api/v1/admintravelservice/admintravel",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "TravelInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/admintravel"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "className": "AdminTravelController",
              "name": "updateTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "url": "/api/v1/admintravelservice/admintravel/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/admintravel/{tripId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "className": "AdminTravelController",
              "name": "deleteTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "url": "/api/v1/admintravelservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "className": "AdminTravelController",
              "name": "home",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "url": "/api/v1/admintravelservice/admintravel",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "admintravel.controller.AdminTravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                },
                {
                  "attributes": {
                    "path": "/admintravel"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "admintravel.controller.AdminTravelController"
                }
              ],
              "className": "AdminTravelController",
              "name": "getAllTravels",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            }
          ],
          "fields": [
            {
              "type": "AdminTravelService",
              "name": "adminTravelService",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/admintravelservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[getAllTravels][Get all travels]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "info",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllTravels",
              "parameterContents": "adminTravelService.getAllTravels(headers)",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "ok",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "adminTravelService",
              "objectType": "AdminTravelService",
              "calledFrom": "getAllTravels",
              "parameterContents": "headers",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getAllTravels",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "addTravel",
              "parameterContents": "\"[addTravel][Add travel][trip id: {}, train type name: {}, form station {} to station {}, login id: {}]\",request.getTripId(),request.getTrainTypeName(),request.getStartStationName(),request.getStationsName(),request.getLoginId()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "info",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getTripId",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getTrainTypeName",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getStartStationName",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getStationsName",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getLoginId",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addTravel",
              "parameterContents": "adminTravelService.addTravel(request, headers)",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "ok",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "adminTravelService",
              "objectType": "AdminTravelService",
              "calledFrom": "addTravel",
              "parameterContents": "request,headers",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "addTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "updateTravel",
              "parameterContents": "\"[updateTravel][Update travel][trip id: {}, train type id: {}, form station {} to station {}, login id: {}]\",request.getTripId(),request.getTrainTypeName(),request.getStartStationName(),request.getStationsName(),request.getLoginId()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "info",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getTripId",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getTrainTypeName",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getStartStationName",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getStationsName",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "getLoginId",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateTravel",
              "parameterContents": "adminTravelService.updateTravel(request, headers)",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "ok",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "adminTravelService",
              "objectType": "AdminTravelService",
              "calledFrom": "updateTravel",
              "parameterContents": "request,headers",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "updateTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "deleteTravel",
              "parameterContents": "\"[deleteTravel][Delete travel][trip id: {}]\",tripId",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "info",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteTravel",
              "parameterContents": "adminTravelService.deleteTravel(tripId, headers)",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "ok",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            },
            {
              "objectName": "adminTravelService",
              "objectType": "AdminTravelService",
              "calledFrom": "deleteTravel",
              "parameterContents": "tripId,headers",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelController",
              "name": "deleteTravel",
              "packageAndClassName": "admintravel.controller.AdminTravelController"
            }
          ],
          "name": "AdminTravelController",
          "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "admintravel.service",
          "implementedTypes": [
            "AdminTravelService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                },
                {
                  "type": "TravelInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [],
              "className": "AdminTravelServiceImpl",
              "name": "checkTravelInfo",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [],
              "className": "AdminTravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "className": "AdminTravelServiceImpl",
              "name": "getAllTravels",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "className": "AdminTravelServiceImpl",
              "name": "deleteTravel",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stationNames",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [],
              "className": "AdminTravelServiceImpl",
              "name": "checkStationsExists",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                },
                {
                  "type": "TravelInfo",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "className": "AdminTravelServiceImpl",
              "name": "addTravel",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainTypeName",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [],
              "className": "AdminTravelServiceImpl",
              "name": "queryTrainTypeByName",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-travel-service",
              "annotations": [],
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[getAllTravels][Get All Travels]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/api/v1/travelservice/admin_trip",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllTravels",
              "parameterContents": "travel_service_url + \"/api/v1/travelservice/admin_trip\",HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<ArrayList<AdminTrip>>>() {\r\n}",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllTravels",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAllTravels",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAllTravels",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[getAllTravels][Get Travel From ts-travel-service successfully!]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "trips",
              "objectType": "AdminTrip",
              "calledFrom": "getAllTravels",
              "parameterContents": "adminTrips",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "addAll",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[getAllTravels][receive response][Get Travel From ts-travel-service fail!]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "error",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"ts-travel2-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/api/v1/travel2service/admin_trip",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllTravels",
              "parameterContents": "travel2_service_url + \"/api/v1/travel2service/admin_trip\",HttpMethod.GET,requestEntity2,new ParameterizedTypeReference<Response<ArrayList<AdminTrip>>>() {\r\n}",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "re2",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllTravels",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAllTravels",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[getAllTravels][Get Travel From ts-travel2-service successfully!]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAllTravels",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "trips",
              "objectType": "AdminTrip",
              "calledFrom": "getAllTravels",
              "parameterContents": "adminTrips",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "addAll",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllTravels",
              "parameterContents": "\"[getAllTravels][receive response][Get Travel From ts-travel2-service fail!]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "error",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAllTravels",
              "parameterContents": "trips",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setData",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addTravel",
              "parameterContents": "request,headers",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "checkTravelInfo",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addTravel",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addTravel",
              "parameterContents": "\"ts-travel2-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "addTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "addTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addTravel",
              "parameterContents": "requestUrl,HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addTravel",
              "parameterContents": "\"[addTravel][Admin add new travel][success]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addTravel",
              "parameterContents": "\"[addTravel][receive response][Admin add new travel failed][trip id: {}]\",request.getTripId()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "error",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "addTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateTravel",
              "parameterContents": "request,headers",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "checkTravelInfo",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateTravel",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateTravel",
              "parameterContents": "\"ts-travel2-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "TravelInfo",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "updateTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "updateTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateTravel",
              "parameterContents": "requestUrl,HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "updateTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateTravel",
              "parameterContents": "\"[updateTravel][Admin update travel failed]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateTravel",
              "parameterContents": "\"[updateTravel][Admin update travel][success]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteTravel",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteTravel",
              "parameterContents": "\"ts-travel2-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "deleteTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "deleteTravel",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "charAt",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteTravel",
              "parameterContents": "requestUtl,HttpMethod.DELETE,requestEntity,Response.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "deleteTravel",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteTravel",
              "parameterContents": "\"[deleteTravel][receive response][Admin delete travel failed][trip id: {}]\",tripId",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "error",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteTravel",
              "parameterContents": "\"[deleteTravel][Admin delete travel success][trip id: {}]\",tripId",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStartStationName",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTerminalStationName",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "start",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "add",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "end",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "add",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "stations,headers",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "checkStationsExists",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "info.getTrainTypeName(),headers",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "queryTrainTypeByName",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "\"[queryForTravel][traintype doesn't exist][trainTypeName: {}]\",info.getTrainTypeName()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "\"Train type doesn't exist\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "routeId,headers",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "\"Route doesn't exist\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "start",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "contains",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "end",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "contains",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "start",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "end",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "0",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "\"Station not correct in Route\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "checkTravelInfo",
              "parameterContents": "1",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "checkStationsExists",
              "parameterContents": "\"[checkStationsExists][Check Stations Exists][stationNames: {}]\",stationNames",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "checkStationsExists",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/api/v1/stationservice/stations/idlist",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "checkStationsExists",
              "parameterContents": "station_service_url + \"/api/v1/stationservice/stations/idlist\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "stationMap",
              "objectType": "Map",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "entrySet",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Entry",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getValue",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "notExists",
              "objectType": "List",
              "calledFrom": "checkStationsExists",
              "parameterContents": "s.getKey()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "add",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Entry",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getKey",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "notExists",
              "objectType": "List",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "size",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "\"[queryTrainTypeByName][Query Train Type][Train Type name: {}]\",trainTypeName",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/api/v1/trainservice/trains/byName/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "train_service_url + \"/api/v1/trainservice/trains/byName/\" + trainTypeName,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "response.getData(),TrainType.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id][Route ID：{}]\",routeId",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes/\" + routeId,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id Failed][Fail msg: {}]\",result.getMsg()",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id][Success]\"",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "info",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "result.getData(),Route.class",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-admin-travel-service",
              "className": "AdminTravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "admintravel.service.AdminTravelServiceImpl"
            }
          ],
          "name": "AdminTravelServiceImpl",
          "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.services",
                  "artifactId": "ts-common",
                  "version": "0.1.0"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-admin-travel-service",
              "artifactId": "ts-admin-travel-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-admin-travel-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 16114
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-admin-travel-service"
              }
            },
            "swagger": {
              "controllerPackage": "admintravel.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-admin-travel-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-admin-user-service",
      "path": "/ts-admin-user-service",
      "controllers": [
        {
          "packageName": "adminuser.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/adminuserservice/users/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "className": "AdminUserController",
              "name": "home",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "url": "/api/v1/adminuserservice/users",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "UserDto",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "userDto",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "PutMapping",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "className": "AdminUserController",
              "name": "updateUser",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "url": "/api/v1/adminuserservice/users/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "userId",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/{userId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "className": "AdminUserController",
              "name": "deleteUser",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "url": "/api/v1/adminuserservice/users",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "UserDto",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "userDto",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "PostMapping",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "className": "AdminUserController",
              "name": "addUser",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "url": "/api/v1/adminuserservice/users",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "adminuser.controller.AdminUserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                },
                {
                  "attributes": {},
                  "name": "GetMapping",
                  "packageAndClassName": "adminuser.controller.AdminUserController"
                }
              ],
              "className": "AdminUserController",
              "name": "getAllUsers",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "type": "AdminUserService",
              "name": "adminUserService",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/adminuserservice/users"
              },
              "name": "RequestMapping",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getAllUsers",
              "parameterContents": "\"[getAllUsers][Get all users]\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "info",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllUsers",
              "parameterContents": "adminUserService.getAllUsers(headers)",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "ok",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "adminUserService",
              "objectType": "AdminUserService",
              "calledFrom": "getAllUsers",
              "parameterContents": "headers",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "getAllUsers",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "updateUser",
              "parameterContents": "\"[updateUser][Update User][userName: {}]\",userDto.getUserName()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "info",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "getUserName",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "adminUserService.updateUser(userDto, headers)",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "ok",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "adminUserService",
              "objectType": "AdminUserService",
              "calledFrom": "updateUser",
              "parameterContents": "userDto,headers",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "updateUser",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "addUser",
              "parameterContents": "\"[addUser][Add user][userName: {}]\",userDto.getUserName()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "info",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "addUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "getUserName",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addUser",
              "parameterContents": "adminUserService.addUser(userDto, headers)",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "ok",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "adminUserService",
              "objectType": "AdminUserService",
              "calledFrom": "addUser",
              "parameterContents": "userDto,headers",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "addUser",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "deleteUser",
              "parameterContents": "\"[deleteUser][Delete user][userId: {}]\",userId",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "info",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteUser",
              "parameterContents": "adminUserService.deleteUser(userId, headers)",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "ok",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            },
            {
              "objectName": "adminUserService",
              "objectType": "AdminUserService",
              "calledFrom": "deleteUser",
              "parameterContents": "userId,headers",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserController",
              "name": "deleteUser",
              "packageAndClassName": "adminuser.controller.AdminUserController"
            }
          ],
          "name": "AdminUserController",
          "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "adminuser.service",
          "implementedTypes": [
            "AdminUserService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                },
                {
                  "type": "UserDto",
                  "annotations": [],
                  "name": "userDto",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "className": "AdminUserServiceImpl",
              "name": "updateUser",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "className": "AdminUserServiceImpl",
              "name": "getAllUsers",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-admin-user-service",
              "annotations": [],
              "className": "AdminUserServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "userId",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-admin-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
                }
              ],
              "className": "AdminUserServiceImpl",
              "name": "deleteUser",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllUsers",
              "parameterContents": "\"ts-user-service\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllUsers",
              "parameterContents": "USER_SERVICE_IP_URI,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<List<User>>>() {\r\n}",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllUsers",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllUsers",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllUsers",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllUsers",
              "parameterContents": "\"[getAllUsers][receive response][Get All Users error]\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "error",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllUsers",
              "parameterContents": "\"[getAllUsers][Get All Users][success]\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "info",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllUsers",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "headers",
              "objectType": "HttpHeaders",
              "calledFrom": "deleteUser",
              "parameterContents": "HttpHeaders.AUTHORIZATION",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getFirst",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "newHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "deleteUser",
              "parameterContents": "HttpHeaders.AUTHORIZATION,token",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "set",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteUser",
              "parameterContents": "\"ts-user-service\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "url": "/{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteUser",
              "parameterContents": "USER_SERVICE_IP_URI + \"/\" + userId,HttpMethod.DELETE,requestEntity,Response.class",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteUser",
              "parameterContents": "\"[deleteUser][receive response][Delete user error][userId: {}]\",userId",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "error",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteUser",
              "parameterContents": "\"[deleteUser][Delete user success][userId: {}]\",userId",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "info",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateUser",
              "parameterContents": "\"UPDATE USER: \" + userDto.toString()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "info",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "toString",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "headers",
              "objectType": "HttpHeaders",
              "calledFrom": "updateUser",
              "parameterContents": "HttpHeaders.AUTHORIZATION",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getFirst",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "newHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "updateUser",
              "parameterContents": "HttpHeaders.AUTHORIZATION,token",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "set",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "\"ts-user-service\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateUser",
              "parameterContents": "USER_SERVICE_IP_URI,HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateUser",
              "parameterContents": "\"[updateUser][receive response][Update user error][userName: {}]\",userName",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "error",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateUser",
              "parameterContents": "\"[updateUser][Update user success][userName: {}]\",userName",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "info",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "addUser",
              "parameterContents": "\"[addUser][ADD USER INFO][UserDto: {}]\",userDto.toString()",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "info",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "addUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "toString",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addUser",
              "parameterContents": "\"ts-user-service\"",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "url": "/register",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addUser",
              "parameterContents": "USER_SERVICE_IP_URI + \"/register\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<User>>() {\r\n}",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "exchange",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "addUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "addUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addUser",
              "parameterContents": "\"[addUser][receive response][Add user error][userName: {}]\",userName",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "error",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addUser",
              "parameterContents": "\"[addUser][Add user success][userName: {}]\",userName",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "info",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "addUser",
              "parameterContents": "",
              "microserviceName": "ts-admin-user-service",
              "className": "AdminUserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "adminuser.service.AdminUserServiceImpl"
            }
          ],
          "name": "AdminUserServiceImpl",
          "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.services",
                  "artifactId": "ts-common",
                  "version": "0.1.0"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-admin-user-service",
              "artifactId": "ts-admin-user-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-admin-user-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 16115
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-admin-user-service"
              }
            },
            "swagger": {
              "controllerPackage": "adminuser.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-admin-user-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-assurance-service",
      "path": "/ts-assurance-service",
      "controllers": [
        {
          "packageName": "assurance.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/assuranceservice/assurances/orderid/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "path": "/assurances/orderid/{orderId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "deleteAssuranceByOrderId",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/api/v1/assuranceservice/assurances/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "type": "int",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "typeIndex",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/assurances/{typeIndex}/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "createNewAssurance",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/api/v1/assuranceservice/assurances/assuranceid/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "assuranceId",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "path": "/assurances/assuranceid/{assuranceId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "deleteAssurance",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/api/v1/assuranceservice/assurances/{?}/{?}/{?}",
              "httpMethod": "PATCH",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "assuranceId",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "type": "int",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "typeIndex",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "path": "/assurances/{assuranceId}/{orderId}/{typeIndex}"
                  },
                  "name": "PatchMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "modifyAssurance",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/api/v1/assuranceservice/assurances/assuranceid/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "assuranceId",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "path": "/assurances/assuranceid/{assuranceId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "getAssuranceById",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/api/v1/assuranceservice/assurances",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "path": "/assurances"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "getAllAssurances",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/api/v1/assuranceservice/assurances/types",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/assurances/types"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "getAllAssuranceType",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/api/v1/assuranceservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "home",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "url": "/api/v1/assuranceservice/assurance/orderid/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "assurance.controller.AssuranceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/assurance/orderid/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "assurance.controller.AssuranceController"
                }
              ],
              "className": "AssuranceController",
              "name": "findAssuranceByOrderId",
              "packageAndClassName": "assurance.controller.AssuranceController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "type": "AssuranceService",
              "name": "assuranceService",
              "packageAndClassName": "assurance.controller.AssuranceController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "attributes": {
                "default": "/api/v1/assuranceservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "assurance.controller.AssuranceController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllAssurances",
              "parameterContents": "\"[getAllAssurances][Get All Assurances]\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "info",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllAssurances",
              "parameterContents": "assuranceService.getAllAssurances(headers)",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "ok",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "getAllAssurances",
              "parameterContents": "headers",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "getAllAssurances",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllAssuranceType",
              "parameterContents": "\"[getAllAssuranceType][Get Assurance Type]\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "info",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllAssuranceType",
              "parameterContents": "assuranceService.getAllAssuranceTypes(headers)",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "ok",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "getAllAssuranceType",
              "parameterContents": "headers",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "getAllAssuranceTypes",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteAssurance",
              "parameterContents": "\"[deleteAssurance][Delete Assurance][assuranceId: {}]\",assuranceId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "info",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteAssurance",
              "parameterContents": "assuranceService.deleteById(UUID.fromString(assuranceId), headers)",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "ok",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "deleteAssurance",
              "parameterContents": "UUID.fromString(assuranceId),headers",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "deleteById",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteAssurance",
              "parameterContents": "assuranceId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "fromString",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteAssuranceByOrderId",
              "parameterContents": "\"[deleteAssuranceByOrderId][Delete Assurance by orderId][orderId: {}]\",orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "info",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteAssuranceByOrderId",
              "parameterContents": "assuranceService.deleteByOrderId(UUID.fromString(orderId), headers)",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "ok",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "deleteAssuranceByOrderId",
              "parameterContents": "UUID.fromString(orderId),headers",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "deleteByOrderId",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteAssuranceByOrderId",
              "parameterContents": "orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "fromString",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyAssurance",
              "parameterContents": "\"[modifyAssurance][Modify Assurance][assuranceId: {}, orderId: {}, typeIndex: {}]\",assuranceId,orderId,typeIndex",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "info",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyAssurance",
              "parameterContents": "assuranceService.modify(assuranceId, orderId, typeIndex, headers)",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "ok",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "modifyAssurance",
              "parameterContents": "assuranceId,orderId,typeIndex,headers",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "modify",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createNewAssurance",
              "parameterContents": "\"[createNewAssurance][Create new assurance][typeIndex: {}, orderId: {}]\",typeIndex,orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "info",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createNewAssurance",
              "parameterContents": "assuranceService.create(typeIndex, orderId, headers)",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "ok",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "createNewAssurance",
              "parameterContents": "typeIndex,orderId,headers",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "create",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAssuranceById",
              "parameterContents": "\"[getAssuranceById][Find assurance by assuranceId][assureId: {}]\",assuranceId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "info",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAssuranceById",
              "parameterContents": "assuranceService.findAssuranceById(UUID.fromString(assuranceId), headers)",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "ok",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "getAssuranceById",
              "parameterContents": "UUID.fromString(assuranceId),headers",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "findAssuranceById",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getAssuranceById",
              "parameterContents": "assuranceId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "fromString",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "\"[findAssuranceByOrderId][Find assurance by orderId][orderId: {}]\",orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "info",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "assuranceService.findAssuranceByOrderId(UUID.fromString(orderId), headers)",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "ok",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "assuranceService",
              "objectType": "AssuranceService",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "UUID.fromString(orderId),headers",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "findAssuranceByOrderId",
              "packageAndClassName": "assurance.controller.AssuranceController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceController",
              "name": "fromString",
              "packageAndClassName": "assurance.controller.AssuranceController"
            }
          ],
          "name": "AssuranceController",
          "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "assurance.service",
          "implementedTypes": [
            "AssuranceService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "className": "AssuranceServiceImpl",
              "name": "findAssuranceById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "typeIndex",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "className": "AssuranceServiceImpl",
              "name": "create",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "assurance.service.AssuranceServiceImpl"
                }
              ],
              "className": "AssuranceServiceImpl",
              "name": "getAllAssurances",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "AssuranceRepository",
              "name": "assuranceRepository",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "findAssuranceById",
              "parameterContents": "id.toString()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "id",
              "objectType": "UUID",
              "calledFrom": "findAssuranceById",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "toString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAssuranceById",
              "parameterContents": "\"[findAssuranceById][find assurance][No content][assurance id: {}]\",id",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "warn",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAssuranceById",
              "parameterContents": "\"[findAssuranceById][Find Assurance][assurance id: {}]\",id",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "info",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "orderId.toString()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "orderId",
              "objectType": "UUID",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "toString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "\"[findAssuranceByOrderId][find assurance][No content][orderId: {}]\",orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "warn",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAssuranceByOrderId",
              "parameterContents": "\"[findAssuranceByOrderId][find assurance success][orderId: {}]\",orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "info",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "create",
              "parameterContents": "orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "AssuranceType",
              "objectType": "Solving AssuranceType",
              "calledFrom": "create",
              "parameterContents": "typeIndex",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getTypeByIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][AddAssurance Fail][Assurance already exists][typeIndex: {}, orderId: {}]\",typeIndex,orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "error",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][AddAssurance Fail][Assurance type doesn't exist][typeIndex: {}, orderId: {}]\",typeIndex,orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "warn",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "toString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "toString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "create",
              "parameterContents": "assurance",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "save",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][AddAssurance][Success]\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "info",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "deleteById",
              "parameterContents": "assuranceId.toString()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceId",
              "objectType": "UUID",
              "calledFrom": "deleteById",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "toString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "deleteById",
              "parameterContents": "assuranceId.toString()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceId",
              "objectType": "UUID",
              "calledFrom": "deleteById",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "toString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteById",
              "parameterContents": "\"[deleteById][DeleteAssurance success][assuranceId: {}]\",assuranceId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "info",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteById",
              "parameterContents": "\"[deleteById][DeleteAssurance Fail][Assurance not clear][assuranceId: {}]\",assuranceId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "error",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "orderId.toString()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "removeAssuranceByOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "orderId",
              "objectType": "UUID",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "toString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "orderId.toString()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "orderId",
              "objectType": "UUID",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "toString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "\"[deleteByOrderId][DeleteAssurance Success][orderId: {}]\",orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "info",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteByOrderId",
              "parameterContents": "\"[deleteByOrderId][DeleteAssurance Fail][Assurance not clear][orderId: {}]\",orderId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "error",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modify",
              "parameterContents": "UUID.fromString(assuranceId),headers",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findAssuranceById",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "modify",
              "parameterContents": "assuranceId",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Assurance",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "get",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "oldAssuranceResponse",
              "objectType": "Response",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getData",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modify",
              "parameterContents": "\"[modify][ModifyAssurance Fail][Assurance not found][assuranceId: {}, orderId: {}, typeIndex: {}]\",assuranceId,orderId,typeIndex",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "error",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "AssuranceType",
              "objectType": "Solving AssuranceType",
              "calledFrom": "modify",
              "parameterContents": "typeIndex",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getTypeByIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "oldAssurance",
              "objectType": "Assurance",
              "calledFrom": "modify",
              "parameterContents": "at",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setType",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "modify",
              "parameterContents": "oldAssurance",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "save",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modify",
              "parameterContents": "\"[modify][ModifyAssurance Success][assuranceId: {}, orderId: {}, typeIndex: {}]\",assuranceId,orderId,typeIndex",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "info",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modify",
              "parameterContents": "\"[modify][ModifyAssurance Fail][Assurance Type not exist][assuranceId: {}, orderId: {}, typeIndex: {}]\",assuranceId,orderId,typeIndex",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "error",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "assuranceRepository",
              "objectType": "AssuranceRepository",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "findAll",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "as",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "pa",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "a.getId()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "a",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "pa",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "a.getOrderId()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "a",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "pa",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "a.getType().getIndex()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setTypeIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "a",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getType",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "pa",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "a.getType().getName()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setTypeName",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getName",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "a",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getType",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "pa",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "a.getType().getPrice()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setTypePrice",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "a",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getType",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "PlainAssurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "pa",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "add",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllAssurances",
              "parameterContents": "\"[getAllAssurances][find all assurance success][list size: {}]\",as.size()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "info",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "as",
              "objectType": "Assurance",
              "calledFrom": "getAllAssurances",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "size",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllAssurances",
              "parameterContents": "\"[getAllAssurances][find all assurance][No content]\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "warn",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "AssuranceType",
              "objectType": "Solving AssuranceType",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "values",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "atb",
              "objectType": "AssuranceTypeBean",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "at.getIndex()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "at",
              "objectType": "AssuranceType",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getIndex",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "atb",
              "objectType": "AssuranceTypeBean",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "at.getName()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setName",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "at",
              "objectType": "AssuranceType",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getName",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "atb",
              "objectType": "AssuranceTypeBean",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "at.getPrice()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "at",
              "objectType": "AssuranceType",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "atlist",
              "objectType": "AssuranceTypeBean",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "atb",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "add",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "atlist",
              "objectType": "AssuranceTypeBean",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "\"[getAllAssuranceTypes][find all assurance type success][list size: {}]\",atlist.size()",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "info",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "atlist",
              "objectType": "AssuranceTypeBean",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "size",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllAssuranceTypes",
              "parameterContents": "\"[getAllAssuranceTypes][find all assurance type][No content]\"",
              "microserviceName": "ts-assurance-service",
              "className": "AssuranceServiceImpl",
              "name": "warn",
              "packageAndClassName": "assurance.service.AssuranceServiceImpl"
            }
          ],
          "name": "AssuranceServiceImpl",
          "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "assurance.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "assurance.repository.AssuranceRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Transactional",
                  "packageAndClassName": "assurance.repository.AssuranceRepository"
                }
              ],
              "className": "AssuranceRepository",
              "name": "deleteById",
              "packageAndClassName": "assurance.repository.AssuranceRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "assurance.repository.AssuranceRepository"
                }
              ],
              "returnType": "Assurance",
              "microserviceName": "ts-assurance-service",
              "annotations": [],
              "className": "AssuranceRepository",
              "name": "findByOrderId",
              "packageAndClassName": "assurance.repository.AssuranceRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "assurance.repository.AssuranceRepository"
                }
              ],
              "returnType": "Optional<Assurance>",
              "microserviceName": "ts-assurance-service",
              "annotations": [],
              "className": "AssuranceRepository",
              "name": "findById",
              "packageAndClassName": "assurance.repository.AssuranceRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Assurance>",
              "microserviceName": "ts-assurance-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "assurance.repository.AssuranceRepository"
                }
              ],
              "className": "AssuranceRepository",
              "name": "findAll",
              "packageAndClassName": "assurance.repository.AssuranceRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "assurance.repository.AssuranceRepository"
            }
          ],
          "methodCalls": [],
          "name": "AssuranceRepository",
          "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "assurance.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "assurance.entity.Assurance"
            },
            {
              "type": "AssuranceType",
              "name": "type",
              "packageAndClassName": "assurance.entity.Assurance"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "assurance.entity.Assurance"
            }
          ],
          "methodCalls": [],
          "name": "Assurance",
          "path": "/ts-assurance-service/src/main/java/assurance/entity/Assurance.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "scope": "runtime",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api",
                    "version": "2.0.2"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-assurance-service",
              "artifactId": "ts-assurance-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-assurance-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-assurance-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${ASSURANCE_MYSQL_HOST:ts-assurance-mysql}:${ASSURANCE_MYSQL_PORT:3306}/${ASSURANCE_MYSQL_DATABASE:ts-assurance-mysql}?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC",
                "username": "${ASSURANCE_MYSQL_USER:root}",
                "password": "${ASSURANCE_MYSQL_PASSWORD:root}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "server": {
              "port": 18888
            },
            "swagger": {
              "controllerPackage": "assurance.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-assurance-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-basic-service",
      "path": "/ts-basic-service",
      "controllers": [
        {
          "packageName": "fdse.microservice.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/basicservice/basic/travel",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Travel",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.BasicController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.BasicController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/basic/travel"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "className": "BasicController",
              "name": "queryForTravel",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "url": "/api/v1/basicservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.BasicController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "className": "BasicController",
              "name": "home",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "url": "/api/v1/basicservice/basic/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "fdse.microservice.controller.BasicController"
                    }
                  ],
                  "name": "stationName",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.BasicController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/basic/{stationName}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "className": "BasicController",
              "name": "queryForStationId",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "url": "/api/v1/basicservice/basic/travels",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "List<Travel>",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.BasicController"
                    }
                  ],
                  "name": "infos",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.BasicController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/basic/travels"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "fdse.microservice.controller.BasicController"
                }
              ],
              "className": "BasicController",
              "name": "queryForTravels",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            }
          ],
          "fields": [
            {
              "type": "BasicService",
              "name": "service",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/basicservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"[queryForTravel][Query for travel][Travel: {}]\",info.toString()",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "info",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "toString",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "service.queryForTravel(info, headers)",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "ok",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "objectName": "service",
              "objectType": "BasicService",
              "calledFrom": "queryForTravel",
              "parameterContents": "info,headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "queryForTravel",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"[queryForTravels][Query for travels][Travels: {}]\",infos",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "info",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravels",
              "parameterContents": "service.queryForTravels(infos, headers)",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "ok",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "objectName": "service",
              "objectType": "BasicService",
              "calledFrom": "queryForTravels",
              "parameterContents": "infos,headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "queryForTravels",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[queryForStationId][Query for stationId by stationName][stationName: {}]\",stationName",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "info",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForStationId",
              "parameterContents": "service.queryForStationId(stationName, headers)",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "ok",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            },
            {
              "objectName": "service",
              "objectType": "BasicService",
              "calledFrom": "queryForStationId",
              "parameterContents": "stationName,headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicController",
              "name": "queryForStationId",
              "packageAndClassName": "fdse.microservice.controller.BasicController"
            }
          ],
          "name": "BasicController",
          "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "fdse.microservice.service",
          "implementedTypes": [
            "BasicService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainTypeName",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "queryTrainTypeByName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "routeIdsTypes",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "Map<String,PriceConfig>",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "queryPriceConfigByRouteIdsAndTrainTypes",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "Travel",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "className": "BasicServiceImpl",
              "name": "queryForTravel",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stationNames",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "Map<String,String>",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "checkStationsExists",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "routeIds",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "List<Route>",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "getRoutesByRouteIds",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "List<Travel>",
                  "annotations": [],
                  "name": "infos",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "className": "BasicServiceImpl",
              "name": "queryForTravels",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-basic-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "className": "BasicServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "trainTypeNames",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "List<TrainType>",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "queryTrainTypeByNames",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "PriceConfig",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "queryPriceConfigByRouteIdAndTrainType",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-basic-service",
              "annotations": [],
              "className": "BasicServiceImpl",
              "name": "checkStationExists",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravel",
              "parameterContents": "true",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "1",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "start,headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "checkStationExists",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "end,headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "checkStationExists",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravel",
              "parameterContents": "false",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"Start place or end place not exist!\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"[queryForTravel][Start place not exist][start place: {}]\",info.getStartPlace()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"[queryForTravel][End place not exist][end place: {}]\",info.getEndPlace()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "info.getTrip().getTrainTypeName(),headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "queryTrainTypeByName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"[queryForTravel][traintype doesn't exist][trainTypeName: {}]\",info.getTrip().getTrainTypeName()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravel",
              "parameterContents": "false",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"Train type doesn't exist\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravel",
              "parameterContents": "trainType",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "routeId,headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravel",
              "parameterContents": "false",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"Route doesn't exist\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "start",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "contains",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "end",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "contains",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "start",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "end",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "start",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "end",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"[queryForTravel][query start index and end index][indexStart: {} indexEnd: {}]\",indexStart,indexEnd",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"[queryForTravel][query stations and distances][stations: {} distances: {}]\",route.getStations(),route.getDistances()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravel",
              "parameterContents": "false",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"Station not correct in Route\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravel",
              "parameterContents": "routeId,trainType.getName(),headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "queryPriceConfigByRouteIdAndTrainType",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "indexEnd",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "indexStart",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBasicPriceRate",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "queryForTravel",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getFirstClassPriceRate",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "prices",
              "objectType": "HashMap",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"economyClass\",\"\" + priceForEconomyClass",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "prices",
              "objectType": "HashMap",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"confortClass\",\"\" + priceForConfortClass",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "prices",
              "objectType": "HashMap",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"economyClass\",\"95.0\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "prices",
              "objectType": "HashMap",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"confortClass\",\"120.0\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravel",
              "parameterContents": "route",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravel",
              "parameterContents": "prices",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setPrices",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravel",
              "parameterContents": "1.0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setPercent",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravel",
              "parameterContents": "result",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setData",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForTravel",
              "parameterContents": "\"[queryForTravel][all done][result: {}]\",result",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "1",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"Success\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "stationNames",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "info.getStartPlace()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "stationNames",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "info.getEndPlace()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trainTypeNames",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "info.getTrip().getTrainTypeName()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeIds",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "info.getTrip().getRouteId()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "toString",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "avaTrips",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "tripNumber",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "tripInfos",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "tripNumber,info",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "startTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "start",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trips",
              "objectType": "List",
              "calledFrom": "queryForTravels",
              "parameterContents": "tripNumber",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "startTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "start,trips",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "endTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "end",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trips",
              "objectType": "List",
              "calledFrom": "queryForTravels",
              "parameterContents": "tripNumber",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "endTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "end,trips",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "routeId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trips",
              "objectType": "List",
              "calledFrom": "queryForTravels",
              "parameterContents": "tripNumber",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "routeId,trips",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "typeTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "trainTypeName",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trips",
              "objectType": "List",
              "calledFrom": "queryForTravels",
              "parameterContents": "tripNumber",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "typeTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "trainTypeName,trips",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravels",
              "parameterContents": "new ArrayList<>(stationNames),headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "checkStationsExists",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"all stations don't exist\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "stationMap",
              "objectType": "Map",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "entrySet",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Entry",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getValue",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "startTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "s.getKey()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Entry",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getKey",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "avaTrips",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "startTrips.get(s.getKey())",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "removeAll",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "startTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "s.getKey()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Entry",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getKey",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "endTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "s.getKey()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Entry",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getKey",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "avaTrips",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "endTrips.get(s.getKey())",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "removeAll",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "endTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "s.getKey()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Entry",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getKey",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "avaTrips",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "size",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"no travel info available\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravels",
              "parameterContents": "new ArrayList<>(trainTypeNames),headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "queryTrainTypeByNames",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"all train_type don't exist\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trainTypeMap",
              "objectType": "TrainType",
              "calledFrom": "queryForTravels",
              "parameterContents": "t.getName(),t",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "TrainType",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "typeTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "entrySet",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "typeTrip",
              "objectType": "Entry",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getKey",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trainTypeMap",
              "objectType": "TrainType",
              "calledFrom": "queryForTravels",
              "parameterContents": "ttype",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "avaTrips",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "typeTrip.getValue()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "removeAll",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "typeTrip",
              "objectType": "Entry",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getValue",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "avaTrips",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "size",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"no travel info available\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravels",
              "parameterContents": "new ArrayList<>(routeIds),headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getRoutesByRouteIds",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"all routes don't exist\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeMap",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "r.getId(),r",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeTrips",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "entrySet",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeTrip",
              "objectType": "Entry",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getKey",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeMap",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "routeId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "avaTrips",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "routeTrip.getValue()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "removeAll",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeTrip",
              "objectType": "Entry",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getValue",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeMap",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "routeId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeTrip",
              "objectType": "Entry",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getValue",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "tripInfos",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "t",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "tripInfos",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "t",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "start",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "contains",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "end",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "contains",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "start",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "end",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "avaTrips",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "t",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "remove",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "avaTrips",
              "objectType": "Set",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "size",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"no travel info available\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "tripInfos",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "tripNumber",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "tripInfos",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "tripNumber",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeIdAndTypes",
              "objectType": "List",
              "calledFrom": "queryForTravels",
              "parameterContents": "routeId + \":\" + trainType",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForTravels",
              "parameterContents": "routeIdAndTypes,headers",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "queryPriceConfigByRouteIdsAndTrainTypes",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "tripInfos",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "tripNumber",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "routeMap",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "routeId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "info.getStartPlace()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "info.getEndPlace()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStations",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Travel",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "pcMap",
              "objectType": "PriceConfig",
              "calledFrom": "queryForTravels",
              "parameterContents": "routeId + \":\" + trainType",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBasicPriceRate",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getFirstClassPriceRate",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "indexEnd",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "indexStart",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "queryForTravels",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "prices",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"economyClass\",\"\" + priceForEconomyClass",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "prices",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"confortClass\",\"\" + priceForConfortClass",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "prices",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"economyClass\",\"95.0\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "prices",
              "objectType": "HashMap",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"confortClass\",\"120.0\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravels",
              "parameterContents": "true",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravels",
              "parameterContents": "trainTypeMap.get(trainType)",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trainTypeMap",
              "objectType": "TrainType",
              "calledFrom": "queryForTravels",
              "parameterContents": "trainType",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravels",
              "parameterContents": "route",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravels",
              "parameterContents": "prices",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setPrices",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravels",
              "parameterContents": "1.0",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setPercent",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "trMap",
              "objectType": "TravelResult",
              "calledFrom": "queryForTravels",
              "parameterContents": "tripNumber,result",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryForTravels",
              "parameterContents": "trMap",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "setData",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForTravels",
              "parameterContents": "\"[queryForTravels][all done][result map: {}]\",trMap",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[queryForStationId][Query For Station Id][stationName: {}]\",stationName",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/api/v1/stationservice/stations/id/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "station_service_url + \"/api/v1/stationservice/stations/id/\" + stationName,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "exchange",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[queryForStationId][Query for stationId error][stationName: {}, message: {}]\",stationName,msg",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "checkStationsExists",
              "parameterContents": "\"[checkStationsExists][Check Stations Exists][stationNames: {}]\",stationNames",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "checkStationsExists",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/api/v1/stationservice/stations/idlist",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "checkStationsExists",
              "parameterContents": "station_service_url + \"/api/v1/stationservice/stations/idlist\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "exchange",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "checkStationsExists",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getData",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "checkStationExists",
              "parameterContents": "\"[checkStationExists][Check Station Exists][stationName: {}]\",stationName",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "checkStationExists",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/api/v1/stationservice/stations/id/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "checkStationExists",
              "parameterContents": "station_service_url + \"/api/v1/stationservice/stations/id/\" + stationName,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "exchange",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "checkStationExists",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "exist",
              "objectType": "Response",
              "calledFrom": "checkStationExists",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryTrainTypeByNames",
              "parameterContents": "\"[queryTrainTypeByNames][Query Train Type][Train Type names: {}]\",trainTypeNames",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryTrainTypeByNames",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/api/v1/trainservice/trains/byNames",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryTrainTypeByNames",
              "parameterContents": "train_service_url + \"/api/v1/trainservice/trains/byNames\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "exchange",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryTrainTypeByNames",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryTrainTypeByNames",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "Arrays",
              "objectType": "Arrays",
              "calledFrom": "queryTrainTypeByNames",
              "parameterContents": "JsonUtils.conveterObject(response.getData(), TrainType[].class)",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "asList",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "queryTrainTypeByNames",
              "parameterContents": "response.getData(),TrainType[].class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryTrainTypeByNames",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getData",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "\"[queryTrainTypeByName][Query Train Type][Train Type name: {}]\",trainTypeName",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/api/v1/trainservice/trains/byName/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "train_service_url + \"/api/v1/trainservice/trains/byName/\" + trainTypeName,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "exchange",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "response.getData(),TrainType.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getData",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "\"[getRoutesByRouteIds][Get Route By Ids][Route IDs：{}]\",routeIds",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes/byIds",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes/byIds/\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "exchange",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "\"[getRoutesByRouteIds][Get Route By Ids Failed][Fail msg: {}]\",result.getMsg()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "\"[getRoutesByRouteIds][Get Route By Ids][Success]\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "Arrays",
              "objectType": "Arrays",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "JsonUtils.conveterObject(result.getData(), Route[].class)",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "asList",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "result.getData(),Route[].class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRoutesByRouteIds",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getData",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id][Route ID：{}]\",routeId",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes/\" + routeId,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "exchange",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id Failed][Fail msg: {}]\",result.getMsg()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id][Success]\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "result.getData(),Route.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getData",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "\"[queryPriceConfigByRouteIdAndTrainType][Query For Price Config][RouteId: {} ,TrainType: {}]\",routeId,trainType",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "\"ts-price-service\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/api/v1/priceservice/prices/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "price_service_url + \"/api/v1/priceservice/prices/\" + routeId + \"/\" + trainType,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "exchange",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "\"[queryPriceConfigByRouteIdAndTrainType][Response Resutl to String][result: {}]\",result.toString()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "toString",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "result.getData(),PriceConfig.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "queryPriceConfigByRouteIdAndTrainType",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getData",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "\"[queryPriceConfigByRouteIdsAndTrainTypes][Query For Price Config][RouteId and TrainType: {}]\",routeIdsTypes",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "\"ts-price-service\"",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "url": "/api/v1/priceservice/prices/byRouteIdsAndTrainTypes",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "price_service_url + \"/api/v1/priceservice/prices/byRouteIdsAndTrainTypes\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "exchange",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getBody",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "\"[queryPriceConfigByRouteIdsAndTrainTypes][Get Price Config by routeId and trainType Failed][Fail msg: {}]\",result.getMsg()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "mapper",
              "objectType": "ObjectMapper",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "JsonUtils.object2Json(result.getData()),new TypeReference<Map<String, PriceConfig>>() {\r\n}",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "readValue",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "result.getData()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "object2Json",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getData",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "\"[queryPriceConfigByRouteIdsAndTrainTypes][Get Price Config by routeId and trainType Failed][Fail msg: {}]\",e.getMessage()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "\"[queryPriceConfigByRouteIdsAndTrainTypes][Get Price Config by routeId and trainType][Success][priceConfigs: {}]\",result.getData()",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "info",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "queryPriceConfigByRouteIdsAndTrainTypes",
              "parameterContents": "",
              "microserviceName": "ts-basic-service",
              "className": "BasicServiceImpl",
              "name": "getData",
              "packageAndClassName": "fdse.microservice.service.BasicServiceImpl"
            }
          ],
          "name": "BasicServiceImpl",
          "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-basic-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-basic-service",
              "artifactId": "ts-basic-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-basic-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 15680
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-basic-service"
              }
            },
            "swagger": {
              "controllerPackage": "fdse.microservice.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-basic-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-cancel-service",
      "path": "/ts-cancel-service",
      "controllers": [
        {
          "packageName": "cancel.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/cancelservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "cancel.controller.CancelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-cancel-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "className": "CancelController",
              "name": "home",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "url": "/api/v1/cancelservice/cancel/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "cancel.controller.CancelController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "cancel.controller.CancelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "cancel.controller.CancelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-cancel-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/cancel/{orderId}/{loginId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "cancel.controller.CancelController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "className": "CancelController",
              "name": "cancelTicket",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "url": "/api/v1/cancelservice/cancel/refound/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "cancel.controller.CancelController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "cancel.controller.CancelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "cancel.controller.CancelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-cancel-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/cancel/refound/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "cancel.controller.CancelController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "cancel.controller.CancelController"
                }
              ],
              "className": "CancelController",
              "name": "calculate",
              "packageAndClassName": "cancel.controller.CancelController"
            }
          ],
          "fields": [
            {
              "type": "CancelService",
              "name": "cancelService",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "cancel.controller.CancelController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/cancelservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "cancel.controller.CancelController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculate",
              "parameterContents": "\"[calculate][Calculate Cancel Refund][OrderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "info",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculate",
              "parameterContents": "cancelService.calculateRefund(orderId, headers)",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "ok",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "cancelService",
              "objectType": "CancelService",
              "calledFrom": "calculate",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelTicket",
              "parameterContents": "\"[cancelTicket][Cancel Ticket][info: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "info",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelTicket",
              "parameterContents": "\"[cancelTicket][Cancel Ticket, Verify Success]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "info",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelTicket",
              "parameterContents": "cancelService.cancelOrder(orderId, loginId, headers)",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "ok",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "cancelService",
              "objectType": "CancelService",
              "calledFrom": "cancelTicket",
              "parameterContents": "orderId,loginId,headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "cancelOrder",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelTicket",
              "parameterContents": "e.getMessage()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "error",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "cancelTicket",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "getMessage",
              "packageAndClassName": "cancel.controller.CancelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelTicket",
              "parameterContents": "new Response<>(1, \"error\", null)",
              "microserviceName": "ts-cancel-service",
              "className": "CancelController",
              "name": "ok",
              "packageAndClassName": "cancel.controller.CancelController"
            }
          ],
          "name": "CancelController",
          "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "cancel.service",
          "implementedTypes": [
            "CancelService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "money",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "drawbackMoney",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "cancelFromOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "Response<User>",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "oldHeaders",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "HttpHeaders",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "Response<Order>",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                },
                {
                  "type": "NotifyInfo",
                  "annotations": [],
                  "name": "notifyInfo",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-cancel-service",
              "annotations": [],
              "className": "CancelServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-cancel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "cancel.service.CancelServiceImpl"
                }
              ],
              "className": "CancelServiceImpl",
              "name": "cancelOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "type": "String",
              "name": "orderStatusCancelNotPermitted",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order, Order found G|H]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getData",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "order,headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "cancelFromOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order Success]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "order",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "money,loginId,headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "drawbackMoney",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Draw Back Money Success]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getAccountId().toString(),headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "new Date().toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setDate",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "result.getData().getEmail()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setEmail",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getData",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getTo",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "result.getData().getUserName()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setUsername",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getData",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getId().toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setOrderNumber",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getId",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "SeatClass.getNameByCode(order.getSeatClass())",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "SeatClass",
              "objectType": "Solving SeatClass",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getNameByCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "cancelOrder",
              "parameterContents": "order.getTravelTime().toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Draw Back Money Failed][loginId: {}, orderId: {}]\",loginId,orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "error",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order Failed][orderId: {}, Reason: {}]\",orderId,changeOrderResult.getMsg()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "error",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order, Order Status Not Permitted][loginId: {}, orderId: {}]\",loginId,orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderByIdFromOrderOther",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order, Order found Z|K|Other]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getData",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order, Order status ok]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "order,headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "cancelFromOtherOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order Success]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "order",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelOrder",
              "parameterContents": "money,loginId,headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "drawbackMoney",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Draw Back Money Success]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Draw Back Money Failed][loginId: {}, orderId: {}]\",loginId,orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "error",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order Failed][orderId: {}, Reason: {}]\",orderId,changeOrderResult.getMsg()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "error",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "Response",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order, Order Status Not Permitted][loginId: {}, orderId: {}]\",loginId,orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "warn",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order, Order Not Found][loginId: {}, orderId: {}]\",loginId,orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "warn",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "sendEmail",
              "parameterContents": "\"[sendEmail][Send Email]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "sendEmail",
              "parameterContents": "headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "sendEmail",
              "parameterContents": "\"ts-notification-service\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/api/v1/notifyservice/notification/order_cancel_success",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "sendEmail",
              "parameterContents": "notification_service_url + \"/api/v1/notifyservice/notification/order_cancel_success\",HttpMethod.POST,requestEntity,Boolean.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculateRefund",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "Response",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "Response",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getData",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[calculateRefund][Cancel Order, Refund Price From Order Service.Not Paid][orderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[calculateRefund][Cancel Order, Refund Price From Order Service.Paid][orderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculateRefund",
              "parameterContents": "order",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[calculateRefund][Cancel Order Refund Price Order.Cancel Not Permitted][orderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculateRefund",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getOrderByIdFromOrderOther",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "Response",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "Response",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getData",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[calculateRefund][Cancel Order, Refund Price From Order Other Service.Not Paid][orderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order][Refund Price From Order Other Service.Paid][orderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculateRefund",
              "parameterContents": "order",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "calculateRefund",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order][Refund Price, Order Other. Cancel Not Permitted][orderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "warn",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[Cancel Order][Refund Price][Order not found][orderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "error",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[calculateRefund][Cancel Order][Order Travel Date: {}]\",order.getTravelDate().toString()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "toString",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "StringUtils.String2Date(order.getTravelDate())",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "calculateRefund",
              "parameterContents": "order.getTravelDate()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal2",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "StringUtils.String2Date(order.getTravelTime())",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "calculateRefund",
              "parameterContents": "order.getTravelTime()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal2",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.HOUR",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal2",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.MINUTE",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "cal2",
              "objectType": "Calendar",
              "calledFrom": "calculateRefund",
              "parameterContents": "Calendar.SECOND",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "get",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[calculateRefund][Cancel Order][nowDate  : {}]\",nowDate",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[calculateRefund][Cancel Order][startTime: {}]\",startTime",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "nowDate",
              "objectType": "Date",
              "calledFrom": "calculateRefund",
              "parameterContents": "startTime",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "after",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[calculateRefund][Cancel Order, Ticket expire refund 0]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "warn",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "calculateRefund",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "parseDouble",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "calculateRefund",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "priceFormat",
              "objectType": "DecimalFormat",
              "calledFrom": "calculateRefund",
              "parameterContents": "price",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "format",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateRefund",
              "parameterContents": "\"[calculateRefund][calculate refund][refund: {}]\",str",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelFromOrder",
              "parameterContents": "\"[cancelFromOrder][Change Order Status]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelFromOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "cancelFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelFromOrder",
              "parameterContents": "headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelFromOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "cancelFromOrder",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order\",HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "cancelFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "oldHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "getAuthorizationHeadersFrom",
              "parameterContents": "HttpHeaders.AUTHORIZATION",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "containsKey",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "newHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "getAuthorizationHeadersFrom",
              "parameterContents": "HttpHeaders.AUTHORIZATION,oldHeaders.getFirst(HttpHeaders.AUTHORIZATION)",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "add",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "oldHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "getAuthorizationHeadersFrom",
              "parameterContents": "HttpHeaders.AUTHORIZATION",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getFirst",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelFromOtherOrder",
              "parameterContents": "\"[cancelFromOtherOrder][Change Order Status]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "cancelFromOtherOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "cancelFromOtherOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelFromOtherOrder",
              "parameterContents": "headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "cancelFromOtherOrder",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "cancelFromOtherOrder",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther\",HttpMethod.PUT,requestEntity,Response.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "cancelFromOtherOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "drawbackMoney",
              "parameterContents": "\"[drawbackMoney][Draw Back Money]\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "drawbackMoney",
              "parameterContents": "headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "drawbackMoney",
              "parameterContents": "\"ts-inside-payment-service\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/api/v1/inside_pay_service/inside_payment/drawback/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "drawbackMoney",
              "parameterContents": "inside_payment_service_url + \"/api/v1/inside_pay_service/inside_payment/drawback/\" + userId + \"/\" + money,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "drawbackMoney",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "drawbackMoney",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAccount",
              "parameterContents": "\"[getAccount][Get By Id][orderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAccount",
              "parameterContents": "headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAccount",
              "parameterContents": "\"ts-user-service\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/api/v1/userservice/users/id/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAccount",
              "parameterContents": "user_service_url + \"/api/v1/userservice/users/id/\" + orderId,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<User>>() {\r\n}",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getAccount",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "\"[getOrderByIdFromOrder][Get Order][orderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order/\" + orderId,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<Order>>() {\r\n}",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "\"[getOrderByIdFromOrderOther][Get Order][orderId: {}]\",orderId",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "info",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "headers",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther/\" + orderId,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<Order>>() {\r\n}",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "",
              "microserviceName": "ts-cancel-service",
              "className": "CancelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "cancel.service.CancelServiceImpl"
            }
          ],
          "name": "CancelServiceImpl",
          "path": "/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.services",
                  "artifactId": "ts-common",
                  "version": "0.1.0"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-cancel-service",
              "artifactId": "ts-cancel-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-cancel-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18885
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-cancel-service"
              }
            },
            "swagger": {
              "controllerPackage": "cancel.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-cancel-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-config-service",
      "path": "/ts-config-service",
      "controllers": [
        {
          "packageName": "config.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/configservice/configs/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "configName",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/configs/{configName}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "deleteConfig",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "url": "/api/v1/configservice/configs",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "type": "Config",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "value": "/configs"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "updateConfig",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "url": "/api/v1/configservice/configs/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "configName",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/configs/{configName}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "retrieve",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "url": "/api/v1/configservice/configs",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "type": "Config",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "HttpEntity<?>",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "value": "/configs"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "createConfig",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "url": "/api/v1/configservice/configs",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "config.controller.ConfigController"
                },
                {
                  "attributes": {
                    "value": "/configs"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "queryAll",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "url": "/api/v1/configservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "config.controller.ConfigController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "config.controller.ConfigController"
                }
              ],
              "className": "ConfigController",
              "name": "home",
              "packageAndClassName": "config.controller.ConfigController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "type": "ConfigService",
              "name": "configService",
              "packageAndClassName": "config.controller.ConfigController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "attributes": {
                "default": "api/v1/configservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "config.controller.ConfigController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "queryAll",
              "parameterContents": "\"[queryAll][Query all configs]\"",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "info",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryAll",
              "parameterContents": "configService.queryAll(headers)",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "ok",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "queryAll",
              "parameterContents": "headers",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "queryAll",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "createConfig",
              "parameterContents": "\"[createConfig][Create config][Config name: {}]\",info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "info",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "createConfig",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "getName",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "createConfig",
              "parameterContents": "info,headers",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "create",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "updateConfig",
              "parameterContents": "\"[updateConfig][Update config][Config name: {}]\",info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "info",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "updateConfig",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "getName",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateConfig",
              "parameterContents": "configService.update(info, headers)",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "ok",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "updateConfig",
              "parameterContents": "info,headers",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "update",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "deleteConfig",
              "parameterContents": "\"[deleteConfig][Delete config][configName: {}]\",configName",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "info",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteConfig",
              "parameterContents": "configService.delete(configName, headers)",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "ok",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "deleteConfig",
              "parameterContents": "configName,headers",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "delete",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "retrieve",
              "parameterContents": "\"[retrieve][Retrieve config][configName: {}]\",configName",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "info",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "retrieve",
              "parameterContents": "configService.query(configName, headers)",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "ok",
              "packageAndClassName": "config.controller.ConfigController"
            },
            {
              "objectName": "configService",
              "objectType": "ConfigService",
              "calledFrom": "retrieve",
              "parameterContents": "configName,headers",
              "microserviceName": "ts-config-service",
              "className": "ConfigController",
              "name": "query",
              "packageAndClassName": "config.controller.ConfigController"
            }
          ],
          "name": "ConfigController",
          "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "config.service",
          "implementedTypes": [
            "ConfigService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                },
                {
                  "type": "Config",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                }
              ],
              "className": "ConfigServiceImpl",
              "name": "create",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "name",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                }
              ],
              "className": "ConfigServiceImpl",
              "name": "query",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-config-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "config.service.ConfigServiceImpl"
                }
              ],
              "className": "ConfigServiceImpl",
              "name": "queryAll",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "config0",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "type": "ConfigRepository",
              "name": "repository",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "create",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][{} already exists][config info: {}]\",config0,info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "warn",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getValue",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getDescription",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "create",
              "parameterContents": "config",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "save",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][create success][Config: {}]\",info",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "info",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "update",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "update",
              "parameterContents": "result",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "warn",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getValue",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Config",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "getDescription",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "update",
              "parameterContents": "config",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "save",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "update",
              "parameterContents": "\"[update][update success][Config: {}]\",config",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "info",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "query",
              "parameterContents": "name",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[query][Config does not exist][name: {}, message: {}]\",name,\"No content\"",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "warn",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[query][Query config success][config name: {}]\",name",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "info",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "delete",
              "parameterContents": "name",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[delete][config doesn't exist][config name: {}]\",name",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "warn",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "delete",
              "parameterContents": "name",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "deleteByName",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[delete][Config delete success][config name: {}]\",name",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "info",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConfigRepository",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "findAll",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "configList",
              "objectType": "Config",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "queryAll",
              "parameterContents": "\"[queryAll][Query all config success]\"",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "info",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "queryAll",
              "parameterContents": "\"[queryAll][Query config, No content]\"",
              "microserviceName": "ts-config-service",
              "className": "ConfigServiceImpl",
              "name": "warn",
              "packageAndClassName": "config.service.ConfigServiceImpl"
            }
          ],
          "name": "ConfigServiceImpl",
          "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [
        {
          "packageName": "config.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "name",
              "packageAndClassName": "config.entity.Config"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "config.entity.Config"
            }
          ],
          "methodCalls": [],
          "name": "Config",
          "path": "/ts-config-service/src/main/java/config/entity/Config.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-config-service",
              "artifactId": "ts-config-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-config-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-config-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${CONFIG_MYSQL_HOST:ts-config-mysql}:${CONFIG_MYSQL_PORT:3306}/${CONFIG_MYSQL_DATABASE:ts-config-mysql}?useSSL=false",
                "username": "${CONFIG_MYSQL_USER:root}",
                "password": "${CONFIG_MYSQL_PASSWORD:root}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "server": {
              "port": 15679
            },
            "swagger": {
              "controllerPackage": "config.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-config-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-consign-price-service",
      "path": "/ts-consign-price-service",
      "controllers": [
        {
          "packageName": "consignprice.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/consignpriceservice/consignprice/price",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consignprice.controller.ConsignPriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consignprice/price"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "className": "ConsignPriceController",
              "name": "getPriceInfo",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "url": "/api/v1/consignpriceservice/consignprice",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ConsignPrice",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "consignprice.controller.ConsignPriceController"
                    }
                  ],
                  "name": "priceConfig",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consignprice.controller.ConsignPriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consignprice"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "className": "ConsignPriceController",
              "name": "modifyPriceConfig",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "url": "/api/v1/consignpriceservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consignprice.controller.ConsignPriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "className": "ConsignPriceController",
              "name": "home",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "url": "/api/v1/consignpriceservice/consignprice/config",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consignprice.controller.ConsignPriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consignprice/config"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "className": "ConsignPriceController",
              "name": "getPriceConfig",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "url": "/api/v1/consignpriceservice/consignprice/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "consignprice.controller.ConsignPriceController"
                    }
                  ],
                  "name": "weight",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consignprice.controller.ConsignPriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consignprice/{weight}/{isWithinRegion}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "consignprice.controller.ConsignPriceController"
                }
              ],
              "className": "ConsignPriceController",
              "name": "getPriceByWeightAndRegion",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "type": "ConsignPriceService",
              "name": "service",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/consignpriceservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "\"[getPriceByWeightAndRegion][Get price by weight and region][weight: {}, region: {}]\",weight,isWithinRegion",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "info",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "service.getPriceByWeightAndRegion(Double.parseDouble(weight), Boolean.parseBoolean(isWithinRegion), headers)",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "ok",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignPriceService",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "Double.parseDouble(weight),Boolean.parseBoolean(isWithinRegion),headers",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "getPriceByWeightAndRegion",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "weight",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "parseDouble",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "Boolean",
              "objectType": "Boolean",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "isWithinRegion",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "parseBoolean",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getPriceInfo",
              "parameterContents": "\"[getPriceInfo][Get price info]\"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "info",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getPriceInfo",
              "parameterContents": "service.queryPriceInformation(headers)",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "ok",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignPriceService",
              "calledFrom": "getPriceInfo",
              "parameterContents": "headers",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "queryPriceInformation",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getPriceConfig",
              "parameterContents": "\"[getPriceConfig][Get price config]\"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "info",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getPriceConfig",
              "parameterContents": "service.getPriceConfig(headers)",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "ok",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignPriceService",
              "calledFrom": "getPriceConfig",
              "parameterContents": "headers",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "getPriceConfig",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "modifyPriceConfig",
              "parameterContents": "\"[modifyPriceConfig][Create and modify price][config: {}]\",priceConfig",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "info",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyPriceConfig",
              "parameterContents": "service.createAndModifyPrice(priceConfig, headers)",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "ok",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignPriceService",
              "calledFrom": "modifyPriceConfig",
              "parameterContents": "priceConfig,headers",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceController",
              "name": "createAndModifyPrice",
              "packageAndClassName": "consignprice.controller.ConsignPriceController"
            }
          ],
          "name": "ConsignPriceController",
          "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "consignprice.service",
          "implementedTypes": [
            "ConsignPriceService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "boolean",
                  "annotations": [],
                  "name": "isWithinRegion",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                },
                {
                  "type": "double",
                  "annotations": [],
                  "name": "weight",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "className": "ConsignPriceServiceImpl",
              "name": "getPriceByWeightAndRegion",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                },
                {
                  "type": "ConsignPrice",
                  "annotations": [],
                  "name": "config",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "className": "ConsignPriceServiceImpl",
              "name": "createAndModifyPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-consign-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
                }
              ],
              "className": "ConsignPriceServiceImpl",
              "name": "queryPriceInformation",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "type": "ConsignPriceConfigRepository",
              "name": "repository",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getWithinPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "getPriceByWeightAndRegion",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getBeyondPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "\"The price of weight within \"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "price.getInitialWeight()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "price",
              "objectType": "ConsignPrice",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "\" is \"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "price.getInitialPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "price",
              "objectType": "ConsignPrice",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "\". The price of extra weight within the region is \"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "price.getWithinPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "price",
              "objectType": "ConsignPrice",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getWithinPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "\" and beyond the region is \"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "price.getBeyondPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "price",
              "objectType": "ConsignPrice",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getBeyondPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "\"\\n\"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "append",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "sb",
              "objectType": "StringBuilder",
              "calledFrom": "queryPriceInformation",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "toString",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "\"[createAndModifyPrice][Create New Price Config]\"",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "info",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "config.getId()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setId",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "config.getInitialPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setInitialPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "config.getInitialWeight()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setInitialWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getInitialWeight",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "config.getWithinPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setWithinPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getWithinPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "originalConfig",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "config.getBeyondPrice()",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "setBeyondPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "ConsignPrice",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "getBeyondPrice",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "createAndModifyPrice",
              "parameterContents": "originalConfig",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "save",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignPriceConfigRepository",
              "calledFrom": "getPriceConfig",
              "parameterContents": "0",
              "microserviceName": "ts-consign-price-service",
              "className": "ConsignPriceServiceImpl",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.service.ConsignPriceServiceImpl"
            }
          ],
          "name": "ConsignPriceServiceImpl",
          "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "consignprice.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "index",
                  "packageAndClassName": "consignprice.repository.ConsignPriceConfigRepository"
                }
              ],
              "returnType": "ConsignPrice",
              "microserviceName": "ts-consign-price-service",
              "annotations": [],
              "className": "ConsignPriceConfigRepository",
              "name": "findByIndex",
              "packageAndClassName": "consignprice.repository.ConsignPriceConfigRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "consignprice.repository.ConsignPriceConfigRepository"
            }
          ],
          "methodCalls": [],
          "name": "ConsignPriceConfigRepository",
          "path": "/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "consignprice.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "consignprice.entity.ConsignPrice"
            },
            {
              "type": "int",
              "name": "index",
              "packageAndClassName": "consignprice.entity.ConsignPrice"
            },
            {
              "type": "double",
              "name": "initialWeight",
              "packageAndClassName": "consignprice.entity.ConsignPrice"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "name": "consign_price"
              },
              "name": "Table",
              "packageAndClassName": "consignprice.entity.ConsignPrice"
            },
            {
              "attributes": {},
              "name": "AllArgsConstructor",
              "packageAndClassName": "consignprice.entity.ConsignPrice"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "consignprice.entity.ConsignPrice"
            }
          ],
          "methodCalls": [],
          "name": "ConsignPrice",
          "path": "/ts-consign-price-service/src/main/java/consignprice/entity/ConsignPrice.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-consign-price-service",
              "artifactId": "ts-consign-price-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-consign-price-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-consign-price-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${CONSIGN_PRICE_MYSQL_HOST:ts-consign-price-mysql}:${CONSIGN_PRICE_MYSQL_PORT:3306}/${CONSIGN_PRICE_MYSQL_DATABASE:ts-consign-price-mysql}?useSSL=false",
                "username": "${CONSIGN_PRICE_MYSQL_USER:root}",
                "password": "${CONSIGN_PRICE_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "server": {
              "port": 16110
            },
            "swagger": {
              "controllerPackage": "consignprice.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-consign-price-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-consign-service",
      "path": "/ts-consign-service",
      "controllers": [
        {
          "packageName": "consign.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/consignservice/consigns/order/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "consign.controller.ConsignController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consigns/order/{id}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "className": "ConsignController",
              "name": "findByOrderId",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "url": "/api/v1/consignservice/consigns/account/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "consign.controller.ConsignController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consigns/account/{id}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "className": "ConsignController",
              "name": "findByAccountId",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "url": "/api/v1/consignservice/consigns/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "consignee",
                  "packageAndClassName": "consign.controller.ConsignController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consigns/{consignee}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "className": "ConsignController",
              "name": "findByConsignee",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "url": "/api/v1/consignservice/consigns",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "Consign",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "consign.controller.ConsignController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consigns"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "className": "ConsignController",
              "name": "updateConsign",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "url": "/api/v1/consignservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "className": "ConsignController",
              "name": "home",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "url": "/api/v1/consignservice/consigns",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Consign",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "request",
                  "packageAndClassName": "consign.controller.ConsignController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "consign.controller.ConsignController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/consigns"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "consign.controller.ConsignController"
                }
              ],
              "className": "ConsignController",
              "name": "insertConsign",
              "packageAndClassName": "consign.controller.ConsignController"
            }
          ],
          "fields": [
            {
              "type": "ConsignService",
              "name": "service",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "consign.controller.ConsignController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "attributes": {
                "default": "/api/v1/consignservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "consign.controller.ConsignController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "insertConsign",
              "parameterContents": "\"[insertConsign][Insert consign record][id:{}]\",request.getId()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "info",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "request",
              "objectType": "Consign",
              "calledFrom": "insertConsign",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "getId",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "insertConsign",
              "parameterContents": "service.insertConsignRecord(request, headers)",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "ok",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignService",
              "calledFrom": "insertConsign",
              "parameterContents": "request,headers",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "insertConsignRecord",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "updateConsign",
              "parameterContents": "\"[updateConsign][Update consign record][id: {}]\",request.getId()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "info",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "request",
              "objectType": "Consign",
              "calledFrom": "updateConsign",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "getId",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateConsign",
              "parameterContents": "service.updateConsignRecord(request, headers)",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "ok",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignService",
              "calledFrom": "updateConsign",
              "parameterContents": "request,headers",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "updateConsignRecord",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "findByAccountId",
              "parameterContents": "\"[findByAccountId][Find consign by account id][id: {}]\",id",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "info",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "findByAccountId",
              "parameterContents": "id",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "fromString",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findByAccountId",
              "parameterContents": "service.queryByAccountId(newid, headers)",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "ok",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignService",
              "calledFrom": "findByAccountId",
              "parameterContents": "newid,headers",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "queryByAccountId",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "findByOrderId",
              "parameterContents": "\"[findByOrderId][Find consign by order id][id: {}]\",id",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "info",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "findByOrderId",
              "parameterContents": "id",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "fromString",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findByOrderId",
              "parameterContents": "service.queryByOrderId(newid, headers)",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "ok",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignService",
              "calledFrom": "findByOrderId",
              "parameterContents": "newid,headers",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "queryByOrderId",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "findByConsignee",
              "parameterContents": "\"[findByConsignee][Find consign by consignee][consignee: {}]\",consignee",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "info",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findByConsignee",
              "parameterContents": "service.queryByConsignee(consignee, headers)",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "ok",
              "packageAndClassName": "consign.controller.ConsignController"
            },
            {
              "objectName": "service",
              "objectType": "ConsignService",
              "calledFrom": "findByConsignee",
              "parameterContents": "consignee,headers",
              "microserviceName": "ts-consign-service",
              "className": "ConsignController",
              "name": "queryByConsignee",
              "packageAndClassName": "consign.controller.ConsignController"
            }
          ],
          "name": "ConsignController",
          "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "consign.service",
          "implementedTypes": [
            "ConsignService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-consign-service",
              "annotations": [],
              "className": "ConsignServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                },
                {
                  "type": "Consign",
                  "annotations": [],
                  "name": "consignRequest",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "className": "ConsignServiceImpl",
              "name": "insertConsignRecord",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "consignee",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "className": "ConsignServiceImpl",
              "name": "queryByConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-consign-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "consign.service.ConsignServiceImpl"
                }
              ],
              "className": "ConsignServiceImpl",
              "name": "queryByAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "type": "ConsignRepository",
              "name": "repository",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"[insertConsignRecord][Insert Start][consignRequest.getOrderId: {}]\",consignRequest.getOrderId()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "info",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "toString",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getOrderId().toString()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "toString",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getAccountId().toString()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "toString",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"[insertConsignRecord][Insert Info][handle date: {}, target date: {}]\",consignRequest.getHandleDate(),consignRequest.getTargetDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "info",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getHandleDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getTargetDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getHandleDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setHandleDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getHandleDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getTargetDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setTargetDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getTargetDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getFrom()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getTo()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setTo",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getTo",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getConsignee()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getPhone()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPhone",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getPhone",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRequest.getWeight()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"ts-consign-price-service\"",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "url": "/api/v1/consignpriceservice/consignprice/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consign_price_service_url + \"/api/v1/consignpriceservice/consignprice/\" + consignRequest.getWeight() + \"/\" + consignRequest.isWithin(),HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<Double>>() {\r\n}",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "exchange",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "isWithin",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "re.getBody().getData()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getData",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getBody",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"[insertConsignRecord][SAVE consign info][consignRecord : {}]\",consignRecord.toString()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "info",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "toString",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "consignRecord",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "save",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "\"[insertConsignRecord][SAVE consign result][result: {}]\",result.toString()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "info",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "toString",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ConsignRecord",
              "calledFrom": "insertConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "\"[updateConsignRecord][Update Start]\"",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "info",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getId()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "findById",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest,headers",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "insertConsignRecord",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "get",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getId()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "findById",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getAccountId().toString()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "toString",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getHandleDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setHandleDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getHandleDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getTargetDate()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setTargetDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getTargetDate",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getFrom()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getTo()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setTo",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getTo",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getConsignee()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getPhone()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPhone",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getPhone",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "\"ts-consign-price-service\"",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "url": "/api/v1/consignpriceservice/consignprice/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consign_price_service_url + \"/api/v1/consignpriceservice/consignprice/\" + consignRequest.getWeight() + \"/\" + consignRequest.isWithin(),HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<Double>>() {\r\n}",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "exchange",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "isWithin",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "re.getBody().getData()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getData",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getBody",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "originalRecord.getPrice()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getConsignee()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getPhone()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setPhone",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getPhone",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "originalRecord",
              "objectType": "ConsignRecord",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "consignRequest.getWeight()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "setWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "getWeight",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "updateConsignRecord",
              "parameterContents": "originalRecord",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "save",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "queryByAccountId",
              "parameterContents": "accountId.toString()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "accountId",
              "objectType": "UUID",
              "calledFrom": "queryByAccountId",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "toString",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecords",
              "objectType": "ConsignRecord",
              "calledFrom": "queryByAccountId",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "queryByAccountId",
              "parameterContents": "\"[queryByAccountId][No Content according to accountId][accountId: {}]\",accountId",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "warn",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "queryByOrderId",
              "parameterContents": "orderId.toString()",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "orderId",
              "objectType": "UUID",
              "calledFrom": "queryByOrderId",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "toString",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "queryByOrderId",
              "parameterContents": "\"[queryByOrderId][No Content according to orderId][orderId: {}]\",orderId",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "warn",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "ConsignRepository",
              "calledFrom": "queryByConsignee",
              "parameterContents": "consignee",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "findByConsignee",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "consignRecords",
              "objectType": "ConsignRecord",
              "calledFrom": "queryByConsignee",
              "parameterContents": "",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "queryByConsignee",
              "parameterContents": "\"[queryByConsignee][No Content according to consignee][consignee: {}]\",consignee",
              "microserviceName": "ts-consign-service",
              "className": "ConsignServiceImpl",
              "name": "warn",
              "packageAndClassName": "consign.service.ConsignServiceImpl"
            }
          ],
          "name": "ConsignServiceImpl",
          "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "consign.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "consign.repository.ConsignRepository"
                }
              ],
              "returnType": "ConsignRecord",
              "microserviceName": "ts-consign-service",
              "annotations": [],
              "className": "ConsignRepository",
              "name": "findByOrderId",
              "packageAndClassName": "consign.repository.ConsignRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "consign.repository.ConsignRepository"
                }
              ],
              "returnType": "ArrayList<ConsignRecord>",
              "microserviceName": "ts-consign-service",
              "annotations": [],
              "className": "ConsignRepository",
              "name": "findByAccountId",
              "packageAndClassName": "consign.repository.ConsignRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "consign.repository.ConsignRepository"
                }
              ],
              "returnType": "Optional<ConsignRecord>",
              "microserviceName": "ts-consign-service",
              "annotations": [],
              "className": "ConsignRepository",
              "name": "findById",
              "packageAndClassName": "consign.repository.ConsignRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "consign.repository.ConsignRepository"
            }
          ],
          "methodCalls": [],
          "name": "ConsignRepository",
          "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "consign.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "consign.entity.ConsignRecord"
            },
            {
              "type": "double",
              "name": "weight",
              "packageAndClassName": "consign.entity.ConsignRecord"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "schema": "ts-consign-mysql"
              },
              "name": "Table",
              "packageAndClassName": "consign.entity.ConsignRecord"
            },
            {
              "attributes": {},
              "name": "AllArgsConstructor",
              "packageAndClassName": "consign.entity.ConsignRecord"
            }
          ],
          "methodCalls": [],
          "name": "ConsignRecord",
          "path": "/ts-consign-service/src/main/java/consign/entity/ConsignRecord.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "scope": "runtime",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-consign-price-service",
              "artifactId": "ts-consign-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-consign-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-consign-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${CONSIGN_MYSQL_HOST:ts-consign-mysql}:${CONSIGN_MYSQL_PORT:3306}/${CONSIGN_MYSQL_DATABASE:ts-consign-mysql}?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC",
                "username": "${CONSIGN_MYSQL_USER:root}",
                "password": "${CONSIGN_MYSQL_PASSWORD:root}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "server": {
              "port": 16111
            },
            "swagger": {
              "controllerPackage": "consign.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-consign-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-contacts-service",
      "path": "/ts-contacts-service",
      "controllers": [
        {
          "packageName": "contacts.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/contactservice/contacts",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "attributes": {
                    "path": "/contacts"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "className": "ContactsController",
              "name": "getAllContacts",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "url": "/api/v1/contactservice/contacts/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "contactsId",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/contacts/{contactsId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "className": "ContactsController",
              "name": "deleteContacts",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "url": "/api/v1/contactservice/contacts/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/contacts/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "className": "ContactsController",
              "name": "home",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "url": "/api/v1/contactservice/contacts",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "type": "Contacts",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "aci",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "attributes": {
                    "path": "/contacts"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "className": "ContactsController",
              "name": "createNewContacts",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "url": "/api/v1/contactservice/contacts/account/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "accountId",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/contacts/account/{accountId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "className": "ContactsController",
              "name": "findContactsByAccountId",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "url": "/api/v1/contactservice/contacts",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "type": "Contacts",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "attributes": {
                    "path": "/contacts"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "className": "ContactsController",
              "name": "modifyContacts",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "url": "/api/v1/contactservice/contacts/admin",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "type": "Contacts",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "aci",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "returnType": "HttpEntity<?>",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "attributes": {
                    "path": "/contacts/admin"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "className": "ContactsController",
              "name": "createNewContactsAdmin",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "url": "/api/v1/contactservice/contacts/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "contacts.controller.ContactsController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/contacts/{id}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "contacts.controller.ContactsController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "contacts.controller.ContactsController"
                }
              ],
              "className": "ContactsController",
              "name": "getContactsByContactsId",
              "packageAndClassName": "contacts.controller.ContactsController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "type": "ContactsService",
              "name": "contactsService",
              "packageAndClassName": "contacts.controller.ContactsController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "attributes": {
                "default": "api/v1/contactservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "contacts.controller.ContactsController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllContacts",
              "parameterContents": "\"[getAllContacts][Get All Contacts]\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "info",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllContacts",
              "parameterContents": "contactsService.getAllContacts(headers)",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "ok",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "getAllContacts",
              "parameterContents": "headers",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "getAllContacts",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createNewContacts",
              "parameterContents": "\"[createNewContacts][VerifyLogin Success]\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "info",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "createNewContacts",
              "parameterContents": "aci,headers",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "create",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "aci",
              "objectType": "Contacts",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "setId",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "toString",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "randomUUID",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "\"[createNewContactsAdmin][Create Contacts In Admin]\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "info",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "createNewContactsAdmin",
              "parameterContents": "aci,headers",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "createContacts",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteContacts",
              "parameterContents": "contactsService.delete(contactsId, headers)",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "ok",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "deleteContacts",
              "parameterContents": "contactsId,headers",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "delete",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyContacts",
              "parameterContents": "\"[Contacts modifyContacts][Modify Contacts] ContactsId: {}\",info.getId()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "info",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "info",
              "objectType": "Contacts",
              "calledFrom": "modifyContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "getId",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyContacts",
              "parameterContents": "contactsService.modify(info, headers)",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "ok",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "modifyContacts",
              "parameterContents": "info,headers",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "modify",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "\"[findContactsByAccountId][Find Contacts By Account Id][accountId: {}]\",accountId",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "info",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "\"[ContactsService][VerifyLogin Success]\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "info",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "contactsService.findContactsByAccountId(accountId, headers)",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "ok",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "accountId,headers",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "findContactsByAccountId",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "\"[ContactsService][Contacts Id Print][id: {}]\",id",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "info",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "\"[ContactsService][VerifyLogin Success]\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "info",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "contactsService.findContactsById(id, headers)",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "ok",
              "packageAndClassName": "contacts.controller.ContactsController"
            },
            {
              "objectName": "contactsService",
              "objectType": "ContactsService",
              "calledFrom": "getContactsByContactsId",
              "parameterContents": "id,headers",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsController",
              "name": "findContactsById",
              "packageAndClassName": "contacts.controller.ContactsController"
            }
          ],
          "name": "ContactsController",
          "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "contacts.service",
          "implementedTypes": [
            "ContactsService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "className": "ContactsServiceImpl",
              "name": "findContactsById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Contacts",
                  "annotations": [],
                  "name": "contacts",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "className": "ContactsServiceImpl",
              "name": "createContacts",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.service.ContactsServiceImpl"
                }
              ],
              "className": "ContactsServiceImpl",
              "name": "getAllContacts",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "type": "ContactsRepository",
              "name": "contactsRepository",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "findContactsById",
              "parameterContents": "\"FIND CONTACTS BY ID: \" + id",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "info",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ContactsRepository",
              "calledFrom": "findContactsById",
              "parameterContents": "null",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "orElse",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "findContactsById",
              "parameterContents": "id",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "findContactsById",
              "parameterContents": "\"[findContactsById][contactsRepository.findById][No contacts according to contactsId][contactsId: {}]\",id",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "error",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "accountId",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "\"[findContactsByAccountId][Query Contacts][Result Size: {}]\",arr.size()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "info",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "arr",
              "objectType": "Contacts",
              "calledFrom": "findContactsByAccountId",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "size",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "createContacts",
              "parameterContents": "contacts.getAccountId(),contacts.getDocumentNumber(),contacts.getDocumentType()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findByAccountIdAndDocumentTypeAndDocumentType",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "createContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "createContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getDocumentNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "createContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createContacts",
              "parameterContents": "\"[createContacts][Init Contacts, Already Exists][Id: {}]\",contacts.getId()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "warn",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "createContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "createContacts",
              "parameterContents": "contacts",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "save",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "create",
              "parameterContents": "addContacts.getAccountId(),addContacts.getDocumentNumber(),addContacts.getDocumentType()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findByAccountIdAndDocumentTypeAndDocumentType",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "addContacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "addContacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getDocumentNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "addContacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[Contacts-Add&Delete-Service.create][AddContacts][Fail.Contacts already exists][contactId: {}]\",addContacts.getId()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "warn",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "addContacts",
              "objectType": "Contacts",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "create",
              "parameterContents": "addContacts",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "save",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[Contacts-Add&Delete-Service.create][AddContacts Success]\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "info",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "delete",
              "parameterContents": "contactsId",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ContactsRepository",
              "calledFrom": "delete",
              "parameterContents": "null",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "orElse",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "delete",
              "parameterContents": "contactsId",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[Contacts-Add&Delete-Service][DeleteContacts Success]\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "info",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[Contacts-Add&Delete-Service][DeleteContacts][Fail.Reason not clear][contactsId: {}]\",contactsId",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "error",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modify",
              "parameterContents": "contacts.getId(),headers",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findContactsById",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "modify",
              "parameterContents": "oldContactResponse.toString()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "info",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "oldContactResponse",
              "objectType": "Response",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "toString",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "oldContactResponse",
              "objectType": "Response",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getData",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modify",
              "parameterContents": "\"[Contacts-Modify-Service.modify][ModifyContacts][Fail.Contacts not found][contactId: {}]\",contacts.getId()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "error",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getId",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "oldContacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "contacts.getName()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setName",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getName",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "oldContacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "contacts.getDocumentType()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "oldContacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "contacts.getDocumentNumber()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setDocumentNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getDocumentNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "oldContacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "contacts.getPhoneNumber()",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "setPhoneNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "modify",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "getPhoneNumber",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "modify",
              "parameterContents": "oldContacts",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "save",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modify",
              "parameterContents": "\"[Contacts-Modify-Service.modify][ModifyContacts Success]\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "info",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contactsRepository",
              "objectType": "ContactsRepository",
              "calledFrom": "getAllContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "findAll",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "getAllContacts",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getAllContacts",
              "parameterContents": "\"[getAllContacts][contactsRepository.findAll][Get all contacts error][message: {}]\",\"No content\"",
              "microserviceName": "ts-contacts-service",
              "className": "ContactsServiceImpl",
              "name": "error",
              "packageAndClassName": "contacts.service.ContactsServiceImpl"
            }
          ],
          "name": "ContactsServiceImpl",
          "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "contacts.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "document_type",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "account_id",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                }
              ],
              "returnType": "Contacts",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "SELECT * FROM contacts WHERE account_id = ?1 AND document_number = ?2 AND document_type = ?3"
                  },
                  "name": "Query",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                }
              ],
              "className": "ContactsRepository",
              "name": "findByAccountIdAndDocumentTypeAndDocumentType",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-contacts-service",
              "annotations": [],
              "className": "ContactsRepository",
              "name": "deleteById",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Contacts>",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                }
              ],
              "className": "ContactsRepository",
              "name": "findAll",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                }
              ],
              "returnType": "Optional<Contacts>",
              "microserviceName": "ts-contacts-service",
              "annotations": [],
              "className": "ContactsRepository",
              "name": "findById",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "contacts.repository.ContactsRepository"
                }
              ],
              "returnType": "ArrayList<Contacts>",
              "microserviceName": "ts-contacts-service",
              "annotations": [],
              "className": "ContactsRepository",
              "name": "findByAccountId",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "contacts.repository.ContactsRepository"
            }
          ],
          "methodCalls": [],
          "name": "ContactsRepository",
          "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "contacts.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [
            {
              "parameters": [],
              "returnType": "int",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.entity.Contacts"
                }
              ],
              "className": "Contacts",
              "name": "hashCode",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "parameters": [
                {
                  "type": "Object",
                  "annotations": [],
                  "name": "obj",
                  "packageAndClassName": "contacts.entity.Contacts"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-contacts-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "contacts.entity.Contacts"
                }
              ],
              "className": "Contacts",
              "name": "equals",
              "packageAndClassName": "contacts.entity.Contacts"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "type": "int",
              "name": "documentType",
              "packageAndClassName": "contacts.entity.Contacts"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "AllArgsConstructor",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "contacts.entity.Contacts"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "getClass",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "obj",
              "objectType": "Object",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "getClass",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "name",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getName()",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "equals",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "other",
              "objectType": "Contacts",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "getName",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "accountId",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getAccountId()",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "equals",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "other",
              "objectType": "Contacts",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "getAccountId",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "documentNumber",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getDocumentNumber()",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "equals",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "other",
              "objectType": "Contacts",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "getDocumentNumber",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "phoneNumber",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getPhoneNumber()",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "equals",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "other",
              "objectType": "Contacts",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "getPhoneNumber",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "other",
              "objectType": "Contacts",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "getDocumentType",
              "packageAndClassName": "contacts.entity.Contacts"
            },
            {
              "objectName": "id",
              "objectType": "String",
              "calledFrom": "hashCode",
              "parameterContents": "",
              "microserviceName": "ts-contacts-service",
              "className": "Contacts",
              "name": "hashCode",
              "packageAndClassName": "contacts.entity.Contacts"
            }
          ],
          "name": "Contacts",
          "path": "/ts-contacts-service/src/main/java/contacts/entity/Contacts.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-contacts-service",
              "artifactId": "ts-contacts-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-contacts-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 12347
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-contacts-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${CONTACTS_MYSQL_HOST:ts-contacts-mysql}:${CONTACTS_MYSQL_PORT:3306}/${CONTACTS_MYSQL_DATABASE:ts-contacts-mysql}?useSSL=false",
                "username": "${CONTACTS_MYSQL_USER:root}",
                "password": "${CONTACTS_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "swagger": {
              "controllerPackage": "contacts.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-contacts-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-execute-service",
      "path": "/ts-execute-service",
      "controllers": [
        {
          "packageName": "execute.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/executeservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "execute.controller.ExecuteControlller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-execute-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "className": "ExecuteControlller",
              "name": "home",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "url": "/api/v1/executeservice/execute/collected/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "execute.controller.ExecuteControlller"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "execute.controller.ExecuteControlller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-execute-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                },
                {
                  "attributes": {
                    "path": "/execute/collected/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "className": "ExecuteControlller",
              "name": "collectTicket",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "url": "/api/v1/executeservice/execute/execute/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "execute.controller.ExecuteControlller"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "execute.controller.ExecuteControlller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-execute-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                },
                {
                  "attributes": {
                    "path": "/execute/execute/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "execute.controller.ExecuteControlller"
                }
              ],
              "className": "ExecuteControlller",
              "name": "executeTicket",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            }
          ],
          "fields": [
            {
              "type": "ExecuteService",
              "name": "executeService",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/executeservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "executeTicket",
              "parameterContents": "\"[executeTicket][Execute][Id: {}]\",orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "info",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "executeTicket",
              "parameterContents": "executeService.ticketExecute(orderId, headers)",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "ok",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "objectName": "executeService",
              "objectType": "ExecuteService",
              "calledFrom": "executeTicket",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "ticketExecute",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "collectTicket",
              "parameterContents": "\"[collectTicket][Collect][Id: {}]\",orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "info",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "collectTicket",
              "parameterContents": "executeService.ticketCollect(orderId, headers)",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "ok",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            },
            {
              "objectName": "executeService",
              "objectType": "ExecuteService",
              "calledFrom": "collectTicket",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteControlller",
              "name": "ticketCollect",
              "packageAndClassName": "execute.controller.ExecuteControlller"
            }
          ],
          "name": "ExecuteControlller",
          "path": "/ts-execute-service/src/main/java/execute/controller/ExecuteControlller.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "execute.serivce",
          "implementedTypes": [
            "ExecuteService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                }
              ],
              "returnType": "Response<Order>",
              "microserviceName": "ts-execute-service",
              "annotations": [],
              "className": "ExecuteServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-execute-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                }
              ],
              "className": "ExecuteServiceImpl",
              "name": "ticketExecute",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-execute-service",
              "annotations": [],
              "className": "ExecuteServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "status",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-execute-service",
              "annotations": [],
              "className": "ExecuteServiceImpl",
              "name": "executeOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "type": "String",
              "name": "orderStatusWrong",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketExecute",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "Response",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "Response",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getData",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "ticketExecute",
              "parameterContents": "\"[ticketExecute][getOrderByIdFromOrder][ticket execute error: {}][orderId: {}]\",orderStatusWrong,orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "error",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketExecute",
              "parameterContents": "orderId,OrderStatus.USED.getCode(),headers",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "executeOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "USED",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "ticketExecute",
              "parameterContents": "\"[ticketExecute][executeOrder][executeOrder error: {}][orderId: {}]\",resultExecute.getMsg(),orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "error",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketExecute",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderByIdFromOrderOther",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "Response",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "Response",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getData",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "ticketExecute",
              "parameterContents": "\"[ticketExecute][getOrderByIdFromOrderOther][ticket execute error: {}][orderId: {}]\",orderStatusWrong,orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "error",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketExecute",
              "parameterContents": "orderId,OrderStatus.USED.getCode(),headers",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "executeOrderOther",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "USED",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "ticketExecute",
              "parameterContents": "\"[ticketExecute][executeOrderOther][executeOrderOther error: {}][orderId: {}]\",resultExecute.getMsg(),orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "error",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketExecute",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "ticketExecute",
              "parameterContents": "\"[ticketExecute][getOrderByIdFromOrderOther][ticker execute error: {}][orderId: {}]\",\"Order Not Found\",orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "error",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketCollect",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderByIdFromOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "Response",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "Response",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getData",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "ticketCollect",
              "parameterContents": "\"[ticketCollect][getOrderByIdFromOrder][ticket collect error: {}][orderId: {}]\",orderStatusWrong,orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "error",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketCollect",
              "parameterContents": "orderId,OrderStatus.COLLECTED.getCode(),headers",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "executeOrder",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "ticketCollect",
              "parameterContents": "\"[ticketCollect][executeOrder][ticket collect error: {}][orderId: {}]\",resultExecute.getMsg(),orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "error",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketCollect",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getOrderByIdFromOrderOther",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "Response",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultFromOrder",
              "objectType": "Response",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getData",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "ticketCollect",
              "parameterContents": "\"[ticketCollect][getOrderByIdFromOrderOther][ticket collect error: {}][orderId: {}]\",orderStatusWrong,orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "error",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "ticketCollect",
              "parameterContents": "orderId,OrderStatus.COLLECTED.getCode(),headers",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "executeOrderOther",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getCode",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "ticketCollect",
              "parameterContents": "\"[ticketCollect][executeOrderOther][ticket collect error: {}][orderId: {}]\",resultExecute.getMsg(),orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "error",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "resultExecute",
              "objectType": "Response",
              "calledFrom": "ticketCollect",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "ticketCollect",
              "parameterContents": "\"[ticketCollect][getOrderByIdFromOrderOther][ticket collect error: {}][orderId: {}]\",\"Order Not Found\",orderId",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "error",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "executeOrder",
              "parameterContents": "\"[Execute Service][Execute Order] Executing....\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "info",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "executeOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order/status/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "executeOrder",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order/status/\" + orderId + \"/\" + status,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "exchange",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "executeOrder",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getBody",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "executeOrderOther",
              "parameterContents": "\"[Execute Service][Execute Order] Executing....\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "info",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "executeOrderOther",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/status/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "executeOrderOther",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther/status/\" + orderId + \"/\" + status,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "exchange",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "executeOrderOther",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getBody",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "\"[Execute Service][Get Order] Getting....\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "info",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order/\" + orderId,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<Order>>() {\r\n}",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "exchange",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getOrderByIdFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getBody",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "\"[getOrderByIdFromOrderOther][Execute Service, Get Order]\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "info",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther/\" + orderId,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<Order>>() {\r\n}",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "exchange",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getOrderByIdFromOrderOther",
              "parameterContents": "",
              "microserviceName": "ts-execute-service",
              "className": "ExecuteServiceImpl",
              "name": "getBody",
              "packageAndClassName": "execute.serivce.ExecuteServiceImpl"
            }
          ],
          "name": "ExecuteServiceImpl",
          "path": "/ts-execute-service/src/main/java/execute/serivce/ExecuteServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.services",
                  "artifactId": "ts-common",
                  "version": "0.1.0"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-execute-service",
              "artifactId": "ts-execute-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-execute-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 12386
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-execute-service"
              }
            },
            "swagger": {
              "controllerPackage": "execute.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-execute-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-food-service",
      "path": "/ts-food-service",
      "controllers": [
        {
          "packageName": "foodsearch.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/foodservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "home",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/api/v1/foodservice/createOrderBatch",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "List<FoodOrder>",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "foodOrderList",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/createOrderBatch"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "createFoodBatches",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/api/v1/foodservice/orders/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orders/{orderId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                },
                {
                  "attributes": {},
                  "name": "ResponseStatus",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "deleteFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/api/v1/foodservice/orders",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orders"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "findAllFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/api/v1/foodservice/test_send_delivery",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "boolean",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/test_send_delivery"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "test_send_delivery",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/api/v1/foodservice/orders/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orders/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "findFoodOrderByOrderId",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/api/v1/foodservice/foods/{?}/{?}/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "date",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/foods/{date}/{startStation}/{endStation}/{tripId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "getAllFood",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/api/v1/foodservice/orders",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "FoodOrder",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "updateFoodOrder",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orders"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "updateFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "url": "/api/v1/foodservice/orders",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "FoodOrder",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "addFoodOrder",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "foodsearch.controller.FoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orders"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "foodsearch.controller.FoodController"
                }
              ],
              "className": "FoodController",
              "name": "createFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "type": "FoodService",
              "name": "foodService",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "type": "RabbitSend",
              "name": "sender",
              "packageAndClassName": "foodsearch.controller.FoodController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/foodservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "foodsearch.controller.FoodController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "test_send_delivery",
              "parameterContents": "\"HotPot\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "setFoodName",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "test_send_delivery",
              "parameterContents": "UUID.randomUUID()",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "setOrderId",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "test_send_delivery",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "randomUUID",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "test_send_delivery",
              "parameterContents": "\"Shang Hai\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "setStationName",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "test_send_delivery",
              "parameterContents": "\"MiaoTing Instant-Boiled Mutton\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "setStoreName",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "test_send_delivery",
              "parameterContents": "delivery",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "object2Json",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "sender",
              "objectType": "RabbitSend",
              "calledFrom": "test_send_delivery",
              "parameterContents": "deliveryJson",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "send",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAllFoodOrder",
              "parameterContents": "\"[Food Service]Try to Find all FoodOrder!\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "info",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findAllFoodOrder",
              "parameterContents": "foodService.findAllFoodOrder(headers)",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "ok",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "findAllFoodOrder",
              "parameterContents": "headers",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "findAllFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[createFoodOrder][Try to Create a FoodOrder!]\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "info",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createFoodOrder",
              "parameterContents": "foodService.createFoodOrder(addFoodOrder, headers)",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "ok",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder,headers",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "createFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createFoodBatches",
              "parameterContents": "\"[createFoodBatches][Try to Create Food Batches!]\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "info",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createFoodBatches",
              "parameterContents": "foodService.createFoodOrdersInBatch(foodOrderList, headers)",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "ok",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "createFoodBatches",
              "parameterContents": "foodOrderList,headers",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "createFoodOrdersInBatch",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "\"[updateFoodOrder][Try to Update a FoodOrder!]\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "info",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "foodService.updateFoodOrder(updateFoodOrder, headers)",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "ok",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "updateFoodOrder,headers",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "updateFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteFoodOrder",
              "parameterContents": "\"[deleteFoodOrder][Try to Cancel a FoodOrder!]\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "info",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteFoodOrder",
              "parameterContents": "foodService.deleteFoodOrder(orderId, headers)",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "ok",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "deleteFoodOrder",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "deleteFoodOrder",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findFoodOrderByOrderId",
              "parameterContents": "\"[findFoodOrderByOrderId][Try to Find FoodOrder By orderId!][orderId: {}]\",orderId",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "info",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findFoodOrderByOrderId",
              "parameterContents": "foodService.findByOrderId(orderId, headers)",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "ok",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "findFoodOrderByOrderId",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllFood",
              "parameterContents": "\"[getAllFood][Get Food Request!]\"",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "info",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllFood",
              "parameterContents": "foodService.getAllFood(date, startStation, endStation, tripId, headers)",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "ok",
              "packageAndClassName": "foodsearch.controller.FoodController"
            },
            {
              "objectName": "foodService",
              "objectType": "FoodService",
              "calledFrom": "getAllFood",
              "parameterContents": "date,startStation,endStation,tripId,headers",
              "microserviceName": "ts-food-service",
              "className": "FoodController",
              "name": "getAllFood",
              "packageAndClassName": "foodsearch.controller.FoodController"
            }
          ],
          "name": "FoodController",
          "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "foodsearch.service",
          "implementedTypes": [
            "FoodService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                },
                {
                  "type": "FoodOrder",
                  "annotations": [],
                  "name": "addFoodOrder",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "className": "FoodServiceImpl",
              "name": "createFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-food-service",
              "annotations": [],
              "className": "FoodServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                },
                {
                  "type": "List<FoodOrder>",
                  "annotations": [],
                  "name": "orders",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "className": "FoodServiceImpl",
              "name": "createFoodOrdersInBatch",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Transactional",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "className": "FoodServiceImpl",
              "name": "deleteFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "foodsearch.service.FoodServiceImpl"
                }
              ],
              "className": "FoodServiceImpl",
              "name": "findAllFoodOrder",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "type": "FoodOrderRepository",
              "name": "foodOrderRepository",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "type": "RabbitSend",
              "name": "sender",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "\"[createFoodOrdersInBatch][AddFoodOrder][Order Id Has Existed][OrderId: {}]\",addFoodOrder.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "error",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "toString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "toString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getFoodType()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getStationName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getStoreName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getFoodName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getPrice()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "fo",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "save",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "\"[createFoodOrdersInBatch][AddFoodOrderBatch][Success Save One Order][FoodOrderId: {}]\",fo.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "info",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getFoodName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "UUID.fromString(addFoodOrder.getOrderId())",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "fromString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getStationName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "addFoodOrder.getStoreName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "delivery",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "object2Json",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "deliveryJsons",
              "objectType": "List",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "deliveryJson",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "add",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "\"[createFoodOrdersInBatch][AddFoodOrder][delivery info send to mq][delivery info: {}]\",deliveryJson",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "info",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "sender",
              "objectType": "RabbitSend",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "deliveryJson",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "send",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "\"[createFoodOrdersInBatch][AddFoodOrder][send delivery info to mq error][exception: {}]\",e.toString()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "error",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "createFoodOrdersInBatch",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "toString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[createFoodOrder][AddFoodOrder][Order Id Has Existed][OrderId: {}]\",addFoodOrder.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "error",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "toString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getFoodType()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getStationName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getStoreName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getFoodName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getPrice()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "createFoodOrder",
              "parameterContents": "fo",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "save",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[createFoodOrder][AddFoodOrder Success]\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "info",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getFoodName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "createFoodOrder",
              "parameterContents": "UUID.fromString(addFoodOrder.getOrderId())",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "fromString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getStationName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "delivery",
              "objectType": "Delivery",
              "calledFrom": "createFoodOrder",
              "parameterContents": "addFoodOrder.getStoreName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "addFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "createFoodOrder",
              "parameterContents": "delivery",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "object2Json",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[createFoodOrder][AddFoodOrder, delivery info send to mq][delivery info: {}]\",deliveryJson",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "info",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "sender",
              "objectType": "RabbitSend",
              "calledFrom": "createFoodOrder",
              "parameterContents": "deliveryJson",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "send",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[createFoodOrder][AddFoodOrder][send delivery info to mq error][exception: {}]\",e.toString()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "error",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "toString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "deleteFoodOrder",
              "parameterContents": "UUID.fromString(orderId).toString()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "deleteFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "toString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteFoodOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "fromString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteFoodOrder",
              "parameterContents": "\"[deleteFoodOrder][Cancel FoodOrder][Order Id Is Non-Existent][orderId: {}]\",orderId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "error",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "deleteFoodOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "deleteFoodOrderByOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteFoodOrder",
              "parameterContents": "\"[deleteFoodOrder][Cancel FoodOrder Success]\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "info",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "findAllFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findAll",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrders",
              "objectType": "FoodOrder",
              "calledFrom": "findAllFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAllFoodOrder",
              "parameterContents": "\"[findAllFoodOrder][Find all food order error: {}]\",\"No Content\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "error",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "null",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "orElse",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "updateFoodOrder.getId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findById",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "updateFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "\"[updateFoodOrder][Update FoodOrder][Order Id Is Non-Existent][orderId: {}]\",updateFoodOrder.getOrderId()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "info",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "updateFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "updateFoodOrder.getFoodType()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "updateFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "updateFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "updateFoodOrder.getStationName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "updateFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "updateFoodOrder.getStoreName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "updateFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "updateFoodOrder.getFoodName()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "updateFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "fo",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "updateFoodOrder.getPrice()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "updateFoodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "fo",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "save",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateFoodOrder",
              "parameterContents": "\"[updateFoodOrder][Update FoodOrder Success]\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "info",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodOrderRepository",
              "objectType": "FoodOrderRepository",
              "calledFrom": "findByOrderId",
              "parameterContents": "UUID.fromString(orderId).toString()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "findByOrderId",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "toString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "findByOrderId",
              "parameterContents": "orderId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "fromString",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findByOrderId",
              "parameterContents": "\"[findByOrderId][Find Order by id Success][orderId: {}]\",orderId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "info",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findByOrderId",
              "parameterContents": "\"[findByOrderId][Find Order by id][Order Id Is Non-Existent][orderId: {}]\",orderId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "warn",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllFood",
              "parameterContents": "\"[getAllFood][get All Food with info][data:{} start:{} end:{} tripid:{}]\",date,startStation,endStation,tripId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "info",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "length",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllFood",
              "parameterContents": "\"[getAllFood][Get the Get Food Request Failed][Trip id is not suitable][date: {}, tripId: {}]\",date,tripId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "error",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllFood",
              "parameterContents": "\"ts-train-food-service\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "url": "/api/v1/trainfoodservice/trainfoods/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllFood",
              "parameterContents": "train_food_service_url + \"/api/v1/trainfoodservice/trainfoods/\" + tripId,HttpMethod.GET,requestEntityGetTrainFoodListResult,new ParameterizedTypeReference<Response<List<Food>>>() {\r\n}",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "exchange",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getData",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "reGetTrainFoodListResult",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getBody",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllFood",
              "parameterContents": "\"[getAllFood][Get Train Food List!]\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "info",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllFood",
              "parameterContents": "\"[getAllFood][reGetTrainFoodListResult][Get the Get Food Request Failed!][date: {}, tripId: {}]\",date,tripId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "error",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllFood",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "url": "/api/v1/travelservice/routes/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllFood",
              "parameterContents": "travel_service_url + \"/api/v1/travelservice/routes/\" + tripId,HttpMethod.GET,requestEntityGetRouteResult,new ParameterizedTypeReference<Response<Route>>() {\r\n}",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "exchange",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "reGetRouteResult",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getBody",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stationResult",
              "objectType": "Response",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stationResult",
              "objectType": "Response",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getData",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStations",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getAllFood",
              "parameterContents": "startStation",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "equals",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "size",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getAllFood",
              "parameterContents": "startStation",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "equals",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "i",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "get",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "i",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "remove",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getAllFood",
              "parameterContents": "endStation",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "equals",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "size",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getAllFood",
              "parameterContents": "endStation",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "equals",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "i",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "get",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "List",
              "calledFrom": "getAllFood",
              "parameterContents": "i",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "remove",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllFood",
              "parameterContents": "\"ts-station-food-service\"",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "url": "/api/v1/stationfoodservice/stationfoodstores",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAllFood",
              "parameterContents": "station_food_service_url + \"/api/v1/stationfoodservice/stationfoodstores\",HttpMethod.POST,requestEntityFoodStoresListResult,new ParameterizedTypeReference<Response<List<StationFoodStore>>>() {\r\n}",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "exchange",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getData",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "reFoodStoresListResult",
              "objectType": "ResponseEntity",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getBody",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stationFoodStoresListResult",
              "objectType": "StationFoodStore",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllFood",
              "parameterContents": "Collectors.toList()",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "collect",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "StationFoodStore",
              "calledFrom": "getAllFood",
              "parameterContents": "stationFoodStore -> (stationFoodStore.getStationName().equals(station))",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "filter",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stationFoodStoresListResult",
              "objectType": "StationFoodStore",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "stream",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllFood",
              "parameterContents": "station",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "equals",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "stationFoodStore",
              "objectType": "",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "Collectors",
              "objectType": "Collectors",
              "calledFrom": "getAllFood",
              "parameterContents": "",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "toList",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "foodStoreListMap",
              "objectType": "StationFoodStore",
              "calledFrom": "getAllFood",
              "parameterContents": "station,res",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "put",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllFood",
              "parameterContents": "\"[getAllFood][Get the Get Food Request Failed!][foodStoresListResult is null][date: {}, tripId: {}]\",date,tripId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "error",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllFood",
              "parameterContents": "\"[getAllFood][Get the Get Food Request Failed!][station status error][date: {}, tripId: {}]\",date,tripId",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "error",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "allTripFood",
              "objectType": "AllTripFood",
              "calledFrom": "getAllFood",
              "parameterContents": "trainFoodList",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setTrainFoodList",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            },
            {
              "objectName": "allTripFood",
              "objectType": "AllTripFood",
              "calledFrom": "getAllFood",
              "parameterContents": "foodStoreListMap",
              "microserviceName": "ts-food-service",
              "className": "FoodServiceImpl",
              "name": "setFoodStoreListMap",
              "packageAndClassName": "foodsearch.service.FoodServiceImpl"
            }
          ],
          "name": "FoodServiceImpl",
          "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "foodsearch.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-food-service",
              "annotations": [],
              "className": "FoodOrderRepository",
              "name": "deleteById",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
                }
              ],
              "returnType": "Optional<FoodOrder>",
              "microserviceName": "ts-food-service",
              "annotations": [],
              "className": "FoodOrderRepository",
              "name": "findById",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            },
            {
              "parameters": [],
              "returnType": "List<FoodOrder>",
              "microserviceName": "ts-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
                }
              ],
              "className": "FoodOrderRepository",
              "name": "findAll",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-food-service",
              "annotations": [],
              "className": "FoodOrderRepository",
              "name": "deleteFoodOrderByOrderId",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
                }
              ],
              "returnType": "FoodOrder",
              "microserviceName": "ts-food-service",
              "annotations": [],
              "className": "FoodOrderRepository",
              "name": "findByOrderId",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "foodsearch.repository.FoodOrderRepository"
            }
          ],
          "methodCalls": [],
          "name": "FoodOrderRepository",
          "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "foodsearch.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "foodsearch.entity.FoodOrder"
            },
            {
              "type": "int",
              "name": "foodType",
              "packageAndClassName": "foodsearch.entity.FoodOrder"
            },
            {
              "type": "double",
              "name": "price",
              "packageAndClassName": "foodsearch.entity.FoodOrder"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "AllArgsConstructor",
              "packageAndClassName": "foodsearch.entity.FoodOrder"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "foodsearch.entity.FoodOrder"
            }
          ],
          "methodCalls": [],
          "name": "FoodOrder",
          "path": "/ts-food-service/src/main/java/foodsearch/entity/FoodOrder.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-amqp"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-food-service",
              "artifactId": "ts-food-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-food-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18856
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-food-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${FOOD_MYSQL_HOST:ts-food-mysql}:${FOOD_MYSQL_PORT:3306}/${FOOD_MYSQL_DATABASE:ts-food-mysql}?useSSL=false",
                "username": "${FOOD_MYSQL_USER:root}",
                "password": "${FOOD_MYSQL_PASSWORD:root}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              },
              "rabbitmq": {
                "host": "${rabbitmq_host:localhost}",
                "port": 5672
              }
            },
            "swagger": {
              "controllerPackage": "foodsearch.controller"
            },
            "station-service": {
              "url": "http://${STATION_SERVICE_HOST:ts-station-service}:${STATION_SERVICE_PORT:12345}"
            },
            "travel-service": {
              "url": "http://${TRAVEL_SERVICE_HOST:ts-travel-service}:${TRAVEL_SERVICE_PORT:12346}"
            },
            "train-food-service": {
              "url": "http://${TRAIN_FOOD_SERVICE_HOST:ts-train-food-service}:${TRAIN_FOOD_SERVICE_PORT:19999}"
            },
            "station-food-service": {
              "url": "http://${STATION_FOOD_SERVICE_HOST:ts-station-food-service}:${STATION_FOOD_SERVICE_PORT:18855}"
            }
          },
          "name": "application.yml",
          "path": "/ts-food-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-inside-payment-service",
      "path": "/ts-inside-payment-service",
      "controllers": [
        {
          "packageName": "inside_payment.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/inside_pay_service/inside_payment",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PaymentInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "pay",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/api/v1/inside_pay_service/inside_payment/account",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/account"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "queryAccount",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/api/v1/inside_pay_service/inside_payment/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "userId",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/{userId}/{money}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "addMoney",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/api/v1/inside_pay_service/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "home",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/api/v1/inside_pay_service/inside_payment/account",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AccountInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/account"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "createAccount",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/api/v1/inside_pay_service/inside_payment/drawback/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "userId",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/drawback/{userId}/{money}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "drawBack",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/api/v1/inside_pay_service/inside_payment/money",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/money"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "queryAddMoney",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/api/v1/inside_pay_service/inside_payment/payment",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/payment"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "queryPayment",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "url": "/api/v1/inside_pay_service/inside_payment/difference",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PaymentInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/inside_payment/difference"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "inside_payment.controller.InsidePaymentController"
                }
              ],
              "className": "InsidePaymentController",
              "name": "payDifference",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "type": "InsidePaymentService",
              "name": "service",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/inside_pay_service"
              },
              "name": "RequestMapping",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "pay",
              "parameterContents": "\"[pay][Inside Payment Service.Pay][Pay for: {}]\",info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "info",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "pay",
              "parameterContents": "service.pay(info, headers)",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "ok",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "pay",
              "parameterContents": "info,headers",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "pay",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createAccount",
              "parameterContents": "\"[createAccount][Create account][accountInfo: {}]\",info",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "info",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createAccount",
              "parameterContents": "service.createAccount(info, headers)",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "ok",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "createAccount",
              "parameterContents": "info,headers",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "createAccount",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "addMoney",
              "parameterContents": "\"[addMoney][add money][userId: {}, money: {}]\",userId,money",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "info",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addMoney",
              "parameterContents": "service.addMoney(userId, money, headers)",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "ok",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "addMoney",
              "parameterContents": "userId,money,headers",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "addMoney",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "queryPayment",
              "parameterContents": "\"[queryPayment][query payment]\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "info",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryPayment",
              "parameterContents": "service.queryPayment(headers)",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "ok",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "queryPayment",
              "parameterContents": "headers",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "queryPayment",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "queryAccount",
              "parameterContents": "\"[queryAccount][query account]\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "info",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryAccount",
              "parameterContents": "service.queryAccount(headers)",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "ok",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "queryAccount",
              "parameterContents": "headers",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "queryAccount",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "drawBack",
              "parameterContents": "\"[drawBack][draw back payment][userId: {}, money: {}]\",userId,money",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "info",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "drawBack",
              "parameterContents": "service.drawBack(userId, money, headers)",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "ok",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "drawBack",
              "parameterContents": "userId,money,headers",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "drawBack",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "payDifference",
              "parameterContents": "\"[payDifference][pay difference]\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "info",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "service.payDifference(info, headers)",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "ok",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "payDifference",
              "parameterContents": "info,headers",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "payDifference",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "queryAddMoney",
              "parameterContents": "\"[queryAddMoney][query add money]\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "info",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryAddMoney",
              "parameterContents": "service.queryAddMoney(headers)",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "ok",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            },
            {
              "objectName": "service",
              "objectType": "InsidePaymentService",
              "calledFrom": "queryAddMoney",
              "parameterContents": "headers",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentController",
              "name": "queryAddMoney",
              "packageAndClassName": "inside_payment.controller.InsidePaymentController"
            }
          ],
          "name": "InsidePaymentController",
          "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "inside_payment.service",
          "implementedTypes": [
            "InsidePaymentService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "userId",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "addMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "queryAccount",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                },
                {
                  "type": "AccountInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "createAccount",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Payment",
                  "annotations": [],
                  "name": "payment",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "initPayment",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [],
              "className": "InsidePaymentServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [],
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                },
                {
                  "type": "PaymentInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "className": "InsidePaymentServiceImpl",
              "name": "pay",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "userId",
                  "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-inside-payment-service",
              "annotations": [],
              "className": "InsidePaymentServiceImpl",
              "name": "queryAccount",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "PaymentRepository",
              "name": "paymentRepository",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "type": "AddMoneyRepository",
              "name": "addMoneyRepository",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "pay",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "pay",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "pay",
              "parameterContents": "requestOrderURL,HttpMethod.GET,requestGetOrderResults,new ParameterizedTypeReference<Response<Order>>() {\r\n}",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "exchange",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "reGetOrderResults",
              "objectType": "ResponseEntity",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getBody",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getData",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getCode",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "pay",
              "parameterContents": "\"[Inside Payment Service.pay][Order status Not allowed to Pay]\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "warn",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "pay",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "pay",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMonies",
              "objectType": "Money",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "pay",
              "parameterContents": "new BigDecimal(p.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "p",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "pay",
              "parameterContents": "new BigDecimal(order.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "Money",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "Money",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "money",
              "objectType": "BigDecimal",
              "calledFrom": "pay",
              "parameterContents": "new BigDecimal(addMoney.getMoney())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "pay",
              "parameterContents": "money",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "compareTo",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "pay",
              "parameterContents": "\"ts-payment-service\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "/api/v1/paymentservice/payment",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "pay",
              "parameterContents": "payment_service_url + \"/api/v1/paymentservice/payment\",HttpMethod.POST,requestEntityOutsidePaySuccess,Response.class",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "exchange",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "reOutsidePaySuccess",
              "objectType": "ResponseEntity",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getBody",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "pay",
              "parameterContents": "\"[Inside Payment Service.pay][outside Pay][Out pay result: {}]\",outsidePaySuccess.toString()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "info",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaySuccess",
              "objectType": "Response",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "toString",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaySuccess",
              "objectType": "Response",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "PaymentType.O",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "pay",
              "parameterContents": "payment",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "pay",
              "parameterContents": "info.getTripId(),info.getOrderId(),headers",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaySuccess",
              "objectType": "Response",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "pay",
              "parameterContents": "\"Payment failed: {}\",outsidePaySuccess.getMsg()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "error",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaySuccess",
              "objectType": "Response",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaySuccess",
              "objectType": "Response",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "pay",
              "parameterContents": "info.getTripId(),info.getOrderId(),headers",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "PaymentType.P",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "pay",
              "parameterContents": "payment",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "pay",
              "parameterContents": "\"[Inside Payment Service.pay][Payment success][orderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "info",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "pay",
              "parameterContents": "\"[Inside Payment Service.pay][Payment failed][Order not exists][orderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "error",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "createAccount",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AccountInfo",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "Money",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "createAccount",
              "parameterContents": "info.getMoney()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AccountInfo",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "createAccount",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AccountInfo",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "createAccount",
              "parameterContents": "MoneyType.A",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "createAccount",
              "parameterContents": "addMoney",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createAccount",
              "parameterContents": "\"[createAccount][Create Account Failed][Account already Exists][userId: {}]\",info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "error",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "AccountInfo",
              "calledFrom": "createAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "addMoney",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "addMoney",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "addMoney",
              "parameterContents": "money",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "addMoney",
              "parameterContents": "MoneyType.A",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "addMoney",
              "parameterContents": "addMoney",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "addMoney",
              "parameterContents": "\"Add Money Failed, userId: {}\",userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "error",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findAll",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "ite",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "ite",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "map",
              "objectType": "HashMap",
              "calledFrom": "queryAccount",
              "parameterContents": "addMoney.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "containsKey",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "map",
              "objectType": "HashMap",
              "calledFrom": "queryAccount",
              "parameterContents": "addMoney.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "get",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "map",
              "objectType": "HashMap",
              "calledFrom": "queryAccount",
              "parameterContents": "addMoney.getUserId(),money.add(new BigDecimal(addMoney.getMoney())).toString()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "put",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "toString",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "money",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "new BigDecimal(addMoney.getMoney())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "map",
              "objectType": "HashMap",
              "calledFrom": "queryAccount",
              "parameterContents": "addMoney.getUserId(),addMoney.getMoney()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "put",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Set",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "map",
              "objectType": "HashMap",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "entrySet",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "ite1",
              "objectType": "Iterator",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "ite1",
              "objectType": "Iterator",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "entry",
              "objectType": "Entry",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getKey",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "entry",
              "objectType": "Entry",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getValue",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "queryAccount",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "iterator",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "iterator",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "toString",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "expand",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "new BigDecimal(p.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "p",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "toString",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "new BigDecimal(totalExpand)",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "subtract",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "balance",
              "objectType": "Balance",
              "calledFrom": "queryAccount",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "balance",
              "objectType": "Balance",
              "calledFrom": "queryAccount",
              "parameterContents": "balanceMoney",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setBalance",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Balance",
              "calledFrom": "queryAccount",
              "parameterContents": "balance",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "queryAccount",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "queryAccount",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMonies",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "new BigDecimal(p.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "p",
              "objectType": "Payment",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "money",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "new BigDecimal(addMoney.getMoney())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "toString",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "money",
              "objectType": "BigDecimal",
              "calledFrom": "queryAccount",
              "parameterContents": "totalExpand",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "subtract",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "queryPayment",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findAll",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "queryPayment",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "queryPayment",
              "parameterContents": "\"[queryPayment][Query payment failed][payment is null]\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "error",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "drawBack",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "drawBack",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "drawBack",
              "parameterContents": "money",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "drawBack",
              "parameterContents": "MoneyType.D",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "drawBack",
              "parameterContents": "addMoney",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "drawBack",
              "parameterContents": "\"[drawBack][Draw Back Money Failed][addMoneyRepository.findByUserId null][userId: {}]\",userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "error",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "info.getPrice()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "payDifference",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "payDifference",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMonies",
              "objectType": "Money",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "iterator",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentsIterator",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "new BigDecimal(p.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "p",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "new BigDecimal(info.getPrice())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "Money",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "hasNext",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoniesIterator",
              "objectType": "Money",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "next",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "money",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "new BigDecimal(addMoney.getMoney())",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "add",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getMoney",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "totalExpand",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "money",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "compareTo",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "userId",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaymentInfo",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "info.getPrice()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "\"ts-payment-service\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "/api/v1/paymentservice/payment",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "payDifference",
              "parameterContents": "payment_service_url + \"/api/v1/paymentservice/payment\",HttpMethod.POST,requestEntityOutsidePaySuccess,Response.class",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "exchange",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "reOutsidePaySuccess",
              "objectType": "ResponseEntity",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getBody",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "outsidePaySuccess",
              "objectType": "Response",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "PaymentType.E",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "payDifference",
              "parameterContents": "payment",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "payDifference",
              "parameterContents": "\"[payDifference][Pay Difference Failed][outsidePaySuccess status not 1][orderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "error",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "payDifference",
              "parameterContents": "PaymentType.E",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "setType",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "payDifference",
              "parameterContents": "payment",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "queryAddMoney",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findAll",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "monies",
              "objectType": "Money",
              "calledFrom": "queryAddMoney",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "queryAddMoney",
              "parameterContents": "\"[queryAddMoney][Query money failed][addMoneyRepository.findAll null]\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "error",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "setOrderStatus",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "setOrderStatus",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "setOrderStatus",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order/status/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "setOrderStatus",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order/status/\" + orderId + \"/\" + orderStatus,HttpMethod.GET,requestEntityModifyOrderStatusResult,Response.class",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "exchange",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "reModifyOrderStatusResult",
              "objectType": "ResponseEntity",
              "calledFrom": "setOrderStatus",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getBody",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "setOrderStatus",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/status/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "setOrderStatus",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther/status/\" + orderId + \"/\" + orderStatus,HttpMethod.GET,requestEntityModifyOrderStatusResult,Response.class",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "exchange",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "reModifyOrderStatusResult",
              "objectType": "ResponseEntity",
              "calledFrom": "setOrderStatus",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getBody",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "initPayment",
              "parameterContents": "payment.getId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "findById",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "initPayment",
              "parameterContents": "payment",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "initPayment",
              "parameterContents": "\"[initPayment][paymentTemp Already Exists][paymentId: {}, orderId: {}]\",payment.getId(),payment.getOrderId()",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "error",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-inside-payment-service",
              "className": "InsidePaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "inside_payment.service.InsidePaymentServiceImpl"
            }
          ],
          "name": "InsidePaymentServiceImpl",
          "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [
        {
          "packageName": "inside_payment.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "inside_payment.entity.Money"
            },
            {
              "type": "MoneyType",
              "name": "type",
              "packageAndClassName": "inside_payment.entity.Money"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "inside_payment.entity.Money"
            },
            {
              "attributes": {
                "name": "inside_money"
              },
              "name": "Table",
              "packageAndClassName": "inside_payment.entity.Money"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "inside_payment.entity.Money"
            }
          ],
          "methodCalls": [],
          "name": "Money",
          "path": "/ts-inside-payment-service/src/main/java/inside_payment/entity/Money.java",
          "fileType": "JCLASS"
        },
        {
          "packageName": "inside_payment.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "PaymentType",
              "name": "type",
              "packageAndClassName": "inside_payment.entity.Payment"
            },
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "inside_payment.entity.Payment"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "name": "inside_payment"
              },
              "name": "Table",
              "packageAndClassName": "inside_payment.entity.Payment"
            },
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "inside_payment.entity.Payment"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "inside_payment.entity.Payment"
            }
          ],
          "methodCalls": [],
          "name": "Payment",
          "path": "/ts-inside-payment-service/src/main/java/inside_payment/entity/Payment.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-inside-payment-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "scope": "runtime",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-inside-payment-service",
              "artifactId": "ts-inside-payment-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-inside-payment-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18673
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-inside-payment-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${INSIDE_PAYMENT_MYSQL_HOST:ts-inside-payment-mysql}:${INSIDE_PAYMENT_MYSQL_PORT:3306}/${INSIDE_PAYMENT_MYSQL_DATABASE:ts-inside-payment-mysql}?useSSL=false",
                "username": "${INSIDE_PAYMENT_MYSQL_USER:root}",
                "password": "${INSIDE_PAYMENT_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "swagger": {
              "controllerPackage": "inside_payment.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-inside-payment-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-notification-service",
      "path": "/ts-notification-service",
      "controllers": [
        {
          "packageName": "notification.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/notifyservice/test_send_mq",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/test_send_mq"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "test_send",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "url": "/api/v1/notifyservice/notification/preserve_success",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "notification.controller.NotificationController"
                },
                {
                  "type": "NotifyInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/notification/preserve_success"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "preserve_success",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "url": "/api/v1/notifyservice/notification/order_cancel_success",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "notification.controller.NotificationController"
                },
                {
                  "type": "NotifyInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/notification/order_cancel_success"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "order_cancel_success",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "url": "/api/v1/notifyservice/test_send_mail",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/test_send_mail"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "test_send_mail",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "url": "/api/v1/notifyservice/notification/order_create_success",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "notification.controller.NotificationController"
                },
                {
                  "type": "NotifyInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/notification/order_create_success"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "order_create_success",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "url": "/api/v1/notifyservice/notification/order_changed_success",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "notification.controller.NotificationController"
                },
                {
                  "type": "NotifyInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "notification.controller.NotificationController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/notification/order_changed_success"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "order_changed_success",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "url": "/api/v1/notifyservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "notification.controller.NotificationController"
                }
              ],
              "className": "NotificationController",
              "name": "home",
              "packageAndClassName": "notification.controller.NotificationController"
            }
          ],
          "fields": [
            {
              "type": "NotificationService",
              "name": "service",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "type": "String",
              "name": "test_mail_user",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "type": "RabbitSend",
              "name": "sender",
              "packageAndClassName": "notification.controller.NotificationController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "attributes": {
                "default": "/api/v1/notifyservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "notification.controller.NotificationController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "sender",
              "objectType": "RabbitSend",
              "calledFrom": "test_send",
              "parameterContents": "\"test\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "send",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "test_send_mail",
              "parameterContents": "\"Wed Jul 21 09:49:44 CST 2021\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "setDate",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "test_send_mail",
              "parameterContents": "test_mail_user",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "setEmail",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "test_send_mail",
              "parameterContents": "\"Test\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "setEndPlace",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "test_send_mail",
              "parameterContents": "\"Test\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "setStartPlace",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "test_send_mail",
              "parameterContents": "\"111-111-111\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "setOrderNumber",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "test_send_mail",
              "parameterContents": "\"100\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "setPrice",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "test_send_mail",
              "parameterContents": "\"1\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "setSeatClass",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "test_send_mail",
              "parameterContents": "\"1102\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "setSeatNumber",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "test_send_mail",
              "parameterContents": "\"Sat May 04 07:00:00 CST 2013\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "setStartTime",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "test_send_mail",
              "parameterContents": "\"h10g\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "setUsername",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "service",
              "objectType": "NotificationService",
              "calledFrom": "test_send_mail",
              "parameterContents": "notifyInfo,null",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "preserveSuccess",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "service",
              "objectType": "NotificationService",
              "calledFrom": "preserve_success",
              "parameterContents": "info,headers",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "preserveSuccess",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "service",
              "objectType": "NotificationService",
              "calledFrom": "order_create_success",
              "parameterContents": "info,headers",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "orderCreateSuccess",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "service",
              "objectType": "NotificationService",
              "calledFrom": "order_changed_success",
              "parameterContents": "info,headers",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "orderChangedSuccess",
              "packageAndClassName": "notification.controller.NotificationController"
            },
            {
              "objectName": "service",
              "objectType": "NotificationService",
              "calledFrom": "order_cancel_success",
              "parameterContents": "info,headers",
              "microserviceName": "ts-notification-service",
              "className": "NotificationController",
              "name": "orderCancelSuccess",
              "packageAndClassName": "notification.controller.NotificationController"
            }
          ],
          "name": "NotificationController",
          "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "notification.service",
          "implementedTypes": [],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "template",
                  "packageAndClassName": "notification.service.MailService"
                },
                {
                  "type": "Mail",
                  "annotations": [],
                  "name": "mail",
                  "packageAndClassName": "notification.service.MailService"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-notification-service",
              "annotations": [],
              "className": "MailService",
              "name": "sendEmail",
              "packageAndClassName": "notification.service.MailService"
            }
          ],
          "fields": [
            {
              "type": "Configuration",
              "name": "freemarkerConfig",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "type": "JavaMailSender",
              "name": "sender",
              "packageAndClassName": "notification.service.MailService"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "notification.service.MailService"
            }
          ],
          "methodCalls": [
            {
              "objectName": "sender",
              "objectType": "JavaMailSender",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "createMimeMessage",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "freemarkerConfig",
              "objectType": "Configuration",
              "calledFrom": "sendEmail",
              "parameterContents": "this.getClass(),\"/templates\"",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "setClassForTemplateLoading",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "",
              "objectType": "MailService",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getClass",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "freemarkerConfig",
              "objectType": "Configuration",
              "calledFrom": "sendEmail",
              "parameterContents": "template",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getTemplate",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "FreeMarkerTemplateUtils",
              "objectType": "Solving FreeMarkerTemplateUtils",
              "calledFrom": "sendEmail",
              "parameterContents": "t,mail.getModel()",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "processTemplateIntoString",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getModel",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "helper",
              "objectType": "MimeMessageHelper",
              "calledFrom": "sendEmail",
              "parameterContents": "mail.getMailTo()",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "setTo",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getMailTo",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "helper",
              "objectType": "MimeMessageHelper",
              "calledFrom": "sendEmail",
              "parameterContents": "text,true",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "setText",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "helper",
              "objectType": "MimeMessageHelper",
              "calledFrom": "sendEmail",
              "parameterContents": "mail.getMailFrom()",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "setFrom",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getMailFrom",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "helper",
              "objectType": "MimeMessageHelper",
              "calledFrom": "sendEmail",
              "parameterContents": "mail.getMailSubject()",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "setSubject",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "sendEmail",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "getMailSubject",
              "packageAndClassName": "notification.service.MailService"
            },
            {
              "objectName": "sender",
              "objectType": "JavaMailSender",
              "calledFrom": "sendEmail",
              "parameterContents": "message",
              "microserviceName": "ts-notification-service",
              "className": "MailService",
              "name": "send",
              "packageAndClassName": "notification.service.MailService"
            }
          ],
          "name": "MailService",
          "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
          "fileType": "JCLASS"
        },
        {
          "packageName": "notification.service",
          "implementedTypes": [
            "NotificationService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "notification.service.NotificationServiceImpl"
                },
                {
                  "type": "NotifyInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "notification.service.NotificationServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "notification.service.NotificationServiceImpl"
                }
              ],
              "className": "NotificationServiceImpl",
              "name": "preserveSuccess",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "MailService",
              "name": "mailService",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "type": "String",
              "name": "email",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "type": "JavaMailSender",
              "name": "mailSender",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "preserveSuccess",
              "parameterContents": "email",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailFrom",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "preserveSuccess",
              "parameterContents": "info.getEmail()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailTo",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserveSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "preserveSuccess",
              "parameterContents": "\"Preserve Success\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailSubject",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserveSuccess",
              "parameterContents": "username,info.getUsername()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserveSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserveSuccess",
              "parameterContents": "startPlace,info.getStartPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserveSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserveSuccess",
              "parameterContents": "endPlace,info.getEndPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserveSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserveSuccess",
              "parameterContents": "startTime,info.getStartTime()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserveSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserveSuccess",
              "parameterContents": "\"date\",info.getDate()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserveSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getDate",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserveSuccess",
              "parameterContents": "seatClass,info.getSeatClass()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserveSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserveSuccess",
              "parameterContents": "seatNumber,info.getSeatNumber()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserveSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "preserveSuccess",
              "parameterContents": "\"price\",info.getPrice()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "preserveSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "preserveSuccess",
              "parameterContents": "model",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setModel",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mailService",
              "objectType": "MailService",
              "calledFrom": "preserveSuccess",
              "parameterContents": "mail,\"preserve_success.ftl\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "preserveSuccess",
              "parameterContents": "\"[preserveSuccess][mailService.sendEmai][Exception: {}]\",e.getMessage()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "error",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "preserveSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "email",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailFrom",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "info.getEmail()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailTo",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "\"Order Create Success\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailSubject",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "username,info.getUsername()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "startPlace,info.getStartPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "endPlace,info.getEndPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "startTime,info.getStartTime()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "\"date\",info.getDate()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getDate",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "seatClass,info.getSeatClass()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "seatNumber,info.getSeatNumber()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "\"orderNumber\",info.getOrderNumber()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getOrderNumber",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "model",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setModel",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mailService",
              "objectType": "MailService",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "mail,\"order_create_success.ftl\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "\"[orderCreateSuccess][mailService.sendEmai][Exception: {}]\",e.getMessage()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "error",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "orderCreateSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "email",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailFrom",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "info.getEmail()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailTo",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "\"Order Changed Success\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailSubject",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "username,info.getUsername()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "startPlace,info.getStartPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "endPlace,info.getEndPlace()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "startTime,info.getStartTime()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "\"date\",info.getDate()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getDate",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "seatClass,info.getSeatClass()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "seatNumber,info.getSeatNumber()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "\"orderNumber\",info.getOrderNumber()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getOrderNumber",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "model",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setModel",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mailService",
              "objectType": "MailService",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "mail,\"order_changed_success.ftl\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "\"[orderChangedSuccess][mailService.sendEmai][Exception: {}]\",e.getMessage()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "error",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "orderChangedSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "email",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailFrom",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "info.getEmail()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailTo",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "\"Order Cancel Success\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setMailSubject",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "username,info.getUsername()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "model",
              "objectType": "Map",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "\"price\",info.getPrice()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "put",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "NotifyInfo",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mail",
              "objectType": "Mail",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "model",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "setModel",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "mailService",
              "objectType": "MailService",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "mail,\"order_cancel_success.ftl\"",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "\"[orderCancelSuccess][mailService.sendEmai][Exception: {}]\",e.getMessage()",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "error",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "orderCancelSuccess",
              "parameterContents": "",
              "microserviceName": "ts-notification-service",
              "className": "NotificationServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "notification.service.NotificationServiceImpl"
            }
          ],
          "name": "NotificationServiceImpl",
          "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "notification.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "notification.repository.NotifyRepository"
                }
              ],
              "returnType": "Optional<NotifyInfo>",
              "microserviceName": "ts-notification-service",
              "annotations": [],
              "className": "NotifyRepository",
              "name": "findById",
              "packageAndClassName": "notification.repository.NotifyRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "notification.repository.NotifyRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-notification-service",
              "annotations": [],
              "className": "NotifyRepository",
              "name": "deleteById",
              "packageAndClassName": "notification.repository.NotifyRepository"
            },
            {
              "parameters": [],
              "returnType": "List<NotifyInfo>",
              "microserviceName": "ts-notification-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "notification.repository.NotifyRepository"
                }
              ],
              "className": "NotifyRepository",
              "name": "findAll",
              "packageAndClassName": "notification.repository.NotifyRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "notification.repository.NotifyRepository"
            }
          ],
          "methodCalls": [],
          "name": "NotifyRepository",
          "path": "/ts-notification-service/src/main/java/notification/repository/NotifyRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "notification.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "notification.entity.NotifyInfo"
            },
            {
              "type": "Boolean",
              "name": "sendStatus",
              "packageAndClassName": "notification.entity.NotifyInfo"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "AllArgsConstructor",
              "packageAndClassName": "notification.entity.NotifyInfo"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "notification.entity.NotifyInfo"
            }
          ],
          "methodCalls": [],
          "name": "NotifyInfo",
          "path": "/ts-notification-service/src/main/java/notification/entity/NotifyInfo.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-notification-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-mail"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-freemarker"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-amqp"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "scope": "runtime",
                    "artifactId": "mysql-connector-java"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-notification-service",
              "artifactId": "ts-notification-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-notification-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 17853
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-notification-service"
              },
              "mail": {
                "host": "smtp.163.com",
                "port": 465,
                "username": "${email_address:trainticket_notify@163.com}",
                "password": "${email_password:GZKSCXHBOLKMCLDQ}",
                "properties": {
                  "mail": {
                    "smtp": {
                      "ssl": {
                        "enable": true
                      },
                      "auth": true,
                      "starttls": {
                        "enable": true,
                        "required": true
                      }
                    }
                  }
                }
              },
              "datasource": {
                "url": "jdbc:mysql://${NOTIFICATION_MYSQL_HOST:ts-notification-mysql}:${NOTIFICATION_MYSQL_PORT:3306}/${NOTIFICATION_MYSQL_DATABASE:ts-notification-mysql}?useSSL=false",
                "username": "${NOTIFICATION_MYSQL_USER:root}",
                "password": "${NOTIFICATION_MYSQL_PASSWORD:root}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              },
              "rabbitmq": {
                "host": "${rabbitmq_host:localhost}",
                "port": 5672
              }
            },
            "swagger": {
              "controllerPackage": "notification.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-notification-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-order-other-service",
      "path": "/ts-order-other-service",
      "controllers": [
        {
          "packageName": "other.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/orderOtherService/orderOther/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "getOrderById",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/admin",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "order",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/admin"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "updateOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/admin",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "order",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/admin"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "addcreateNewOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/status/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "int",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "status",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/status/{orderId}/{status}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "modifyOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/tickets",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Seat",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "seatRequest",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/orderOther/tickets"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "getTicketListByDateAndTripId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "orderInfo",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "saveOrderInfo",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "createOrder",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "createNewOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/{orderId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "deleteOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "travelDate",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/{travelDate}/{trainNumber}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "calculateSoldTicket",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/price/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/price/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "getOrderPrice",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/orderPay/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/orderPay/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "payOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/query",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "qi",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orderOther/query"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "queryOrders",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "findAllOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/security/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "checkDate",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/security/{checkDate}/{accountId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "securityInfoCheck",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "home",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/refresh",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "QueryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "qi",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "other.controller.OrderOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "other.controller.OrderOtherController"
                },
                {
                  "attributes": {
                    "path": "/orderOther/refresh"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "other.controller.OrderOtherController"
                }
              ],
              "className": "OrderOtherController",
              "name": "queryOrdersForRefresh",
              "packageAndClassName": "other.controller.OrderOtherController"
            }
          ],
          "fields": [
            {
              "type": "OrderOtherService",
              "name": "orderService",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "other.controller.OrderOtherController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/orderOtherService"
              },
              "name": "RequestMapping",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "other.controller.OrderOtherController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "\"[getSoldTickets][Get Sold Ticket][Travel Date: {}]\",seatRequest.getTravelDate().toString()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Seat",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "toString",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getTravelDate",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "orderService.getSoldTickets(seatRequest, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "seatRequest,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getSoldTickets",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"[create][Create Order][from {} to {} at {}]\",createOrder.getFrom(),createOrder.getTo(),createOrder.getTravelDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "createOrder",
              "objectType": "Order",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getFrom",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "createOrder",
              "objectType": "Order",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getTo",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "createOrder",
              "objectType": "Order",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getTravelDate",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createNewOrder",
              "parameterContents": "orderService.create(createOrder, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "createNewOrder",
              "parameterContents": "createOrder,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "create",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addcreateNewOrder",
              "parameterContents": "\"[addNewOrder][Add new order][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addcreateNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addcreateNewOrder",
              "parameterContents": "orderService.addNewOrder(order, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "addcreateNewOrder",
              "parameterContents": "order,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "addNewOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Query Orders][for LoginId :{}]\",qi.getLoginId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getLoginId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryOrders",
              "parameterContents": "orderService.queryOrders(qi, qi.getLoginId(), headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "queryOrders",
              "parameterContents": "qi,qi.getLoginId(),headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "queryOrders",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getLoginId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "\"[queryOrdersForRefresh][Query Orders][for LoginId:{}]\",qi.getLoginId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getLoginId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "orderService.queryOrdersForRefresh(qi, qi.getLoginId(), headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "qi,qi.getLoginId(),headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "queryOrdersForRefresh",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getLoginId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "\"[queryAlreadySoldOrders][Calculate Sold Tickets][Date: {} TrainNumber: {}]\",travelDate,trainNumber",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "orderService.queryAlreadySoldOrders(StringUtils.String2Date(travelDate), trainNumber, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "StringUtils.String2Date(travelDate),trainNumber,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "queryAlreadySoldOrders",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "travelDate",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "String2Date",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[getOrderPrice][Get Order Price][Order Id: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderPrice",
              "parameterContents": "orderService.getOrderPrice(orderId, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "getOrderPrice",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrderPrice",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "payOrder",
              "parameterContents": "\"[payOrder][Pay Order][Order Id: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payOrder",
              "parameterContents": "orderService.payOrder(orderId, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "payOrder",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "payOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderById",
              "parameterContents": "\"[getOrderById][Get Order By Id][Order Id: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderById",
              "parameterContents": "orderService.getOrderById(orderId, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "getOrderById",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getOrderById",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"[modifyOrder][Modify Order Status][Order Id: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyOrder",
              "parameterContents": "orderService.modifyOrder(orderId, status, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "modifyOrder",
              "parameterContents": "orderId,status,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "modifyOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "\"[checkSecurityAboutOrder][Security Info Get][CheckDate:{} , AccountId:{}]\",checkDate,accountId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "orderService.checkSecurityAboutOrder(StringUtils.String2Date(checkDate), accountId, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "StringUtils.String2Date(checkDate),accountId,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "checkSecurityAboutOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "checkDate",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "String2Date",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "\"[saveChanges][Save Order Info][OrderId:{}]\",orderInfo.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderInfo",
              "objectType": "Order",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "orderService.saveChanges(orderInfo, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "orderInfo,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "saveChanges",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Update Order][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getId",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "orderService.updateOrder(order, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "updateOrder",
              "parameterContents": "order,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "updateOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[deleteOrder][Delete Order][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderService.deleteOrder(orderId, headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "deleteOrder",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAllOrder",
              "parameterContents": "\"[getAllOrders][Find All Order]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "info",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findAllOrder",
              "parameterContents": "orderService.getAllOrders(headers)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "ok",
              "packageAndClassName": "other.controller.OrderOtherController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderOtherService",
              "calledFrom": "findAllOrder",
              "parameterContents": "headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherController",
              "name": "getAllOrders",
              "packageAndClassName": "other.controller.OrderOtherController"
            }
          ],
          "name": "OrderOtherController",
          "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "other.service",
          "implementedTypes": [
            "OrderOtherService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "initOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainNumber",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "queryAlreadySoldOrders",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "getAllOrders",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "ids",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "List<String>",
              "microserviceName": "ts-order-other-service",
              "annotations": [],
              "className": "OrderOtherServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "OrderAlterInfo",
                  "annotations": [],
                  "name": "oai",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "alterOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-order-other-service",
              "annotations": [],
              "className": "OrderOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "Seat",
                  "annotations": [],
                  "name": "seatRequest",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "getSoldTickets",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "QueryInfo",
                  "annotations": [],
                  "name": "qi",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "Response<ArrayList<Order>>",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "queryOrders",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "create",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "QueryInfo",
                  "annotations": [],
                  "name": "qi",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "queryOrdersForRefresh",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "status",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.service.OrderOtherServiceImpl"
                }
              ],
              "className": "OrderOtherServiceImpl",
              "name": "modifyOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "type": "OrderOtherRepository",
              "name": "orderOtherRepository",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "getSoldTickets",
              "parameterContents": "seatRequest.getTravelDate(),seatRequest.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByTravelDateAndTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "getSoldTickets",
              "parameterContents": "Integer.parseInt(tempOrder.getSeatNumber())",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSeatNo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "Integer",
              "objectType": "Integer",
              "calledFrom": "getSoldTickets",
              "parameterContents": "tempOrder.getSeatNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "parseInt",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "getSoldTickets",
              "parameterContents": "tempOrder.getFrom()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "getSoldTickets",
              "parameterContents": "tempOrder.getTo()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ticketSet",
              "objectType": "Set",
              "calledFrom": "getSoldTickets",
              "parameterContents": "ticket",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "add",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "leftTicketInfo",
              "objectType": "LeftTicketInfo",
              "calledFrom": "getSoldTickets",
              "parameterContents": "ticketSet",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSoldTickets",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getSoldTickets",
              "parameterContents": "\"[getSoldTickets][Left ticket info][info is: {}]\",leftTicketInfo.toString()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "leftTicketInfo",
              "objectType": "LeftTicketInfo",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getSoldTickets",
              "parameterContents": "\"[getSoldTickets][Seat][No content][seat from date: {}, train number: {}\",seatRequest.getTravelDate(),seatRequest.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "warn",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "findOrderById",
              "parameterContents": "id",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "findOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findOrderById",
              "parameterContents": "\"[findOrderById][Find Order By Id Fail][No content][id: {}]\",id",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "warn",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "findOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findOrderById",
              "parameterContents": "\"[findOrderById][Find Order By Id Success][id: {}]\",id",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Create Order][Ready Create Order]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "create",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "accountOrders",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "contains",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Order Create Fail][Order already exists][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "create",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Order Create Success][OrderId:{},Price: {}]\",order.getId(),order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "initOrder",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "initOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "initOrder",
              "parameterContents": "\"[initOrder][Init Order Success][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "initOrder",
              "parameterContents": "\"[initOrder][Init Order Fail][Order Already Exists][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPreviousOrderId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "OrderOtherRepository",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "alterOrder",
              "parameterContents": "\"[alterOrder][Alter Order Fail][Order do not exist][OrderId: {}]\",oldOrderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "OrderOtherRepository",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrder,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "saveChanges",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getNewOrderInfo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "alterOrder",
              "parameterContents": "oai.getNewOrderInfo(),headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "create",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getNewOrderInfo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "alterOrder",
              "parameterContents": "\"[alterOrder][Alter Order Success][newOrderId:{}]\",newOrder.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "alterOrder",
              "parameterContents": "\"[alterOrder][Alter Order Fail][Create new order fail][newOrderId: {}]\",newOrder.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "queryOrders",
              "parameterContents": "accountId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Step 1][Get Orders Number of Account][size: {}]\",list.size()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "size",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableStateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableBoughtDateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableTravelDateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableStateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getState",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Step 2][Check Status Fits End]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryOrders",
              "parameterContents": "tempOrder.getBoughtDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryOrders",
              "parameterContents": "tempOrder.getTravelDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getTravelDateEnd()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDateEnd",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getBoughtDateStart()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDateStart",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getBoughtDateEnd()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDateEnd",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableTravelDateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "travelDate",
              "objectType": "Date",
              "calledFrom": "queryOrders",
              "parameterContents": "travelDateEnd",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "before",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "travelDate",
              "objectType": "Date",
              "calledFrom": "queryOrders",
              "parameterContents": "boughtDateStart",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "after",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Step 2][Check Travel Date End]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isEnableBoughtDateQuery",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "boughtDate",
              "objectType": "Date",
              "calledFrom": "queryOrders",
              "parameterContents": "boughtDateEnd",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "before",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "boughtDate",
              "objectType": "Date",
              "calledFrom": "queryOrders",
              "parameterContents": "boughtDateStart",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "after",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Step 2][Check Bought Date End]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "finalList",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "tempOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "add",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Step 2][Check All Requirement End]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Get order num][size:{}]\",finalList.size()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "finalList",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "size",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Orders don't fit the requirement][loginId: {}]\",qi.getLoginId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "warn",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "QueryInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "qi,accountId,headers",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "queryOrders",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "stationIds",
              "objectType": "ArrayList",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "add",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "stationIds",
              "objectType": "ArrayList",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "add",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "size",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "stationIds.get(i * 2)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "i",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "stationIds",
              "objectType": "ArrayList",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "i * 2",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "stationIds.get(i * 2 + 1)",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "i",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "stationIds",
              "objectType": "ArrayList",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "i * 2 + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "url": "/api/v1/stationservice/stations/namelist",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "station_service_url + \"/api/v1/stationservice/stations/namelist\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<List<String>>>() {\r\n}",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[queryForStationId][Stations name list][Name List is : {}]\",re.getBody().toString()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[saveChanges][Modify Order Fail][Order not found][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getBoughtDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTravelDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTravelTime()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getCoachNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setCoachNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCoachNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getStatus()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getContactsName()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getContactsName",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getDocumentType()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getContactsDocumentNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getContactsDocumentNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "saveChanges",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[saveChanges][Modify Order Success][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "cancelOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "cancelOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order Success][OrderId: {}]\",oldOrder.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "StringUtils.Date2String(travelDate),trainNumber",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByTravelDateAndTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "travelDate",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "travelDate",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "trainNumber",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "\"[queryAlreadySoldOrders][Calculate Sold Ticket][Get Orders Number: {}]\",orders.size()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "size",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NONE",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getNoSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setNoSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getNoSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BUSINESS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getBusinessSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setBusinessSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBusinessSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getFirstClassSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setFirstClassSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getFirstClassSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSecondClassSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSecondClassSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSecondClassSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HARDSEAT",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHardSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setHardSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getHardSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SOFTSEAT",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSoftSeat() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSoftSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSoftSeat",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HARDBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHardBed() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setHardBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getHardBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SOFTBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSoftBed() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSoftBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSoftBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HIGHSOFTBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHighSoftBed() + 1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setHighSoftBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getHighSoftBed",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "\"[queryAlreadySoldOrders][Calculate Sold Tickets][Seat class not exists][Order ID: {}]\",order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findAll",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Find all orders warn][{}]\",\"No content\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "warn",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Find all orders Success][size:{}]\",orders.size()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "size",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "modifyOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "modifyOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"[modifyOrder][Modify order Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "modifyOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "modifyOrder",
              "parameterContents": "status",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "modifyOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"[modifyOrder][Modify order Success][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "getOrderPrice",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[getOrderPrice][Get order price Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[getOrderPrice][Get Order Price Success][OrderId:{} , Price: {}]\",orderId,order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "payOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "payOrder",
              "parameterContents": "\"[payOrder][Pay order Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "payOrder",
              "parameterContents": "OrderStatus.PAID.getCode()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "payOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "payOrder",
              "parameterContents": "\"[payOrder][Pay order Success][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "getOrderById",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "getOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderById",
              "parameterContents": "\"[getOrderById][Get Order By ID Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "getOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderById",
              "parameterContents": "\"[getOrderById][Get Order By ID Success][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "accountId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "dateFrom",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "Calendar.HOUR_OF_DAY,-1",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "add",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "order.getBoughtDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "boughtDate",
              "objectType": "Date",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "dateFrom",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "after",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "OrderSecurity",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "countOrderInOneHour",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrderNumInLastOneHour",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "OrderSecurity",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "countTotalValidOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setOrderNumOfValidOrder",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "fromString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderUuid",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[deleteOrder][Delete order Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderUuid",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[deleteOrder][Delete order Success][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[addNewOrder][Admin Add Order][Ready to Add Order]\"",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "addNewOrder",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "accountOrders",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "contains",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[addNewOrder][Admin Add Order Fail][Order already exists][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "addNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[addNewOrder][Admin Add Order Success][OrderId:{} , Price:{}]\",order.getId(),order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Admin Update Order][Order Info:{}]\",order.toString()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "findById",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Admin Update Order Fail][Order not found][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getBoughtDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTravelDate()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTravelTime()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getCoachNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setCoachNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getCoachNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getStatus()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getContactsName()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getContactsName",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getContactsDocumentNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getContactsDocumentNumber",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getDocumentType()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "orderOtherRepository",
              "objectType": "OrderOtherRepository",
              "calledFrom": "updateOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "save",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Admin Update Order Success][OrderId:{}]\",oldOrder.getId()",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "OrderOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "other.service.OrderOtherServiceImpl"
            }
          ],
          "name": "OrderOtherServiceImpl",
          "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "other.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "className": "OrderOtherRepository",
              "name": "deleteById",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "className": "OrderOtherRepository",
              "name": "findAll",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-other-service",
              "annotations": [],
              "className": "OrderOtherRepository",
              "name": "findByAccountId",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "returnType": "Optional<Order>",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.repository.OrderOtherRepository"
                }
              ],
              "className": "OrderOtherRepository",
              "name": "findById",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "other.repository.OrderOtherRepository"
            }
          ],
          "methodCalls": [],
          "name": "OrderOtherRepository",
          "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "other.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "Object",
                  "annotations": [],
                  "name": "obj",
                  "packageAndClassName": "other.entity.Order"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.entity.Order"
                }
              ],
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "parameters": [],
              "returnType": "int",
              "microserviceName": "ts-order-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "other.entity.Order"
                }
              ],
              "className": "Order",
              "name": "hashCode",
              "packageAndClassName": "other.entity.Order"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "type": "int",
              "name": "documentType",
              "packageAndClassName": "other.entity.Order"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "name": "orders_other"
              },
              "name": "Table",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "attributes": {},
              "name": "ToString",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "other.entity.Order"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getClass",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "obj",
              "objectType": "Object",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getClass",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "other.getBoughtDate()",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getBoughtDate",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getBoughtDate",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "other.getTravelDate()",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getBoughtDate",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getTravelDate",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "other.getTravelTime()",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getTravelTime",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getTravelTime",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "accountId",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getAccountId()",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getAccountId",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "contactsName",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getContactsName()",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getContactsName",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "contactsDocumentNumber",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getContactsDocumentNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getContactsDocumentNumber",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getDocumentType",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getTrainNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getTrainNumber",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getCoachNumber",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getSeatClass",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "seatNumber",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getSeatNumber()",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getSeatNumber",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "from",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getFrom()",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getFrom",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "to",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getTo()",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getTo",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "getStatus",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "price",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.price",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "other.entity.Order"
            },
            {
              "objectName": "id",
              "objectType": "String",
              "calledFrom": "hashCode",
              "parameterContents": "",
              "microserviceName": "ts-order-other-service",
              "className": "Order",
              "name": "hashCode",
              "packageAndClassName": "other.entity.Order"
            }
          ],
          "name": "Order",
          "path": "/ts-order-other-service/src/main/java/other/entity/Order.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-order-other-service",
              "artifactId": "ts-order-other-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-order-other-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 12032
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-order-other-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${ORDER_OTHER_MYSQL_HOST:ts-order-other-mysql}:${ORDER_OTHER_MYSQL_PORT:3306}/${ORDER_OTHER_MYSQL_DATABASE:ts-order-other-mysql}?useSSL=false",
                "username": "${ORDER_OTHER_MYSQL_USER:root}",
                "password": "${ORDER_OTHER_MYSQL_PASSWORD:root}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                },
                "show-sql": true
              }
            },
            "swagger": {
              "controllerPackage": "other.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-order-other-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-order-service",
      "path": "/ts-order-service",
      "controllers": [
        {
          "packageName": "order.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/orderservice/order/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "travelDate",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/{travelDate}/{trainNumber}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "calculateSoldTicket",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/admin",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "order",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/admin"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "addcreateNewOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/admin",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "order",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/admin"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "updateOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/refresh",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "OrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "qi",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/refresh"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "queryOrdersForRefresh",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "getOrderById",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/tickets",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Seat",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "seatRequest",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/order/tickets"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "getTicketListByDateAndTripId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/{orderId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "deleteOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "createOrder",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "createNewOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "Order",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "orderInfo",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "saveOrderInfo",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/status/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "int",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "status",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/status/{orderId}/{status}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "modifyOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "home",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/orderPay/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/orderPay/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "payOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/security/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "checkDate",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/security/{checkDate}/{accountId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "securityInfoCheck",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "findAllOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/price/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order/price/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "getOrderPrice",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "url": "/api/v1/orderservice/order/query",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "OrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "qi",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "order.controller.OrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "order.controller.OrderController"
                },
                {
                  "attributes": {
                    "path": "/order/query"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "order.controller.OrderController"
                }
              ],
              "className": "OrderController",
              "name": "queryOrders",
              "packageAndClassName": "order.controller.OrderController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "type": "OrderService",
              "name": "orderService",
              "packageAndClassName": "order.controller.OrderController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/orderservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "order.controller.OrderController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "\"[getSoldTickets][Get Sold Ticket][Travel Date: {}]\",seatRequest.getTravelDate().toString()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Seat",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "toString",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getTravelDate",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "orderService.getSoldTickets(seatRequest, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "getTicketListByDateAndTripId",
              "parameterContents": "seatRequest,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getSoldTickets",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"[createNewOrder][Create Order][from {} to {} at {}]\",createOrder.getFrom(),createOrder.getTo(),createOrder.getTravelDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "createOrder",
              "objectType": "Order",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getFrom",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "createOrder",
              "objectType": "Order",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getTo",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "createOrder",
              "objectType": "Order",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getTravelDate",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createNewOrder",
              "parameterContents": "orderService.create(createOrder, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "createNewOrder",
              "parameterContents": "createOrder,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "create",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addcreateNewOrder",
              "parameterContents": "orderService.addNewOrder(order, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "addcreateNewOrder",
              "parameterContents": "order,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "addNewOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Query Orders][for LoginId :{}]\",qi.getLoginId()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getLoginId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryOrders",
              "parameterContents": "orderService.queryOrders(qi, qi.getLoginId(), headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "queryOrders",
              "parameterContents": "qi,qi.getLoginId(),headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "queryOrders",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getLoginId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "\"[queryOrdersForRefresh][Query Orders][for LoginId:{}]\",qi.getLoginId()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getLoginId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "orderService.queryOrdersForRefresh(qi, qi.getLoginId(), headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "qi,qi.getLoginId(),headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "queryOrdersForRefresh",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getLoginId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "\"[queryAlreadySoldOrders][Calculate Sold Tickets][Date: {} TrainNumber: {}]\",travelDate,trainNumber",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "orderService.queryAlreadySoldOrders(StringUtils.String2Date(travelDate), trainNumber, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "StringUtils.String2Date(travelDate),trainNumber,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "queryAlreadySoldOrders",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "calculateSoldTicket",
              "parameterContents": "travelDate",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "String2Date",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[getOrderPrice][Get Order Price][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderPrice",
              "parameterContents": "orderService.getOrderPrice(orderId, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "getOrderPrice",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrderPrice",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "payOrder",
              "parameterContents": "\"[payOrder][Pay Order][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payOrder",
              "parameterContents": "orderService.payOrder(orderId, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "payOrder",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "payOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderById",
              "parameterContents": "\"[getOrderById][Get Order By Id][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderById",
              "parameterContents": "orderService.getOrderById(orderId, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "getOrderById",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getOrderById",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"[modifyOrder][Modify Order Status][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifyOrder",
              "parameterContents": "orderService.modifyOrder(orderId, status, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "modifyOrder",
              "parameterContents": "orderId,status,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "modifyOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "\"[checkSecurityAboutOrder][Security Info Get][AccountId:{}]\",accountId",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "orderService.checkSecurityAboutOrder(StringUtils.String2Date(checkDate), accountId, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "StringUtils.String2Date(checkDate),accountId,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "checkSecurityAboutOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "securityInfoCheck",
              "parameterContents": "checkDate",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "String2Date",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "\"[saveChanges][Save Order Info][OrderId:{}]\",orderInfo.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderInfo",
              "objectType": "Order",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "orderService.saveChanges(orderInfo, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "saveOrderInfo",
              "parameterContents": "orderInfo,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "saveChanges",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Update Order][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getId",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "orderService.updateOrder(order, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "updateOrder",
              "parameterContents": "order,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "updateOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[deleteOrder][Delete Order][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderService.deleteOrder(orderId, headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "deleteOrder",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAllOrder",
              "parameterContents": "\"[getAllOrders][Find All Order]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "info",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findAllOrder",
              "parameterContents": "orderService.getAllOrders(headers)",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "ok",
              "packageAndClassName": "order.controller.OrderController"
            },
            {
              "objectName": "orderService",
              "objectType": "OrderService",
              "calledFrom": "findAllOrder",
              "parameterContents": "headers",
              "microserviceName": "ts-order-service",
              "className": "OrderController",
              "name": "getAllOrders",
              "packageAndClassName": "order.controller.OrderController"
            }
          ],
          "name": "OrderController",
          "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "order.service",
          "implementedTypes": [
            "OrderService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-order-service",
              "annotations": [],
              "className": "OrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "Seat",
                  "annotations": [],
                  "name": "seatRequest",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "getSoldTickets",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "ids",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "List<String>",
              "microserviceName": "ts-order-service",
              "annotations": [],
              "className": "OrderServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "OrderAlterInfo",
                  "annotations": [],
                  "name": "oai",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "alterOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "OrderInfo",
                  "annotations": [],
                  "name": "qi",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "queryOrdersForRefresh",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainNumber",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "queryAlreadySoldOrders",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "getAllOrders",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "OrderInfo",
                  "annotations": [],
                  "name": "qi",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "Response<ArrayList<Order>>",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "queryOrders",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "create",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "initOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "status",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.service.OrderServiceImpl"
                }
              ],
              "className": "OrderServiceImpl",
              "name": "modifyOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "type": "OrderRepository",
              "name": "orderRepository",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "order.service.OrderServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "getSoldTickets",
              "parameterContents": "seatRequest.getTravelDate(),seatRequest.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByTravelDateAndTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ticketSet",
              "objectType": "Set",
              "calledFrom": "getSoldTickets",
              "parameterContents": "new Ticket(Integer.parseInt(tempOrder.getSeatNumber()), tempOrder.getFrom(), tempOrder.getTo())",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "add",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "Integer",
              "objectType": "Integer",
              "calledFrom": "getSoldTickets",
              "parameterContents": "tempOrder.getSeatNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "parseInt",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "leftTicketInfo",
              "objectType": "LeftTicketInfo",
              "calledFrom": "getSoldTickets",
              "parameterContents": "ticketSet",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSoldTickets",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getSoldTickets",
              "parameterContents": "\"[getSoldTickets][Left ticket info][info is: {}]\",leftTicketInfo.toString()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "leftTicketInfo",
              "objectType": "LeftTicketInfo",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getSoldTickets",
              "parameterContents": "\"[getSoldTickets][Seat][Left ticket info is empty][seat from date: {}, train number: {}]\",seatRequest.getTravelDate(),seatRequest.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getSoldTickets",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "findOrderById",
              "parameterContents": "id",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "findOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findOrderById",
              "parameterContents": "\"[findOrderById][Find Order By Id Fail][No content][id: {}] \",id",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "findOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findOrderById",
              "parameterContents": "\"[findOrderById][Find Order By Id Success][id: {}] \",id",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Create Order][Ready to Create Order]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "create",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "accountOrders",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "contains",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Order Create Fail][Order already exists][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "create",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Order Create Success][Order Price][OrderId:{} , Price: {}]\",order.getId(),order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPreviousOrderId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "alterOrder",
              "parameterContents": "\"[alterOrder][Alter Order Fail][Order do not exist][OrderId: {}]\",oldOrderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "alterOrder",
              "parameterContents": "oldOrder,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "saveChanges",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getNewOrderInfo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "alterOrder",
              "parameterContents": "oai.getNewOrderInfo(),headers",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "create",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oai",
              "objectType": "OrderAlterInfo",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getNewOrderInfo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "alterOrder",
              "parameterContents": "\"[alterOrder][Alter Order Success][newOrderId: {}]\",newOrder.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "alterOrder",
              "parameterContents": "\"[alterOrder][Alter Order Fail][Create new order fail][newOrderId: {}]\",newOrder.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "Order",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "alterOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "queryOrders",
              "parameterContents": "accountId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Step 1][Get Orders Number of Account][size: {}]\",list.size()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "size",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableStateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableBoughtDateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableTravelDateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableStateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getState",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Step 2][Check Status Fits End]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryOrders",
              "parameterContents": "tempOrder.getBoughtDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryOrders",
              "parameterContents": "tempOrder.getTravelDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "tempOrder",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getTravelDateEnd()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDateEnd",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getBoughtDateStart()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDateStart",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryOrders",
              "parameterContents": "qi.getBoughtDateEnd()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDateEnd",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableTravelDateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "travelDate",
              "objectType": "Date",
              "calledFrom": "queryOrders",
              "parameterContents": "travelDateEnd",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "before",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "travelDate",
              "objectType": "Date",
              "calledFrom": "queryOrders",
              "parameterContents": "boughtDateStart",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "after",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Step 2][Check Travel Date End]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEnableBoughtDateQuery",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "boughtDate",
              "objectType": "Date",
              "calledFrom": "queryOrders",
              "parameterContents": "boughtDateEnd",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "before",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "boughtDate",
              "objectType": "Date",
              "calledFrom": "queryOrders",
              "parameterContents": "boughtDateStart",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "after",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Step 2][Check Bought Date End]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "finalList",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "tempOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "add",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Step 2][Check All Requirement End]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Get order num][size:{}]\",finalList.size()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "finalList",
              "objectType": "Order",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "size",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryOrders",
              "parameterContents": "\"[queryOrders][Orders don't fit the requirement][loginId: {}]\",qi.getLoginId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "qi",
              "objectType": "OrderInfo",
              "calledFrom": "queryOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getData",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "qi,accountId,headers",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "queryOrders",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "stationIds",
              "objectType": "ArrayList",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "add",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "stationIds",
              "objectType": "ArrayList",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "add",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "size",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "stationIds.get(i * 2)",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "i",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "stationIds",
              "objectType": "ArrayList",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "i * 2",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "stationIds.get(i * 2 + 1)",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "i",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "stationIds",
              "objectType": "ArrayList",
              "calledFrom": "queryOrdersForRefresh",
              "parameterContents": "i * 2 + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "url": "/api/v1/stationservice/stations/namelist",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "station_service_url + \"/api/v1/stationservice/stations/namelist\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<List<String>>>() {\r\n}",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "exchange",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[queryForStationId][Station Name List][Name List is: {}]\",re.getBody().toString()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBody",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getData",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBody",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[saveChanges][Modify Order Fail][Order not found][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getBoughtDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTravelDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTravelTime()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getCoachNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setCoachNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCoachNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getStatus()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getContactsName()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getContactsName",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getContactsDocumentNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getContactsDocumentNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "order.getDocumentType()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "saveChanges",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "saveChanges",
              "parameterContents": "\"[saveChanges][Modify Order Success][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "saveChanges",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "cancelOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "cancelOrder",
              "parameterContents": "OrderStatus.CANCEL.getCode()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CANCEL",
              "calledFrom": "cancelOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "cancelOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "cancelOrder",
              "parameterContents": "\"[cancelOrder][Cancel Order Success][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "StringUtils.Date2String(travelDate),trainNumber",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByTravelDateAndTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "travelDate",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "travelDate",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "trainNumber",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "\"[queryAlreadySoldOrders][Calculate Sold Ticket][Get Orders Number: {}]\",orders.size()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "size",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NONE",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getNoSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setNoSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getNoSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BUSINESS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getBusinessSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setBusinessSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBusinessSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getFirstClassSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setFirstClassSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getFirstClassSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSecondClassSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSecondClassSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSecondClassSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HARDSEAT",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHardSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setHardSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getHardSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SOFTSEAT",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSoftSeat() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSoftSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSoftSeat",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HARDBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHardBed() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setHardBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getHardBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SOFTBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getSoftBed() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSoftBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSoftBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "HIGHSOFTBED",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "cstr.getHighSoftBed() + 1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setHighSoftBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "cstr",
              "objectType": "SoldTicket",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getHighSoftBed",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "\"[queryAlreadySoldOrders][Calculate Sold Tickets][Seat class not exists][Order ID: {}]\",order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "queryAlreadySoldOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findAll",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Find all orders Success][size:{}]\",orders.size()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orders",
              "objectType": "Order",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "size",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Find all orders Fail][{}]\",\"No content\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "modifyOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "modifyOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"[modifyOrder][Modify order Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "modifyOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "modifyOrder",
              "parameterContents": "status",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "modifyOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifyOrder",
              "parameterContents": "\"[modifyOrder][Modify order Success][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "getOrderPrice",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[getOrderPrice][Get order price Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderPrice",
              "parameterContents": "\"[getOrderPrice][Get Order Price Success][OrderId: {} , Price: {}]\",orderId,order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "getOrderPrice",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "payOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "payOrder",
              "parameterContents": "\"[payOrder][Pay order Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "payOrder",
              "parameterContents": "OrderStatus.PAID.getCode()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "payOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "payOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "payOrder",
              "parameterContents": "\"[payOrder][Pay order Success][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "getOrderById",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "getOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderById",
              "parameterContents": "\"[getOrderById][Get Order By ID Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "getOrderById",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getOrderById",
              "parameterContents": "\"[getOrderById][Get Order By ID Success][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "initOrder",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "initOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "initOrder",
              "parameterContents": "\"[initOrder][Init Order Success][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "initOrder",
              "parameterContents": "\"[initOrder][Init Order Fail][Order Already Exists][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "initOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "accountId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "dateFrom",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "Calendar.HOUR_OF_DAY,-1",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "add",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "ca",
              "objectType": "Calendar",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "order.getBoughtDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "boughtDate",
              "objectType": "Date",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "dateFrom",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "after",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "OrderSecurity",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "countOrderInOneHour",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrderNumInLastOneHour",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "OrderSecurity",
              "calledFrom": "checkSecurityAboutOrder",
              "parameterContents": "countTotalValidOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setOrderNumOfValidOrder",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "fromString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderUuid",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[deleteOrder][Delete order Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "deleteOrder",
              "parameterContents": "orderUuid",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"[deleteOrder][Delete order Success][OrderId: {}]\",orderId",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[addNewOrder][Admin Add Order][Ready to Add Order]\"",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "addNewOrder",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "accountOrders",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "contains",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[addNewOrder][Admin Add Order Fail][Order already exists][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "addNewOrder",
              "parameterContents": "order",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addNewOrder",
              "parameterContents": "\"[addNewOrder][Admin Add Order Success][OrderId: {} , Price: {}]\",order.getId(),order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "addNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Admin Update Order][Order Info:{}] \",order.toString()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Admin Update Order Fail][Order not found][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "error",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "get",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getAccountId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getBoughtDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getBoughtDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTravelDate()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTravelTime()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getCoachNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setCoachNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getCoachNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTo",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getStatus()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getContactsName()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getContactsName",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getContactsDocumentNumber()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getContactsDocumentNumber",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "oldOrder",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getDocumentType()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "orderRepository",
              "objectType": "OrderRepository",
              "calledFrom": "updateOrder",
              "parameterContents": "oldOrder",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "save",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Admin Update Order Success][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "info",
              "packageAndClassName": "order.service.OrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "OrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "order.service.OrderServiceImpl"
            }
          ],
          "name": "OrderServiceImpl",
          "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "order.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "className": "OrderRepository",
              "name": "findAll",
              "packageAndClassName": "order.repository.OrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "returnType": "Optional<Order>",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "className": "OrderRepository",
              "name": "findById",
              "packageAndClassName": "order.repository.OrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "returnType": "ArrayList<Order>",
              "microserviceName": "ts-order-service",
              "annotations": [],
              "className": "OrderRepository",
              "name": "findByAccountId",
              "packageAndClassName": "order.repository.OrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.repository.OrderRepository"
                }
              ],
              "className": "OrderRepository",
              "name": "deleteById",
              "packageAndClassName": "order.repository.OrderRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "order.repository.OrderRepository"
            }
          ],
          "methodCalls": [],
          "name": "OrderRepository",
          "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "order.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "Object",
                  "annotations": [],
                  "name": "obj",
                  "packageAndClassName": "order.entity.Order"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.entity.Order"
                }
              ],
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "parameters": [],
              "returnType": "int",
              "microserviceName": "ts-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "order.entity.Order"
                }
              ],
              "className": "Order",
              "name": "hashCode",
              "packageAndClassName": "order.entity.Order"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "type": "int",
              "name": "documentType",
              "packageAndClassName": "order.entity.Order"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "name": "orders"
              },
              "name": "Table",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "attributes": {},
              "name": "ToString",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "order.entity.Order"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getClass",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "obj",
              "objectType": "Object",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getClass",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "other.getBoughtDate()",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getBoughtDate",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getBoughtDate",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "other.getTravelDate()",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getBoughtDate",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getTravelDate",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "other.getTravelTime()",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getTravelTime",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getTravelTime",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "accountId",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getAccountId()",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getAccountId",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "contactsName",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getContactsName()",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getContactsName",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "contactsDocumentNumber",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getContactsDocumentNumber()",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getContactsDocumentNumber",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getDocumentType",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getTrainNumber()",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getTrainNumber",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getCoachNumber",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getSeatClass",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "seatNumber",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getSeatNumber()",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getSeatNumber",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "from",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getFrom()",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getFrom",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "to",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.getTo()",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getTo",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "other",
              "objectType": "Order",
              "calledFrom": "equals",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "getStatus",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "price",
              "objectType": "String",
              "calledFrom": "equals",
              "parameterContents": "other.price",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "equals",
              "packageAndClassName": "order.entity.Order"
            },
            {
              "objectName": "id",
              "objectType": "String",
              "calledFrom": "hashCode",
              "parameterContents": "",
              "microserviceName": "ts-order-service",
              "className": "Order",
              "name": "hashCode",
              "packageAndClassName": "order.entity.Order"
            }
          ],
          "name": "Order",
          "path": "/ts-order-service/src/main/java/order/entity/Order.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "scope": "compile",
                    "artifactId": "jakarta.validation-api",
                    "version": "2.0.2"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-order-service",
              "artifactId": "ts-order-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-order-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 12031
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:127.0.0.1:8848}"
                  }
                }
              },
              "application": {
                "name": "ts-order-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${ORDER_MYSQL_HOST:10.176.122.1}:${ORDER_MYSQL_PORT:3306}/${ORDER_MYSQL_DATABASE:ts}?useSSL=false",
                "username": "${ORDER_MYSQL_USER:root}",
                "password": "${ORDER_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "swagger": {
              "controllerPackage": "order.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-order-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-payment-service",
      "path": "/ts-payment-service",
      "controllers": [
        {
          "packageName": "com.trainticket.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/paymentservice/payment",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Payment",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "com.trainticket.controller.PaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "com.trainticket.controller.PaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/payment"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "className": "PaymentController",
              "name": "pay",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "url": "/api/v1/paymentservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "className": "PaymentController",
              "name": "home",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "url": "/api/v1/paymentservice/payment",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "com.trainticket.controller.PaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/payment"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "className": "PaymentController",
              "name": "query",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "url": "/api/v1/paymentservice/payment/money",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Payment",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "com.trainticket.controller.PaymentController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "com.trainticket.controller.PaymentController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/payment/money"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "com.trainticket.controller.PaymentController"
                }
              ],
              "className": "PaymentController",
              "name": "addMoney",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "type": "PaymentService",
              "name": "service",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/paymentservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "pay",
              "parameterContents": "\"[pay][Pay][PaymentId: {}]\",info.getId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "info",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "getId",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "pay",
              "parameterContents": "service.pay(info, headers)",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "ok",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "service",
              "objectType": "PaymentService",
              "calledFrom": "pay",
              "parameterContents": "info,headers",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "pay",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addMoney",
              "parameterContents": "\"[addMoney][Add money][PaymentId: {}]\",info.getId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "info",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "addMoney",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "getId",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addMoney",
              "parameterContents": "service.addMoney(info, headers)",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "ok",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "service",
              "objectType": "PaymentService",
              "calledFrom": "addMoney",
              "parameterContents": "info,headers",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "addMoney",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[query][Query payment]\"",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "info",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "service.query(headers)",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "ok",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            },
            {
              "objectName": "service",
              "objectType": "PaymentService",
              "calledFrom": "query",
              "parameterContents": "headers",
              "microserviceName": "ts-payment-service",
              "className": "PaymentController",
              "name": "query",
              "packageAndClassName": "com.trainticket.controller.PaymentController"
            }
          ],
          "name": "PaymentController",
          "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "com.trainticket.service",
          "implementedTypes": [
            "PaymentService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "Payment",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "className": "PaymentServiceImpl",
              "name": "pay",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "className": "PaymentServiceImpl",
              "name": "query",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "Payment",
                  "annotations": [],
                  "name": "payment",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-payment-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
                }
              ],
              "className": "PaymentServiceImpl",
              "name": "initPayment",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "PaymentRepository",
              "name": "paymentRepository",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "type": "AddMoneyRepository",
              "name": "addMoneyRepository",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "pay",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "findByOrderId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "info.getOrderId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "info.getPrice()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "pay",
              "parameterContents": "payment",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "pay",
              "parameterContents": "\"[pay][Pay Failed][Order not found with order id][PaymentId: {}, OrderId: {}]\",info.getId(),info.getOrderId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "warn",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "pay",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "addMoney",
              "parameterContents": "info.getUserId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "addMoney",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "addMoney",
              "objectType": "Money",
              "calledFrom": "addMoney",
              "parameterContents": "info.getPrice()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "setMoney",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Payment",
              "calledFrom": "addMoney",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "addMoneyRepository",
              "objectType": "AddMoneyRepository",
              "calledFrom": "addMoney",
              "parameterContents": "addMoney",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "findAll",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[query][Find all payment Success][size:{}]\",payments.size()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "info",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payments",
              "objectType": "Payment",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "size",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[query][Find all payment warn][{}]\",\"No content\"",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "warn",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "initPayment",
              "parameterContents": "payment.getId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "findById",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "paymentTemp",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "paymentRepository",
              "objectType": "PaymentRepository",
              "calledFrom": "initPayment",
              "parameterContents": "payment",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "save",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "initPayment",
              "parameterContents": "\"[initPayment][Init payment error][Payment not found][PaymentId: {}]\",payment.getId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "error",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "initPayment",
              "parameterContents": "\"[initPayment][Init Payment Already Exists][PaymentId: {}]\",payment.getId()",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "info",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            },
            {
              "objectName": "payment",
              "objectType": "Payment",
              "calledFrom": "initPayment",
              "parameterContents": "",
              "microserviceName": "ts-payment-service",
              "className": "PaymentServiceImpl",
              "name": "getId",
              "packageAndClassName": "com.trainticket.service.PaymentServiceImpl"
            }
          ],
          "name": "PaymentServiceImpl",
          "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [
        {
          "packageName": "com.trainticket.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "com.trainticket.entity.Money"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "AllArgsConstructor",
              "packageAndClassName": "com.trainticket.entity.Money"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "com.trainticket.entity.Money"
            }
          ],
          "methodCalls": [],
          "name": "Money",
          "path": "/ts-payment-service/src/main/java/com/trainticket/entity/Money.java",
          "fileType": "JCLASS"
        },
        {
          "packageName": "com.trainticket.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "com.trainticket.entity.Payment"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "com.trainticket.entity.Payment"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "com.trainticket.entity.Payment"
            }
          ],
          "methodCalls": [],
          "name": "Payment",
          "path": "/ts-payment-service/src/main/java/com/trainticket/entity/Payment.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "scope": "runtime",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.hibernate",
                    "artifactId": "hibernate-core"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-payment-service",
              "artifactId": "ts-payment-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-payment-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 19001
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-payment-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${PAYMENT_MYSQL_HOST:ts-payment-mysql}:${PAYMENT_MYSQL_PORT:3306}/${PAYMENT_MYSQL_DATABASE:ts-payment-mysql}?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC",
                "username": "${PAYMENT_MYSQL_USER:root}",
                "password": "${PAYMENT_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "swagger": {
              "controllerPackage": "com.trainticket.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-payment-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-preserve-other-service",
      "path": "/ts-preserve-other-service",
      "controllers": [
        {
          "packageName": "preserveOther.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/preserveotherservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                }
              ],
              "className": "PreserveOtherController",
              "name": "home",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "url": "/api/v1/preserveotherservice/preserveOther",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "OrderTicketsInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                    }
                  ],
                  "name": "oti",
                  "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                },
                {
                  "attributes": {
                    "value": "/preserveOther"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "preserveOther.controller.PreserveOtherController"
                }
              ],
              "className": "PreserveOtherController",
              "name": "preserve",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            }
          ],
          "fields": [
            {
              "type": "PreserveOtherService",
              "name": "preserveService",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/preserveotherservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Preserve Account order][from {} to {} at {}]\",oti.getFrom(),oti.getTo(),oti.getDate()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "info",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "getTo",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "getDate",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "preserveService.preserve(oti, headers)",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "ok",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            },
            {
              "objectName": "preserveService",
              "objectType": "PreserveOtherService",
              "calledFrom": "preserve",
              "parameterContents": "oti,headers",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherController",
              "name": "preserve",
              "packageAndClassName": "preserveOther.controller.PreserveOtherController"
            }
          ],
          "name": "PreserveOtherController",
          "path": "/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "preserveOther.service",
          "implementedTypes": [
            "PreserveOtherService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "assuranceType",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "Response<Assurance>",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "addAssuranceForOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "FoodOrder",
                  "annotations": [],
                  "name": "afi",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "createFoodOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stationList",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "Ticket",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "TripAllDetailInfo",
                  "annotations": [],
                  "name": "gtdi",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "Response<TripAllDetail>",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "OrderTicketsInfo",
                  "annotations": [],
                  "name": "oti",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "className": "PreserveOtherServiceImpl",
              "name": "preserve",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "Consign",
                  "annotations": [],
                  "name": "cr",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "createConsign",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "checkSecurity",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "NotifyInfo",
                  "annotations": [],
                  "name": "notifyInfo",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "User",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "coi",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "Response<Order>",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "contactsId",
                  "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
                }
              ],
              "returnType": "Response<Contacts>",
              "microserviceName": "ts-preserve-other-service",
              "annotations": [],
              "className": "PreserveOtherServiceImpl",
              "name": "getContactsById",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "type": "RabbitSend",
              "name": "sendService",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Verify Login] Success\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getAccountId(),httpHeaders",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "checkSecurity",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 1][Check Security Fail][AccountId: {}]\",oti.getAccountId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 1][Check Security Complete][AccountId: {}]\",oti.getAccountId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getContactsId(),httpHeaders",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getContactsById",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 2][Find Contacts Fail][ContactsId: {},message: {}]\",oti.getContactsId(),gcr.getMsg()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 2][Find contacts Complete][ContactsId: {}]\",oti.getContactsId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFrom()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTripId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 3][Check tickets num][TripId: {}]\",oti.getTripId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "gtdi,httpHeaders",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 3][Check tickets num][Search For Trip Detail Information error][TripId: {}, message: {}]\",gtdi.getTripId(),response.getMsg()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 3][Check seat][Check seat is enough][TripId: {}]\",oti.getTripId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "warn",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 3][Check seat][Check seat is Not enough][TripId: {}]\",oti.getTripId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "warn",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 3][Check tickets num][Tickets Enough]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "orderId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTripId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getAccountId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "fromStationName",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "toStationName",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "StringUtils.Date2String(new Date())",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "preserve",
              "parameterContents": "new Date()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "OrderStatus.NOTPAID.getCode()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getDocumentNumber()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDocumentNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getDocumentType()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "preserve",
              "parameterContents": "trip",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFrom()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "preserve",
              "parameterContents": "StringUtils.Date2String(new Date())",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "preserve",
              "parameterContents": "new Date()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "\"ts-basic-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/basicservice/basic/travel",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "preserve",
              "parameterContents": "basic_service_url + \"/api/v1/basicservice/basic/travel\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<TravelResult>>() {\r\n}",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve 3][Get basic travel response status is 0][response is: {}]\",re.getBody()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getSeatType()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 4][Do Order][Travel Date][Date is: {}]\",oti.getDate().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "gtdr.getTripResponse().getStartTime()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripAllDetail",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStations",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate(),order.getTrainNumber(),fromStationName,toStationName,SeatClass.FIRSTCLASS.getCode(),firstClassTotalNum,stationList,httpHeaders",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "resultForTravel.getPrices().get(\"confortClass\")",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "\"confortClass\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate(),order.getTrainNumber(),fromStationName,toStationName,SeatClass.SECONDCLASS.getCode(),secondClassTotalNum,stationList,httpHeaders",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "resultForTravel.getPrices().get(\"economyClass\")",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "\"economyClass\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "get",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 4][Do Order][Order Price][Price is: {}]\",order.getPrice()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "order,httpHeaders",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 4][Do Order][Create Order Fail][OrderId: {},  Reason: {}]\",order.getId(),cor.getMsg()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 4][Do Order][Do Order Complete]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAssurance",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 5][Buy Assurance][Do not need to buy assurance]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getAssurance(),cor.getData().getId().toString(),httpHeaders",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "addAssuranceForOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAssurance",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "addAssuranceResult",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 5][Buy Assurance][Preserve Buy Assurance Success]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 5][Buy Assurance][Buy Assurance Fail][assurance: {}, OrderId: {}]\",oti.getAssurance(),cor.getData().getId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "warn",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAssurance",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "returnResponse",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "\"Success.But Buy Assurance Fail.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodType()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setFoodType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodPrice()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFoodPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "oti.getStationName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "oti.getStoreName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "foodOrder,httpHeaders",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "createFoodOrder",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "afor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 6][Buy Food][Buy Food Success]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 6][Buy Food][Buy Food Fail][OrderId: {}]\",cor.getData().getId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "returnResponse",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "\"Success.But Buy Food Fail.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 6][Buy Food][Do not need to buy food]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "equals",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getAccountId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "oti.getHandleDate()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setHandleDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getHandleDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getTravelDate().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTargetDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getFrom()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getTo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setConsignee",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneePhone()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setPhone",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConsigneePhone",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeWeight()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setWeight",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getConsigneeWeight",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "oti.isWithin()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setWithin",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "isWithin",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "consignRequest,httpHeaders",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "createConsign",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "icresult",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 7][Add Consign][Consign Success]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 7][Add Consign][Preserve Consign Fail][OrderId: {}]\",cor.getData().getId()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "returnResponse",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "\"Consign Fail.\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 7][Add Consign][Do not need to consign]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "order.getAccountId().toString(),httpHeaders",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "new Date().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "getUser.getEmail()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setEmail",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "getUser",
              "objectType": "User",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "getUser.getUserName()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setUsername",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "getUser",
              "objectType": "User",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getId().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setOrderNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.getNameByCode(order.getSeatClass())",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "SeatClass",
              "objectType": "Solving SeatClass",
              "calledFrom": "preserve",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getNameByCode",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getTravelTime().toString()",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "date",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "tripId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "startStationId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "seatType",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "endStataionId",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "totalNum",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setTotalNum",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "stationList",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "setStations",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "dipatchSeat",
              "parameterContents": "\"ts-seat-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/seatservice/seats",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "dipatchSeat",
              "parameterContents": "seat_service_url + \"/api/v1/seatservice/seats\",HttpMethod.POST,requestEntityTicket,new ParameterizedTypeReference<Response<Ticket>>() {\r\n}",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "dipatchSeat",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "reTicket",
              "objectType": "ResponseEntity",
              "calledFrom": "dipatchSeat",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "sendEmail",
              "parameterContents": "notifyInfo",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "object2Json",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "sendService",
              "objectType": "RabbitSend",
              "calledFrom": "sendEmail",
              "parameterContents": "infoJson",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "send",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "sendEmail",
              "parameterContents": "\"[sendEmail][Send email to mq success]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "sendEmail",
              "parameterContents": "\"[sendEmail][Send email to mq error] exception is:\" + e",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "error",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAccount",
              "parameterContents": "\"[getAccount][Cancel Order Service][Get Order By Id]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAccount",
              "parameterContents": "\"ts-user-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/userservice/users/id/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAccount",
              "parameterContents": "user_service_url + \"/api/v1/userservice/users/id/\" + accountId,HttpMethod.GET,requestEntitySendEmail,new ParameterizedTypeReference<Response<User>>() {\r\n}",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "getAccount",
              "objectType": "ResponseEntity",
              "calledFrom": "getAccount",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAccount",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "\"[addAssuranceForOrder][Preserve Service][Add Assurance Type For Order]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "\"ts-assurance-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/assuranceservice/assurances/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "assurance_service_url + \"/api/v1/assuranceservice/assurances/\" + assuranceType + \"/\" + orderId,HttpMethod.GET,requestAddAssuranceResult,new ParameterizedTypeReference<Response<Assurance>>() {\r\n}",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "reAddAssuranceResult",
              "objectType": "ResponseEntity",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[queryForStationId][Preserve Other Service][Get Station By  Name]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/stationservice/stations/id/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "station_service_url + \"/api/v1/stationservice/stations/id/\" + stationName,HttpMethod.GET,requestQueryForStationId,new ParameterizedTypeReference<Response<String>>() {\r\n}",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "reQueryForStationId",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "checkSecurity",
              "parameterContents": "\"[checkSecurity][Preserve Other Service][Check Account Security]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "checkSecurity",
              "parameterContents": "\"ts-security-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/securityservice/securityConfigs/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "checkSecurity",
              "parameterContents": "security_service_url + \"/api/v1/securityservice/securityConfigs/\" + accountId,HttpMethod.GET,requestCheckResult,Response.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "reCheckResult",
              "objectType": "ResponseEntity",
              "calledFrom": "checkSecurity",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"[getTripAllDetailInformation][Preserve Other Service][Get Trip All Detail Information]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"ts-travel2-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/travel2service/trip_detail",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "travel2_service_url + \"/api/v1/travel2service/trip_detail\",HttpMethod.POST,requestGetTripAllDetailResult,new ParameterizedTypeReference<Response<TripAllDetail>>() {\r\n}",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "reGetTripAllDetailResult",
              "objectType": "ResponseEntity",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getContactsById",
              "parameterContents": "\"[getContactsById][Preserve Other Service][Get Contacts By Id is]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getContactsById",
              "parameterContents": "\"ts-contacts-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/contactservice/contacts/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getContactsById",
              "parameterContents": "contacts_service_url + \"/api/v1/contactservice/contacts/\" + contactsId,HttpMethod.GET,requestGetContactsResult,new ParameterizedTypeReference<Response<Contacts>>() {\r\n}",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "reGetContactsResult",
              "objectType": "ResponseEntity",
              "calledFrom": "getContactsById",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createOrder",
              "parameterContents": "\"[createOrder][Preserve Other Service][Get Contacts By Id]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createOrder",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createOrder",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther\",HttpMethod.POST,requestEntityCreateOrderResult,new ParameterizedTypeReference<Response<Order>>() {\r\n}",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "reCreateOrderResult",
              "objectType": "ResponseEntity",
              "calledFrom": "createOrder",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[createFoodOrder][Preserve Service][Add Preserve food Order]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"ts-food-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/foodservice/orders",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createFoodOrder",
              "parameterContents": "food_service_url + \"/api/v1/foodservice/orders\",HttpMethod.POST,requestEntityAddFoodOrderResult,Response.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "reAddFoodOrderResult",
              "objectType": "ResponseEntity",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createConsign",
              "parameterContents": "\"[createConsign][Preserve Service][Add Condign]\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "info",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createConsign",
              "parameterContents": "\"ts-consign-service\"",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "url": "/api/v1/consignservice/consigns",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createConsign",
              "parameterContents": "consign_service_url + \"/api/v1/consignservice/consigns\",HttpMethod.POST,requestEntityResultForTravel,Response.class",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            },
            {
              "objectName": "reResultForTravel",
              "objectType": "ResponseEntity",
              "calledFrom": "createConsign",
              "parameterContents": "",
              "microserviceName": "ts-preserve-other-service",
              "className": "PreserveOtherServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserveOther.service.PreserveOtherServiceImpl"
            }
          ],
          "name": "PreserveOtherServiceImpl",
          "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-amqp"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-preserve-other-service",
              "artifactId": "ts-preserve-other-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-preserve-other-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 14569
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-preserve-other-service"
              },
              "rabbitmq": {
                "host": "${rabbitmq_host:localhost}",
                "port": 5672
              }
            },
            "swagger": {
              "controllerPackage": "preserveOther.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-preserve-other-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-preserve-service",
      "path": "/ts-preserve-service",
      "controllers": [
        {
          "packageName": "preserve.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/preserveservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-preserve-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "preserve.controller.PreserveController"
                }
              ],
              "className": "PreserveController",
              "name": "home",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "url": "/api/v1/preserveservice/preserve",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "OrderTicketsInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "preserve.controller.PreserveController"
                    }
                  ],
                  "name": "oti",
                  "packageAndClassName": "preserve.controller.PreserveController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "preserve.controller.PreserveController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "preserve.controller.PreserveController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-preserve-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/preserve"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "preserve.controller.PreserveController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "preserve.controller.PreserveController"
                }
              ],
              "className": "PreserveController",
              "name": "preserve",
              "packageAndClassName": "preserve.controller.PreserveController"
            }
          ],
          "fields": [
            {
              "type": "PreserveService",
              "name": "preserveService",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "preserve.controller.PreserveController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/preserveservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "preserve.controller.PreserveController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Preserve Account order][from {} to {} at {}]\",oti.getFrom(),oti.getTo(),oti.getDate()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "info",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "getFrom",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "getTo",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "getDate",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "preserveService.preserve(oti, headers)",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "ok",
              "packageAndClassName": "preserve.controller.PreserveController"
            },
            {
              "objectName": "preserveService",
              "objectType": "PreserveService",
              "calledFrom": "preserve",
              "parameterContents": "oti,headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveController",
              "name": "preserve",
              "packageAndClassName": "preserve.controller.PreserveController"
            }
          ],
          "name": "PreserveController",
          "path": "/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "preserve.service",
          "implementedTypes": [
            "PreserveService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "TripAllDetailInfo",
                  "annotations": [],
                  "name": "gtdi",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "Response<TripAllDetail>",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "queryForStationId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "NotifyInfo",
                  "annotations": [],
                  "name": "notifyInfo",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "sendEmail",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stationList",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "Ticket",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "checkSecurity",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "Consign",
                  "annotations": [],
                  "name": "cr",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "createConsign",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "contactsId",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "Response<Contacts>",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "getContactsById",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "User",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "assuranceType",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "addAssuranceForOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "OrderTicketsInfo",
                  "annotations": [],
                  "name": "oti",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-preserve-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "className": "PreserveServiceImpl",
              "name": "preserve",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "coi",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                },
                {
                  "type": "FoodOrder",
                  "annotations": [],
                  "name": "afi",
                  "packageAndClassName": "preserve.service.PreserveServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-preserve-service",
              "annotations": [],
              "className": "PreserveServiceImpl",
              "name": "createFoodOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "type": "RabbitSend",
              "name": "sendService",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getAccountId(),headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "checkSecurity",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 1][Check Security Fail][AccountId: {}]\",oti.getAccountId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "error",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 1][Check Security Complete][AccountId: {}]\",oti.getAccountId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getContactsId(),headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getContactsById",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 2][Find Contacts Fail][ContactsId: {},message: {}]\",oti.getContactsId(),gcr.getMsg()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "error",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 2][Find contacts Complete][ContactsId: {}]\",oti.getContactsId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFrom()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTripId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 3][Check tickets num][TripId: {}]\",oti.getTripId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "gtdi,headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 3][Check tickets num][Search For Trip Detail Information error][TripId: {}, message: {}]\",gtdi.getTripId(),response.getMsg()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "error",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 3][Check seat][Check seat is enough][TripId: {}]\",oti.getTripId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "warn",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 3][Check seat][Check seat is Not enough][TripId: {}]\",oti.getTripId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "warn",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 3][Check tickets num][Tickets Enough]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gcr",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "orderId.toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "orderId",
              "objectType": "UUID",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTripId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getAccountId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "fromStationName",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "toStationName",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "StringUtils.Date2String(new Date())",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "preserve",
              "parameterContents": "new Date()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "OrderStatus.NOTPAID.getCode()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getDocumentNumber()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setContactsDocumentNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDocumentNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setContactsName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "contacts.getDocumentType()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setDocumentType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "contacts",
              "objectType": "Contacts",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "preserve",
              "parameterContents": "trip",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFrom()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "preserve",
              "parameterContents": "oti.getTo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "preserve",
              "parameterContents": "StringUtils.Date2String(new Date())",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "preserve",
              "parameterContents": "new Date()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "\"ts-basic-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/basicservice/basic/travel",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "preserve",
              "parameterContents": "basic_service_url + \"/api/v1/basicservice/basic/travel\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<TravelResult>>() {\r\n}",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[Preserve 3][Get basic travel response status is 0][response is: {}]\",re.getBody()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getSeatType()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 4][Do Order][Travel Date][Date is: {}]\",oti.getDate().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "gtdr.getTripResponse().getStartTime()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripAllDetail",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStations",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate(),order.getTrainNumber(),fromStationName,toStationName,SeatClass.FIRSTCLASS.getCode(),firstClassTotalNum,stationList,headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "resultForTravel.getPrices().get(\"confortClass\")",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "\"confortClass\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "get",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getDate(),order.getTrainNumber(),fromStationName,toStationName,SeatClass.SECONDCLASS.getCode(),secondClassTotalNum,stationList,headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "resultForTravel.getPrices().get(\"economyClass\")",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "\"economyClass\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "get",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "resultForTravel",
              "objectType": "TravelResult",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 4][Do Order][Order Price][Price is: {}]\",order.getPrice()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "order,headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 4][Do Order][Create Order Fail][OrderId: {},  Reason: {}]\",order.getId(),cor.getMsg()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "error",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 4][Do Order][Do Order Complete]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAssurance",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 5][Buy Assurance][Do not need to buy assurance]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "oti.getAssurance(),cor.getData().getId().toString(),headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "addAssuranceForOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAssurance",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "addAssuranceResult",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 5][Buy Assurance][Preserve Buy Assurance Success]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 5][Buy Assurance][Buy Assurance Fail][assurance: {}, OrderId: {}]\",oti.getAssurance(),cor.getData().getId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "warn",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAssurance",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "returnResponse",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "\"Success.But Buy Assurance Fail.\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodType()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setFoodType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setFoodName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "oti.getFoodPrice()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFoodType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "oti.getStationName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStationName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStationName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "foodOrder",
              "objectType": "FoodOrder",
              "calledFrom": "preserve",
              "parameterContents": "oti.getStoreName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStoreName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "foodOrder,headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "createFoodOrder",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "afor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 6][Buy Food][Buy Food Success]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 6][Buy Food][Buy Food Fail][OrderId: {}]\",cor.getData().getId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "error",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "returnResponse",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "\"Success.But Buy Food Fail.\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 6][Buy Food][Do not need to buy food]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "equals",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getAccountId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "oti.getHandleDate()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setHandleDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getHandleDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getTravelDate().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTargetDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getFrom()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "cor.getData().getTo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setConsignee",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConsigneeName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneePhone()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setPhone",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConsigneePhone",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "oti.getConsigneeWeight()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setWeight",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getConsigneeWeight",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "oti.isWithin()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setWithin",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "oti",
              "objectType": "OrderTicketsInfo",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "isWithin",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"CONSIGN INFO : \" + consignRequest.toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "consignRequest",
              "objectType": "Consign",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "consignRequest,headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "createConsign",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "icresult",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 7][Add Consign][Consign Success]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 7][Add Consign][Preserve Consign Fail][OrderId: {}]\",cor.getData().getId()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "error",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "cor",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "returnResponse",
              "objectType": "Response",
              "calledFrom": "preserve",
              "parameterContents": "\"Consign Fail.\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setMsg",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "preserve",
              "parameterContents": "\"[preserve][Step 7][Add Consign][Do not need to consign]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "preserve",
              "parameterContents": "order.getAccountId().toString(),headers",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccount",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "new Date().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Date",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "getUser.getEmail()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setEmail",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "getUser",
              "objectType": "User",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTo",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "getUser.getUserName()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setUsername",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "getUser",
              "objectType": "User",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getSeatNumber()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getId().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setOrderNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getId",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getPrice()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "SeatClass.getNameByCode(order.getSeatClass())",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "SeatClass",
              "objectType": "Solving SeatClass",
              "calledFrom": "preserve",
              "parameterContents": "order.getSeatClass()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getNameByCode",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getSeatClass",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "notifyInfo",
              "objectType": "NotifyInfo",
              "calledFrom": "preserve",
              "parameterContents": "order.getTravelTime().toString()",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "toString",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "preserve",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "date",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "tripId",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "startStation",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "endStataion",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "seatType",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "totalNum",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setTotalNum",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "stationList",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "setStations",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "dipatchSeat",
              "parameterContents": "\"ts-seat-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/seatservice/seats",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "dipatchSeat",
              "parameterContents": "seat_service_url + \"/api/v1/seatservice/seats\",HttpMethod.POST,requestEntityTicket,new ParameterizedTypeReference<Response<Ticket>>() {\r\n}",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "dipatchSeat",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "reTicket",
              "objectType": "ResponseEntity",
              "calledFrom": "dipatchSeat",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "sendEmail",
              "parameterContents": "notifyInfo",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "object2Json",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "sendService",
              "objectType": "RabbitSend",
              "calledFrom": "sendEmail",
              "parameterContents": "infoJson",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "send",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "sendEmail",
              "parameterContents": "\"[sendEmail][Send email to mq success]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "sendEmail",
              "parameterContents": "\"[sendEmail][Send email to mq error] exception is:\" + e",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "error",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAccount",
              "parameterContents": "\"[getAccount][Cancel Order Service][Get Order By Id]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAccount",
              "parameterContents": "\"ts-user-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/userservice/users/id/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getAccount",
              "parameterContents": "user_service_url + \"/api/v1/userservice/users/id/\" + accountId,HttpMethod.GET,requestEntitySendEmail,new ParameterizedTypeReference<Response<User>>() {\r\n}",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "getAccount",
              "objectType": "ResponseEntity",
              "calledFrom": "getAccount",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getAccount",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "\"[addAssuranceForOrder][Preserve Service][Add Assurance Type For Order]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "\"ts-assurance-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/assuranceservice/assurances/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "assurance_service_url + \"/api/v1/assuranceservice/assurances/\" + assuranceType + \"/\" + orderId,HttpMethod.GET,requestAddAssuranceResult,Response.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "reAddAssuranceResult",
              "objectType": "ResponseEntity",
              "calledFrom": "addAssuranceForOrder",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[queryForStationId][Preserve Other Service][Get Station By  Name]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"ts-station-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/stationservice/stations/id/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryForStationId",
              "parameterContents": "station_service_url + \"/api/v1/stationservice/stations/id/\" + stationName,HttpMethod.GET,requestQueryForStationId,new ParameterizedTypeReference<Response<String>>() {\r\n}",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getData",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "reQueryForStationId",
              "objectType": "ResponseEntity",
              "calledFrom": "queryForStationId",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "checkSecurity",
              "parameterContents": "\"[checkSecurity][Preserve Other Service][Check Account Security]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "checkSecurity",
              "parameterContents": "\"ts-security-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/securityservice/securityConfigs/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "checkSecurity",
              "parameterContents": "security_service_url + \"/api/v1/securityservice/securityConfigs/\" + accountId,HttpMethod.GET,requestCheckResult,Response.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "reCheckResult",
              "objectType": "ResponseEntity",
              "calledFrom": "checkSecurity",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"[getTripAllDetailInformation][Preserve Other Service][Get Trip All Detail Information]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/travelservice/trip_detail",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "travel_service_url + \"/api/v1/travelservice/trip_detail\",HttpMethod.POST,requestGetTripAllDetailResult,new ParameterizedTypeReference<Response<TripAllDetail>>() {\r\n}",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "reGetTripAllDetailResult",
              "objectType": "ResponseEntity",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getContactsById",
              "parameterContents": "\"[getContactsById][Preserve Other Service][Get Contacts By Id is]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getContactsById",
              "parameterContents": "\"ts-contacts-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/contactservice/contacts/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getContactsById",
              "parameterContents": "contacts_service_url + \"/api/v1/contactservice/contacts/\" + contactsId,HttpMethod.GET,requestGetContactsResult,new ParameterizedTypeReference<Response<Contacts>>() {\r\n}",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "reGetContactsResult",
              "objectType": "ResponseEntity",
              "calledFrom": "getContactsById",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createOrder",
              "parameterContents": "\"[createOrder][Preserve Service][create order]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createOrder",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order\",HttpMethod.POST,requestEntityCreateOrderResult,new ParameterizedTypeReference<Response<Order>>() {\r\n}",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "reCreateOrderResult",
              "objectType": "ResponseEntity",
              "calledFrom": "createOrder",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"[createFoodOrder][Preserve Service][Add Preserve food Order]\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createFoodOrder",
              "parameterContents": "\"ts-food-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/foodservice/orders",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createFoodOrder",
              "parameterContents": "food_service_url + \"/api/v1/foodservice/orders\",HttpMethod.POST,requestEntityAddFoodOrderResult,Response.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "reAddFoodOrderResult",
              "objectType": "ResponseEntity",
              "calledFrom": "createFoodOrder",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createConsign",
              "parameterContents": "\"[createConsign][Preserve Service][Add Condign\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "info",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createConsign",
              "parameterContents": "\"ts-consign-service\"",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "url": "/api/v1/consignservice/consigns",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createConsign",
              "parameterContents": "consign_service_url + \"/api/v1/consignservice/consigns\",HttpMethod.POST,requestEntityResultForTravel,Response.class",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "exchange",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            },
            {
              "objectName": "reResultForTravel",
              "objectType": "ResponseEntity",
              "calledFrom": "createConsign",
              "parameterContents": "",
              "microserviceName": "ts-preserve-service",
              "className": "PreserveServiceImpl",
              "name": "getBody",
              "packageAndClassName": "preserve.service.PreserveServiceImpl"
            }
          ],
          "name": "PreserveServiceImpl",
          "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-amqp"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-preserve-service",
              "artifactId": "ts-preserve-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-preserve-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 14568
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-preserve-service"
              },
              "rabbitmq": {
                "host": "${rabbitmq_host:localhost}",
                "port": 5672
              }
            },
            "swagger": {
              "controllerPackage": "preserve.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-preserve-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-price-service",
      "path": "/ts-price-service",
      "controllers": [
        {
          "packageName": "price.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/priceservice/prices",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "PriceConfig",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "price.controller.PriceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/prices"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "update",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "url": "/api/v1/priceservice/prices/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/prices/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "home",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "url": "/api/v1/priceservice/prices/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "pricesId",
                  "packageAndClassName": "price.controller.PriceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/prices/{pricesId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "delete",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "url": "/api/v1/priceservice/prices",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/prices"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "queryAll",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "url": "/api/v1/priceservice/prices/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "routeId",
                  "packageAndClassName": "price.controller.PriceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/prices/{routeId}/{trainType}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "query",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "url": "/api/v1/priceservice/prices",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "PriceConfig",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "price.controller.PriceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "returnType": "HttpEntity<?>",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/prices"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "create",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "url": "/api/v1/priceservice/prices/byRouteIdsAndTrainTypes",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "ridsAndTts",
                  "packageAndClassName": "price.controller.PriceController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "price.controller.PriceController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/prices/byRouteIdsAndTrainTypes"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "price.controller.PriceController"
                }
              ],
              "className": "PriceController",
              "name": "query",
              "packageAndClassName": "price.controller.PriceController"
            }
          ],
          "fields": [
            {
              "type": "PriceService",
              "name": "service",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "price.controller.PriceController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/priceservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "price.controller.PriceController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[findByRouteIdAndTrainType][Query price][RouteId: {}, TrainType: {}]\",routeId,trainType",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "info",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "service.findByRouteIdAndTrainType(routeId, trainType, headers)",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "ok",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "query",
              "parameterContents": "routeId,trainType,headers",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "findByRouteIdAndTrainType",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[findByRouteIdAndTrainType][Query price][routeId and Train Type: {}]\",ridsAndTts",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "info",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "service.findByRouteIdsAndTrainTypes(ridsAndTts, headers)",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "ok",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "query",
              "parameterContents": "ridsAndTts,headers",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "findByRouteIdsAndTrainTypes",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAll",
              "parameterContents": "\"[findAllPriceConfig][Query all prices]\"",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "info",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryAll",
              "parameterContents": "service.findAllPriceConfig(headers)",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "ok",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "queryAll",
              "parameterContents": "headers",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "findAllPriceConfig",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[createNewPriceConfig][Create price][RouteId: {}, TrainType: {}]\",info.getRouteId(),info.getTrainType()",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "info",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "info",
              "objectType": "PriceConfig",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "getRouteId",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "info",
              "objectType": "PriceConfig",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "getTrainType",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "create",
              "parameterContents": "info,headers",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "createNewPriceConfig",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[deletePriceConfig][Delete price][PriceConfigId: {}]\",pricesId",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "info",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "delete",
              "parameterContents": "service.deletePriceConfig(pricesId, headers)",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "ok",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "delete",
              "parameterContents": "pricesId,headers",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "deletePriceConfig",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "update",
              "parameterContents": "\"[updatePriceConfig][Update price][PriceConfigId: {}]\",info.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "info",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "info",
              "objectType": "PriceConfig",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "getId",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "update",
              "parameterContents": "service.updatePriceConfig(info, headers)",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "ok",
              "packageAndClassName": "price.controller.PriceController"
            },
            {
              "objectName": "service",
              "objectType": "PriceService",
              "calledFrom": "update",
              "parameterContents": "info,headers",
              "microserviceName": "ts-price-service",
              "className": "PriceController",
              "name": "updatePriceConfig",
              "packageAndClassName": "price.controller.PriceController"
            }
          ],
          "name": "PriceController",
          "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "price.service",
          "implementedTypes": [
            "PriceService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "className": "PriceServiceImpl",
              "name": "findAllPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "ridsAndTts",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "className": "PriceServiceImpl",
              "name": "findByRouteIdsAndTrainTypes",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "className": "PriceServiceImpl",
              "name": "findByRouteIdAndTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                },
                {
                  "type": "PriceConfig",
                  "annotations": [],
                  "name": "createAndModifyPriceConfig",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "className": "PriceServiceImpl",
              "name": "createNewPriceConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "returnType": "PriceConfig",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.service.PriceServiceImpl"
                }
              ],
              "className": "PriceServiceImpl",
              "name": "findById",
              "packageAndClassName": "price.service.PriceServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "noThatConfig",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "type": "PriceConfigRepository",
              "name": "priceConfigRepository",
              "packageAndClassName": "price.service.PriceServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "price.service.PriceServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "\"[createNewPriceConfig]\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "info",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "length",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "toString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "toString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getBasicPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getFirstClassPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getRouteId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getTrainType()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "save",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findById",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "get",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getBasicPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getFirstClassPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getRouteId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "createAndModifyPriceConfig.getTrainType()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "createAndModifyPriceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "createNewPriceConfig",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "save",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findById",
              "parameterContents": "\"[findById][ID: {}]\",id",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "info",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "findById",
              "parameterContents": "UUID.fromString(id).toString()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findById",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "findById",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "toString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "findById",
              "parameterContents": "id",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "fromString",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "PriceConfig",
              "calledFrom": "findById",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "PriceConfig",
              "calledFrom": "findById",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "get",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "\"[findByRouteIdAndTrainType][Route: {} , Train Type: {}]\",routeId,trainType",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "info",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "routeId,trainType",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findByRouteIdAndTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findByRouteIdAndTrainType",
              "parameterContents": "\"[findByRouteIdAndTrainType][Find by route and train type warn][PricrConfig not found][RouteId: {}, TrainType: {}]\",routeId,trainType",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "warn",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "Arrays",
              "objectType": "Arrays",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "rts.split(\":\")",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "asList",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "rts",
              "objectType": "String",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "\":\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "split",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "routeIds",
              "objectType": "List",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "r_t.get(0)",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "add",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "r_t",
              "objectType": "List",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "0",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "get",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "trainTypes",
              "objectType": "List",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "r_t.get(1)",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "add",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "r_t",
              "objectType": "List",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "1",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "get",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "routeIds,trainTypes",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findByRouteIdsAndTrainTypes",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "pc",
              "objectType": "PriceConfig",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "pc",
              "objectType": "PriceConfig",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "ridsAndTts",
              "objectType": "List",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "key",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "contains",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "pcMap",
              "objectType": "PriceConfig",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "key,pc",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "put",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findByRouteIdsAndTrainTypes",
              "parameterContents": "\"[findByRouteIdsAndTrainTypes][Find by routes and train types warn][PricrConfig not found][RouteIds: {}, TrainTypes: {}]\",routeIds,trainTypes",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "warn",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "findAllPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findAll",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "PriceConfig",
              "calledFrom": "findAllPriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAllPriceConfig",
              "parameterContents": "\"[findAllPriceConfig][Find all price config warn][{}]\",\"No Content\"",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "warn",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "pcId",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findById",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "PriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "\"[deletePriceConfig][Delete price config error][Price config not found][PriceConfigId: {}]\",pcId",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "error",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "PriceConfig",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "get",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "deletePriceConfig",
              "parameterContents": "pc",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "delete",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "findById",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "\"[updatePriceConfig][Update price config error][Price config not found][PriceConfigId: {}]\",c.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "error",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "get",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getBasicPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getBasicPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getFirstClassPriceRate()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getFirstClassPriceRate",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getRouteId()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfig",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "c.getTrainType()",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "c",
              "objectType": "PriceConfig",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "price.service.PriceServiceImpl"
            },
            {
              "objectName": "priceConfigRepository",
              "objectType": "PriceConfigRepository",
              "calledFrom": "updatePriceConfig",
              "parameterContents": "priceConfig",
              "microserviceName": "ts-price-service",
              "className": "PriceServiceImpl",
              "name": "save",
              "packageAndClassName": "price.service.PriceServiceImpl"
            }
          ],
          "name": "PriceServiceImpl",
          "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "price.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "price.repository.PriceConfigRepository"
                }
              ],
              "returnType": "Optional<PriceConfig>",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.repository.PriceConfigRepository"
                }
              ],
              "className": "PriceConfigRepository",
              "name": "findById",
              "packageAndClassName": "price.repository.PriceConfigRepository"
            },
            {
              "parameters": [],
              "returnType": "List<PriceConfig>",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "price.repository.PriceConfigRepository"
                }
              ],
              "className": "PriceConfigRepository",
              "name": "findAll",
              "packageAndClassName": "price.repository.PriceConfigRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "price.repository.PriceConfigRepository"
                }
              ],
              "returnType": "PriceConfig",
              "microserviceName": "ts-price-service",
              "annotations": [],
              "className": "PriceConfigRepository",
              "name": "findByRouteIdAndTrainType",
              "packageAndClassName": "price.repository.PriceConfigRepository"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "routeIds",
                  "packageAndClassName": "price.repository.PriceConfigRepository"
                }
              ],
              "returnType": "List<PriceConfig>",
              "microserviceName": "ts-price-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "SELECT * FROM price_config WHERE route_id IN ?1 AND train_type IN ?2"
                  },
                  "name": "Query",
                  "packageAndClassName": "price.repository.PriceConfigRepository"
                }
              ],
              "className": "PriceConfigRepository",
              "name": "findByRouteIdsAndTrainTypes",
              "packageAndClassName": "price.repository.PriceConfigRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "price.repository.PriceConfigRepository"
            }
          ],
          "methodCalls": [],
          "name": "PriceConfigRepository",
          "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "price.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "price.entity.PriceConfig"
            },
            {
              "type": "double",
              "name": "basicPriceRate",
              "packageAndClassName": "price.entity.PriceConfig"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "AllArgsConstructor",
              "packageAndClassName": "price.entity.PriceConfig"
            }
          ],
          "methodCalls": [],
          "name": "PriceConfig",
          "path": "/ts-price-service/src/main/java/price/entity/PriceConfig.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "org.hibernate.javax.persistence",
                    "scope": "compile",
                    "artifactId": "hibernate-jpa-2.1-api",
                    "version": "1.0.0.Final"
                  },
                  {
                    "groupId": "org.hibernate",
                    "artifactId": "hibernate-core"
                  },
                  {
                    "groupId": "mysql",
                    "scope": "runtime",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "org.springframework.data",
                    "artifactId": "spring-data-commons"
                  },
                  {
                    "groupId": "org.springframework.cloud",
                    "artifactId": "spring-cloud-commons"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-price-service",
              "artifactId": "ts-price-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-price-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:127.0.0.1:8848}"
                  }
                }
              },
              "application": {
                "name": "ts-price-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${PRICE_MYSQL_HOST:10.176.122.1}:${PRICE_MYSQL_PORT:3306}/${PRICE_MYSQL_DATABASE:ts}?useSSL=false",
                "username": "${PRICE_MYSQL_USER:root}",
                "password": "${PRICE_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "server": {
              "port": 16579
            },
            "swagger": {
              "controllerPackage": "price.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-price-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-rebook-service",
      "path": "/ts-rebook-service",
      "controllers": [
        {
          "packageName": "rebook.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/rebookservice/rebook/difference",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "rebook.controller.RebookController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "rebook.controller.RebookController"
                },
                {
                  "type": "RebookInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "rebook.controller.RebookController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "rebook.controller.RebookController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-rebook-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/rebook/difference"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "rebook.controller.RebookController"
                }
              ],
              "className": "RebookController",
              "name": "payDifference",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "url": "/api/v1/rebookservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-rebook-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "rebook.controller.RebookController"
                }
              ],
              "className": "RebookController",
              "name": "home",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "url": "/api/v1/rebookservice/rebook",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "rebook.controller.RebookController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "rebook.controller.RebookController"
                },
                {
                  "type": "RebookInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "rebook.controller.RebookController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "rebook.controller.RebookController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-rebook-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/rebook"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "rebook.controller.RebookController"
                }
              ],
              "className": "RebookController",
              "name": "rebook",
              "packageAndClassName": "rebook.controller.RebookController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "type": "RebookService",
              "name": "service",
              "packageAndClassName": "rebook.controller.RebookController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "attributes": {
                "default": "/api/v1/rebookservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "rebook.controller.RebookController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "payDifference",
              "parameterContents": "\"[payDifference][Pay difference][OrderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "info",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getOrderId",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "service.payDifference(info, headers)",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "ok",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "service",
              "objectType": "RebookService",
              "calledFrom": "payDifference",
              "parameterContents": "info,headers",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "payDifference",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook][OrderId: {}, Old Trip Id: {}, New Trip Id: {}, Date: {}, Seat Type: {}]\",info.getOrderId(),info.getOldTripId(),info.getTripId(),info.getDate(),info.getSeatType()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "info",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getOrderId",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getOldTripId",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getTripId",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getDate",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "getSeatType",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "service.rebook(info, headers)",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "ok",
              "packageAndClassName": "rebook.controller.RebookController"
            },
            {
              "objectName": "service",
              "objectType": "RebookService",
              "calledFrom": "rebook",
              "parameterContents": "info,headers",
              "microserviceName": "ts-rebook-service",
              "className": "RebookController",
              "name": "rebook",
              "packageAndClassName": "rebook.controller.RebookController"
            }
          ],
          "name": "RebookController",
          "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "rebook.service",
          "implementedTypes": [
            "RebookService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "RebookInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "ticketPrice",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "TripAllDetail",
                  "annotations": [],
                  "name": "gtdr",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "deleteOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "RebookInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "Response<Order>",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "getOrderByRebookInfo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "TripAllDetailInfo",
                  "annotations": [],
                  "name": "gtdi",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "Response<TripAllDetail>",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "oldHeaders",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "HttpHeaders",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "Order",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "RebookInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-rebook-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "className": "RebookServiceImpl",
              "name": "rebook",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stations",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "Ticket",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainTypeName",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "queryTrainTypeByName",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "httpHeaders",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "rebook.service.RebookServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-rebook-service",
              "annotations": [],
              "className": "RebookServiceImpl",
              "name": "payDifferentMoney",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "info,httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderByRebookInfo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Order not suitable to rebook][OrderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Order not found][OrderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Order not paid][OrderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Order can't change twice][OrderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "COLLECTED",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Order already collected][OrderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Order can't change][OrderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "order.getTravelDate(),order.getTravelTime()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "checkTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Order beyond change time][OrderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "rebook",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "rebook",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "rebook",
              "parameterContents": "info.getDate()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "rebook",
              "parameterContents": "info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "gtdi,info.getTripId(),httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Trip detail not found][OrderId: {}]\",info.getOrderId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Seat Not Enough][OrderId: {},SeatType: {}]\",info.getOrderId(),info.getSeatType()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Seat Not Enough][OrderId: {},SeatType: {}]\",info.getOrderId(),info.getSeatType()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripAllDetail",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPriceForConfortClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripAllDetail",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripAllDetail",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripAllDetail",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "priceOld",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "priceNew",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "compareTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "toString",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "priceOld",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "priceNew",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "subtract",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "info.getLoginId(),difference,httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "drawBackMoney",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "rebook",
              "parameterContents": "\"[rebook][Rebook warn][Can't draw back the difference money][OrderId: {},LoginId: {},difference: {}]\",info.getOrderId(),info.getLoginId(),difference",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "order,info,(TripAllDetail) gtdr.getData(),ticketPrice,httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "priceOld",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "priceNew",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "compareTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "rebook",
              "parameterContents": "order,info,(TripAllDetail) gtdr.getData(),ticketPrice,httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "Response",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "toString",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "priceNew",
              "objectType": "BigDecimal",
              "calledFrom": "rebook",
              "parameterContents": "priceOld",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "subtract",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "orderMoneyDifference",
              "objectType": "Order",
              "calledFrom": "rebook",
              "parameterContents": "difference",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setDifferenceMoney",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "info,httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderByRebookInfo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "Response",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "Response",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "queryOrderResult",
              "objectType": "Response",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "payDifference",
              "parameterContents": "order.getFrom()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "payDifference",
              "parameterContents": "order.getTo()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "payDifference",
              "parameterContents": "info.getDate()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "payDifference",
              "parameterContents": "info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "gtdi,info.getTripId(),httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripAllDetailInformation",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdrResposne",
              "objectType": "Response",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripAllDetail",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPriceForConfortClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripAllDetail",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getPrice",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "info.getOrderId(),info.getTripId(),info.getLoginId(),priceNew.subtract(priceOld).toString(),httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "payDifferentMoney",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "toString",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "priceNew",
              "objectType": "BigDecimal",
              "calledFrom": "payDifference",
              "parameterContents": "priceOld",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "subtract",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifference",
              "parameterContents": "order,info,gtdr,ticketPrice,httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "payDifference",
              "parameterContents": "\"[payDifference][Pay difference warn][Can't pay the difference money][OrderId: {},LoginId: {},TripId: {}]\",info.getOrderId(),info.getLoginId(),info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getLoginId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "payDifference",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrip",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "StringUtils.Date2String(new Date())",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setBoughtDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "updateOrder",
              "parameterContents": "new Date()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "OrderStatus.CHANGE.getCode()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "CHANGE",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "ticketPrice",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getSeatType()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getDate()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "trip.getStartTime()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTravelTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "trip.getRouteId(),httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "trip.getTrainTypeName(),httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "queryTrainTypeByName",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStations",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getDate(),order.getTrainNumber(),order.getFrom(),order.getTo(),SeatClass.FIRSTCLASS.getCode(),firstClassTotalNum,stations,httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "SeatClass.FIRSTCLASS.getCode()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getDate(),order.getTrainNumber(),order.getFrom(),order.getTo(),SeatClass.SECONDCLASS.getCode(),secondClassTotalNum,stations,httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "dipatchSeat",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "SeatClass.SECONDCLASS.getCode()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatClass",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getCode",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "\"\" + ticket.getSeatNo()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "oldTripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "oldTripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "order,info.getTripId(),httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "changeOrderResult",
              "objectType": "Response",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Update order error][OrderId: {},TripId: {}]\",info.getOrderId(),info.getTripId()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "error",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getId().toString(),oldTripId,httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "deleteOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "toString",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "order,order.getTrainNumber(),httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "createOrder",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "Order",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "date",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "tripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "seatType",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "startStationId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "endStataionId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "tatalNum",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTotalNum",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "dipatchSeat",
              "parameterContents": "stations",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setStations",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "dipatchSeat",
              "parameterContents": "httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "dipatchSeat",
              "parameterContents": "\"ts-seat-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/api/v1/seatservice/seats",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "dipatchSeat",
              "parameterContents": "seat_service_url + \"/api/v1/seatservice/seats\",HttpMethod.POST,requestEntityTicket,new ParameterizedTypeReference<Response<Ticket>>() {\r\n}",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "exchange",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "dipatchSeat",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "reTicket",
              "objectType": "ResponseEntity",
              "calledFrom": "dipatchSeat",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getBody",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "tripGD",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "tripGD",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "today",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "StringUtils.String2Date(travelDate)",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "checkTime",
              "parameterContents": "travelDate",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateC",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "StringUtils.String2Date(travelTime)",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTime",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "checkTime",
              "parameterContents": "travelTime",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.HOUR_OF_DAY",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateC",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.HOUR_OF_DAY",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.HOUR_OF_DAY",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateC",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.HOUR_OF_DAY",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MINUTE",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "calDateC",
              "objectType": "Calendar",
              "calledFrom": "checkTime",
              "parameterContents": "Calendar.MINUTE",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "get",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"ts-travel2-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "requestUrl,HttpMethod.POST,requestGetTripAllDetailResult,new ParameterizedTypeReference<Response<TripAllDetail>>() {\r\n}",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "exchange",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "reGetTripAllDetailResult",
              "objectType": "ResponseEntity",
              "calledFrom": "getTripAllDetailInformation",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getBody",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createOrder",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "createOrder",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "createOrder",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createOrder",
              "parameterContents": "httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createOrder",
              "parameterContents": "requestUrl,HttpMethod.POST,requestCreateOrder,Response.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "exchange",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "reCreateOrder",
              "objectType": "ResponseEntity",
              "calledFrom": "createOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getBody",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "tripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateOrder",
              "parameterContents": "httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "PUT",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "updateOrder",
              "parameterContents": "requestOrderUtl,HttpMethod.PUT,requestUpdateOrder,Response.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "exchange",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "reUpdateOrder",
              "objectType": "ResponseEntity",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getBody",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "tripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "tripGD",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteOrder",
              "parameterContents": "httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteOrder",
              "parameterContents": "requestUrl,HttpMethod.POST,requestDeleteOrder,Response.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "exchange",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "reDeleteOrder",
              "objectType": "ResponseEntity",
              "calledFrom": "deleteOrder",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getBody",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOldTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOldTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RebookInfo",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "requestUrl,HttpMethod.GET,requestEntityGetOrderByRebookInfo,new ParameterizedTypeReference<Response<Order>>() {\r\n}",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "exchange",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "reGetOrderByRebookInfo",
              "objectType": "ResponseEntity",
              "calledFrom": "getOrderByRebookInfo",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getBody",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/api/v1/trainservice/trains/byName/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "train_service_url + \"/api/v1/trainservice/trains/byName/\" + trainTypeName,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "exchange",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getBody",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "response.getData(),TrainType.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes/\" + routeId,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "exchange",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getBody",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id Failed][Fail msg: {}]\",result.getMsg()",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "warn",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getMsg",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id][Success]\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "info",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "result.getData(),Route.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getData",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "orderId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setOrderId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "tripId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "userId",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setUserId",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "PaymentDifferenceInfo",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "money",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "setPrice",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "\"ts-inside-payment-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/api/v1/inside_pay_service/inside_payment/difference",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "inside_payment_service_url + \"/api/v1/inside_pay_service/inside_payment/difference\",HttpMethod.POST,requestEntityPayDifferentMoney,Response.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "exchange",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "rePayDifferentMoney",
              "objectType": "ResponseEntity",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getBody",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "payDifferentMoney",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "drawBackMoney",
              "parameterContents": "httpHeaders",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getAuthorizationHeadersFrom",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "drawBackMoney",
              "parameterContents": "\"ts-inside-payment-service\"",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "url": "/api/v1/inside_pay_service/inside_payment/drawback/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "drawBackMoney",
              "parameterContents": "inside_payment_service_url + \"/api/v1/inside_pay_service/inside_payment/drawback/\" + userId + \"/\" + money,HttpMethod.GET,requestEntityDrawBackMoney,Response.class",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "exchange",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "reDrawBackMoney",
              "objectType": "ResponseEntity",
              "calledFrom": "drawBackMoney",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getBody",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "drawBackMoney",
              "parameterContents": "",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "oldHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "getAuthorizationHeadersFrom",
              "parameterContents": "HttpHeaders.AUTHORIZATION",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "containsKey",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "newHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "getAuthorizationHeadersFrom",
              "parameterContents": "HttpHeaders.AUTHORIZATION,oldHeaders.getFirst(HttpHeaders.AUTHORIZATION)",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "add",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            },
            {
              "objectName": "oldHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "getAuthorizationHeadersFrom",
              "parameterContents": "HttpHeaders.AUTHORIZATION",
              "microserviceName": "ts-rebook-service",
              "className": "RebookServiceImpl",
              "name": "getFirst",
              "packageAndClassName": "rebook.service.RebookServiceImpl"
            }
          ],
          "name": "RebookServiceImpl",
          "path": "/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-rebook-service",
              "artifactId": "ts-rebook-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-rebook-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18886
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-rebook-service"
              }
            },
            "swagger": {
              "controllerPackage": "rebook.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-rebook-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-route-plan-service",
      "path": "/ts-route-plan-service",
      "controllers": [
        {
          "packageName": "plan.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/routeplanservice/routePlan/cheapestRoute",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "RoutePlanInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "plan.controller.RoutePlanController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "plan.controller.RoutePlanController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-route-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/routePlan/cheapestRoute"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "className": "RoutePlanController",
              "name": "getCheapestRoutes",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "url": "/api/v1/routeplanservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-route-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "className": "RoutePlanController",
              "name": "home",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "url": "/api/v1/routeplanservice/routePlan/minStopStations",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "RoutePlanInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "plan.controller.RoutePlanController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "plan.controller.RoutePlanController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-route-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/routePlan/minStopStations"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "className": "RoutePlanController",
              "name": "getMinStopStations",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "url": "/api/v1/routeplanservice/routePlan/quickestRoute",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "RoutePlanInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "plan.controller.RoutePlanController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "plan.controller.RoutePlanController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-route-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/routePlan/quickestRoute"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "plan.controller.RoutePlanController"
                }
              ],
              "className": "RoutePlanController",
              "name": "getQuickestRoutes",
              "packageAndClassName": "plan.controller.RoutePlanController"
            }
          ],
          "fields": [
            {
              "type": "RoutePlanService",
              "name": "routePlanService",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "plan.controller.RoutePlanController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "attributes": {
                "default": "/api/v1/routeplanservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "plan.controller.RoutePlanController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "\"[searchCheapestResult][Get Cheapest Routes][From: {}, To: {}, Num: {}, Date: {}]\",info.getStartStation(),info.getEndStation(),+info.getNum(),info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "info",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getStartStation",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getEndStation",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getNum",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getTravelDate",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "routePlanService.searchCheapestResult(info, headers)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "ok",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "routePlanService",
              "objectType": "RoutePlanService",
              "calledFrom": "getCheapestRoutes",
              "parameterContents": "info,headers",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "searchCheapestResult",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "\"[searchQuickestResult][Get Quickest Routes][From: {}, To: {}, Num: {}, Date: {}]\",info.getStartStation(),info.getEndStation(),info.getNum(),info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "info",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getStartStation",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getEndStation",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getNum",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getTravelDate",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "routePlanService.searchQuickestResult(info, headers)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "ok",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "routePlanService",
              "objectType": "RoutePlanService",
              "calledFrom": "getQuickestRoutes",
              "parameterContents": "info,headers",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "searchQuickestResult",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getMinStopStations",
              "parameterContents": "\"[searchMinStopStations][Get Min Stop Stations][From: {}, To: {}, Num: {}, Date: {}]\",info.getStartStation(),info.getEndStation(),info.getNum(),info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "info",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getStartStation",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getEndStation",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getNum",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "getTravelDate",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getMinStopStations",
              "parameterContents": "routePlanService.searchMinStopStations(info, headers)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "ok",
              "packageAndClassName": "plan.controller.RoutePlanController"
            },
            {
              "objectName": "routePlanService",
              "objectType": "RoutePlanService",
              "calledFrom": "getMinStopStations",
              "parameterContents": "info,headers",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanController",
              "name": "searchMinStopStations",
              "packageAndClassName": "plan.controller.RoutePlanController"
            }
          ],
          "name": "RoutePlanController",
          "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "plan.service",
          "implementedTypes": [
            "RoutePlanService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-route-plan-service",
              "annotations": [],
              "className": "RoutePlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                },
                {
                  "type": "RoutePlanInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-route-plan-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "className": "RoutePlanServiceImpl",
              "name": "searchCheapestResult",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                },
                {
                  "type": "TripInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "returnType": "ArrayList<TripResponse>",
              "microserviceName": "ts-route-plan-service",
              "annotations": [],
              "className": "RoutePlanServiceImpl",
              "name": "getTripFromHighSpeedTravelServive",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-route-plan-service",
              "annotations": [],
              "className": "RoutePlanServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "plan.service.RoutePlanServiceImpl"
                }
              ],
              "returnType": "List<String>",
              "microserviceName": "ts-route-plan-service",
              "annotations": [],
              "className": "RoutePlanServiceImpl",
              "name": "getStationList",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "info.getStartStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "info.getEndStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "queryInfo,headers",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripFromHighSpeedTravelServive",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "queryInfo,headers",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripFromNormalTrainTravelService",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "highSpeed",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "normalTrain",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "5,finalResult.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "min",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "j",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "Float",
              "objectType": "Float",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "thisRes.getPriceForEconomyClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "parseFloat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "thisRes",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "Float",
              "objectType": "Float",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "finalResult.get(j).getPriceForEconomyClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "parseFloat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "j",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "finalResult.get(minIndex)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "remove",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getTrainTypeName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTrainTypeName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getStartStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getTerminalStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTerminalStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "getStationList(tempResponse.getTripId().toString(), headers)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getTripId().toString(),headers",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStationList",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getPriceForEconomyClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getPriceForConfortClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForConfortClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getEndTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempResponse.getStartTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "units",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchCheapestResult",
              "parameterContents": "tempUnit",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "info.getStartStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "info.getEndStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "queryInfo,headers",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripFromHighSpeedTravelServive",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "queryInfo,headers",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripFromNormalTrainTravelService",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tr",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tr",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "finalResult.size(),5",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "min",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "j",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "thisRes.getEndTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "thisRes",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "thisRes.getStartTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "thisRes",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "endTime",
              "objectType": "Date",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "startTime",
              "objectType": "Date",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "endTime",
              "objectType": "Date",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "startTime",
              "objectType": "Date",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "finalResult.get(minIndex)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "remove",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "returnResult",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getTrainTypeName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTrainTypeName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getStartStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getTerminalStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTerminalStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "getStationList(tempResponse.getTripId().toString(), headers)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getTripId().toString(),headers",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStationList",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getPriceForEconomyClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getPriceForConfortClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForConfortClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getStartTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempResponse.getEndTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "units",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchQuickestResult",
              "parameterContents": "tempUnit",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"[searchMinStopStations][Start and Finish][From Id: {} To: {}]\",fromStationId,toStationId",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "info",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes/\" + info.getStartStation() + \"/\" + info.getEndStation(),HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<ArrayList<Route>>>() {\r\n}",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"[searchMinStopStations][Get the route][Candidate Route Number: {}]\",routeList.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "info",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "fromStationId",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "toStationId",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "gapList",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "indexEnd - indexStart",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "5,routeList.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "min",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "gapList",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "gapList",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "j",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "gapList",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "j",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "resultRoutes",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "routeList.get(minIndex).getId()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "routeList",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "remove",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "gapList",
              "objectType": "ArrayList",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "minIndex",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "remove",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/api/v1/travelservice/trips/routes",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "travel_service_url + \"/api/v1/travelservice/trips/routes\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<ArrayList<ArrayList<Trip>>>>() {\r\n}",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "re2",
              "objectType": "ResponseEntity",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"ts-travel2-service\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/api/v1/travel2service/trips/routes",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "travel2_service_url + \"/api/v1/travel2service/trips/routes\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<ArrayList<ArrayList<Trip>>>>() {\r\n}",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "re2",
              "objectType": "ResponseEntity",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "travel2Trips",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "travel2Trips",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tempList",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "travelTrips.get(i)",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "travelTrips",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "i",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "get",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalTripResult",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tempList",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"[searchMinStopStations][Get train Information][Trips Num: {}]\",finalTripResult.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "info",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "finalTripResult",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trips",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tempTrips",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "trip.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getStartStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setFrom",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "allDetailInfo",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "info.getEndStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTo",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RoutePlanInfo",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "0",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "charAt",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "0",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "charAt",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "requestUrl,HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<TripAllDetail>>() {\r\n}",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "re3",
              "objectType": "ResponseEntity",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripAllDetail",
              "objectType": "TripAllDetail",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripResponse",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "trip.getTripId().toString()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getTrainTypeName()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setTrainTypeName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getStartStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getTerminalStation()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getTerminalStation",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getStartTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getEndTime()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getPriceForConfortClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForConfortClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripResponse.getPriceForEconomyClass()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponse",
              "objectType": "TripResponse",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getPriceForEconomyClass",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "routeId,headers",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "unit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "tripRoute.getStations()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripRoute",
              "objectType": "Route",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponses",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "unit",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "add",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "\"[searchMinStopStations][Trips Response Unit Num: {}]\",tripResponses.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "info",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponses",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "searchMinStopStations",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes/\" + routeId,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<Route>>() {\r\n}",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id Fail][RouteId: {}]\",routeId",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "error",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id Success]\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "info",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "\"[getTripFromHighSpeedTravelServive][trip info: {}]\",info",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "info",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/api/v1/travelservice/trips/left",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "travel_service_url + \"/api/v1/travelservice/trips/left\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<ArrayList<TripResponse>>>() {\r\n}",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "\"[getTripFromHighSpeedTravelServive][Route Plan Get Trip][Size:{}]\",tripResponses.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "info",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripResponses",
              "objectType": "TripResponse",
              "calledFrom": "getTripFromHighSpeedTravelServive",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "\"ts-travel2-service\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "/api/v1/travel2service/trips/left",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "travel2_service_url + \"/api/v1/travel2service/trips/left\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<ArrayList<TripResponse>>>() {\r\n}",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "\"[getTripFromNormalTrainTravelService][Route Plan Get TripOther][Size:{}]\",list.size()",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "info",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "TripResponse",
              "calledFrom": "getTripFromNormalTrainTravelService",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "size",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getStationList",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getStationList",
              "parameterContents": "\"ts-travel2-service\"",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getStationList",
              "parameterContents": "0",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "charAt",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getStationList",
              "parameterContents": "0",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "charAt",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "url": "{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getStationList",
              "parameterContents": "path,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<Route>>() {\r\n}",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getStationList",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getStationList",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getStationList",
              "parameterContents": "",
              "microserviceName": "ts-route-plan-service",
              "className": "RoutePlanServiceImpl",
              "name": "getStations",
              "packageAndClassName": "plan.service.RoutePlanServiceImpl"
            }
          ],
          "name": "RoutePlanServiceImpl",
          "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-route-plan-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.services",
                  "artifactId": "ts-common",
                  "version": "0.1.0"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-route-plan-service",
              "artifactId": "ts-route-plan-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-route-plan-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-route-plan-service"
              }
            },
            "server": {
              "port": 14578
            },
            "swagger": {
              "controllerPackage": "plan.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-route-plan-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-route-service",
      "path": "/ts-route-service",
      "controllers": [
        {
          "packageName": "route.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/routeservice/routes/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "routeId",
                  "packageAndClassName": "route.controller.RouteController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/routes/{routeId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "queryById",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/api/v1/routeservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "home",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/api/v1/routeservice/routes/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "routeId",
                  "packageAndClassName": "route.controller.RouteController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/routes/{routeId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "deleteRoute",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/api/v1/routeservice/routes/{?}/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "start",
                  "packageAndClassName": "route.controller.RouteController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/routes/{start}/{end}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "queryByStartAndTerminal",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/api/v1/routeservice/routes/byIds",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "routeIds",
                  "packageAndClassName": "route.controller.RouteController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/routes/byIds"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "queryByIds",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/api/v1/routeservice/routes",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "route.controller.RouteController"
                },
                {
                  "type": "RouteInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "createAndModifyRouteInfo",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/routes"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "createAndModifyRoute",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "url": "/api/v1/routeservice/routes",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "route.controller.RouteController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/routes"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "route.controller.RouteController"
                }
              ],
              "className": "RouteController",
              "name": "queryAll",
              "packageAndClassName": "route.controller.RouteController"
            }
          ],
          "fields": [
            {
              "type": "RouteService",
              "name": "routeService",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "route.controller.RouteController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/routeservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "route.controller.RouteController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "\"[createAndModify][Create route][start: {}, end: {}]\",createAndModifyRouteInfo.getStartStation(),createAndModifyRouteInfo.getEndStation()",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "info",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "createAndModifyRouteInfo",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "getStartStation",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "createAndModifyRouteInfo",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "getEndStation",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "routeService.createAndModify(createAndModifyRouteInfo, headers)",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "ok",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "createAndModifyRoute",
              "parameterContents": "createAndModifyRouteInfo,headers",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "createAndModify",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteRoute",
              "parameterContents": "\"[deleteRoute][Delete route][RouteId: {}]\",routeId",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "info",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteRoute",
              "parameterContents": "routeService.deleteRoute(routeId, headers)",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "ok",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "deleteRoute",
              "parameterContents": "routeId,headers",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "deleteRoute",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryById",
              "parameterContents": "\"[getRouteById][Query route by id][RouteId: {}]\",routeId",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "info",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryById",
              "parameterContents": "routeService.getRouteById(routeId, headers)",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "ok",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "queryById",
              "parameterContents": "routeId,headers",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "getRouteById",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryByIds",
              "parameterContents": "\"[getRouteById][Query route by id][RouteId: {}]\",routeIds",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "info",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryByIds",
              "parameterContents": "routeService.getRouteByIds(routeIds, headers)",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "ok",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "queryByIds",
              "parameterContents": "routeIds,headers",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "getRouteByIds",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAll",
              "parameterContents": "\"[getAllRoutes][Query all routes]\"",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "info",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryAll",
              "parameterContents": "routeService.getAllRoutes(headers)",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "ok",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "queryAll",
              "parameterContents": "headers",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "getAllRoutes",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryByStartAndTerminal",
              "parameterContents": "\"[getRouteByStartAndEnd][Query routes][start: {}, end: {}]\",start,end",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "info",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryByStartAndTerminal",
              "parameterContents": "routeService.getRouteByStartAndEnd(start, end, headers)",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "ok",
              "packageAndClassName": "route.controller.RouteController"
            },
            {
              "objectName": "routeService",
              "objectType": "RouteService",
              "calledFrom": "queryByStartAndTerminal",
              "parameterContents": "start,end,headers",
              "microserviceName": "ts-route-service",
              "className": "RouteController",
              "name": "getRouteByStartAndEnd",
              "packageAndClassName": "route.controller.RouteController"
            }
          ],
          "name": "RouteController",
          "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "route.service",
          "implementedTypes": [
            "RouteService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                },
                {
                  "type": "RouteInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "className": "RouteServiceImpl",
              "name": "createAndModify",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "className": "RouteServiceImpl",
              "name": "deleteRoute",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "routeIds",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "className": "RouteServiceImpl",
              "name": "getRouteByIds",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "route.service.RouteServiceImpl"
                }
              ],
              "className": "RouteServiceImpl",
              "name": "getAllRoutes",
              "packageAndClassName": "route.service.RouteServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "type": "RouteRepository",
              "name": "routeRepository",
              "packageAndClassName": "route.service.RouteServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "route.service.RouteServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createAndModify",
              "parameterContents": "\"[createAndModify][Create and modify start and end][Start: {} End: {}]\",info.getStartStation(),info.getEndStation()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "info",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "\",\"",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "split",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStationList",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "\",\"",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "split",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getDistanceList",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createAndModify",
              "parameterContents": "\"[createAndModify][Create and modify error][Station number not equal to distance number][RouteId: {}]\",info.getId()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "error",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "createAndModify",
              "parameterContents": "stations[i]",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "add",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "distanceList",
              "objectType": "List",
              "calledFrom": "createAndModify",
              "parameterContents": "Integer.parseInt(distances[i])",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "add",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "Integer",
              "objectType": "Integer",
              "calledFrom": "createAndModify",
              "parameterContents": "distances[i]",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "parseInt",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "length",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "toString",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "createAndModify",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "findById",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeOld",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeOld",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "get",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getId",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "info.getStartStation()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "info.getEndStation()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "RouteInfo",
              "calledFrom": "createAndModify",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "stationList",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "createAndModify",
              "parameterContents": "distanceList",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "setDistances",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "createAndModify",
              "parameterContents": "route",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "save",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "deleteRoute",
              "parameterContents": "routeId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "removeRouteById",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "deleteRoute",
              "parameterContents": "routeId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "findById",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "deleteRoute",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteRoute",
              "parameterContents": "\"[deleteRoute][Delete error][Route not found][RouteId: {}]\",routeId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "error",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "getRouteById",
              "parameterContents": "routeId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "findById",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getRouteById",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteById",
              "parameterContents": "\"[getRouteById][Find route error][Route not found][RouteId: {}]\",routeId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "error",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "getRouteByIds",
              "parameterContents": "routeIds",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "findByIds",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routes",
              "objectType": "Route",
              "calledFrom": "getRouteByIds",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByIds",
              "parameterContents": "\"[getRouteById][Find route error][Route not found][RouteIds: {}]\",routeIds",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "error",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "findAll",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "\"[getRouteByStartAndEnd][Find All][size:{}]\",routes.size()",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "info",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routes",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "size",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "startId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "contains",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "terminalId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "contains",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "startId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "terminalId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "getStations",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "resultList",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "route",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "add",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "resultList",
              "objectType": "Route",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByStartAndEnd",
              "parameterContents": "\"[getRouteByStartAndEnd][Find by start and terminal warn][Routes not found][startId: {},terminalId: {}]\",startId,terminalId",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "warn",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routeRepository",
              "objectType": "RouteRepository",
              "calledFrom": "getAllRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "findAll",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "routes",
              "objectType": "Route",
              "calledFrom": "getAllRoutes",
              "parameterContents": "",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "route.service.RouteServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllRoutes",
              "parameterContents": "\"[getAllRoutes][Find all routes warn][{}]\",\"No Content\"",
              "microserviceName": "ts-route-service",
              "className": "RouteServiceImpl",
              "name": "warn",
              "packageAndClassName": "route.service.RouteServiceImpl"
            }
          ],
          "name": "RouteServiceImpl",
          "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "route.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "returnType": "Optional<Route>",
              "microserviceName": "ts-route-service",
              "annotations": [],
              "className": "RouteRepository",
              "name": "findById",
              "packageAndClassName": "route.repository.RouteRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-route-service",
              "annotations": [],
              "className": "RouteRepository",
              "name": "removeRouteById",
              "packageAndClassName": "route.repository.RouteRepository"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "ids",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "returnType": "List<Route>",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "SELECT * from route where id in ?1"
                  },
                  "name": "Query",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "className": "RouteRepository",
              "name": "findByIds",
              "packageAndClassName": "route.repository.RouteRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Route>",
              "microserviceName": "ts-route-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "className": "RouteRepository",
              "name": "findAll",
              "packageAndClassName": "route.repository.RouteRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "startStation",
                  "packageAndClassName": "route.repository.RouteRepository"
                }
              ],
              "returnType": "ArrayList<Route>",
              "microserviceName": "ts-route-service",
              "annotations": [],
              "className": "RouteRepository",
              "name": "findByStartStationAndEndStation",
              "packageAndClassName": "route.repository.RouteRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "route.repository.RouteRepository"
            }
          ],
          "methodCalls": [],
          "name": "RouteRepository",
          "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "route.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "route.entity.Route"
            },
            {
              "type": "List<String>",
              "name": "stations",
              "packageAndClassName": "route.entity.Route"
            },
            {
              "type": "List<Integer>",
              "name": "distances",
              "packageAndClassName": "route.entity.Route"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "route.entity.Route"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "route.entity.Route"
            }
          ],
          "methodCalls": [],
          "name": "Route",
          "path": "/ts-route-service/src/main/java/route/entity/Route.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-route-service",
              "artifactId": "ts-route-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-route-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:127.0.0.1:8848}"
                  }
                }
              },
              "application": {
                "name": "ts-route-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${ROUTE_MYSQL_HOST:10.176.122.1}:${ROUTE_MYSQL_PORT:3306}/${ROUTE_MYSQL_DATABASE:ts}?useSSL=false",
                "username": "${ROUTE_MYSQL_USER:root}",
                "password": "${ROUTE_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "server": {
              "port": 11178
            },
            "swagger": {
              "controllerPackage": "route.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-route-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-seat-service",
      "path": "/ts-seat-service",
      "controllers": [
        {
          "packageName": "seat.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/seatservice/seats/left_tickets",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Seat",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "seat.controller.SeatController"
                    }
                  ],
                  "name": "seatRequest",
                  "packageAndClassName": "seat.controller.SeatController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "seat.controller.SeatController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "seat.controller.SeatController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-seat-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "seat.controller.SeatController"
                },
                {
                  "attributes": {
                    "value": "/seats/left_tickets"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "seat.controller.SeatController"
                }
              ],
              "className": "SeatController",
              "name": "getLeftTicketOfInterval",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "url": "/api/v1/seatservice/seats",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "Seat",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "seat.controller.SeatController"
                    }
                  ],
                  "name": "seatRequest",
                  "packageAndClassName": "seat.controller.SeatController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "seat.controller.SeatController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "seat.controller.SeatController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-seat-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/seats"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "seat.controller.SeatController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "seat.controller.SeatController"
                }
              ],
              "className": "SeatController",
              "name": "create",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "url": "/api/v1/seatservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-seat-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "seat.controller.SeatController"
                }
              ],
              "className": "SeatController",
              "name": "home",
              "packageAndClassName": "seat.controller.SeatController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "type": "SeatService",
              "name": "seatService",
              "packageAndClassName": "seat.controller.SeatController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/seatservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "seat.controller.SeatController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[distributeSeat][Create seat][TravelDate: {},TrainNumber: {},SeatType: {}]\",seatRequest.getTravelDate(),seatRequest.getTrainNumber(),seatRequest.getSeatType()",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "info",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "getTravelDate",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "getSeatType",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "create",
              "parameterContents": "seatService.distributeSeat(seatRequest, headers)",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "ok",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "seatService",
              "objectType": "SeatService",
              "calledFrom": "create",
              "parameterContents": "seatRequest,headers",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "distributeSeat",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[getLeftTicketOfInterval][Get left ticket of interval][TravelDate: {},TrainNumber: {},SeatType: {}]\",seatRequest.getTravelDate(),seatRequest.getTrainNumber(),seatRequest.getSeatType()",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "info",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "getTravelDate",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "getSeatType",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "seatService.getLeftTicketOfInterval(seatRequest, headers)",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "ok",
              "packageAndClassName": "seat.controller.SeatController"
            },
            {
              "objectName": "seatService",
              "objectType": "SeatService",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "seatRequest,headers",
              "microserviceName": "ts-seat-service",
              "className": "SeatController",
              "name": "getLeftTicketOfInterval",
              "packageAndClassName": "seat.controller.SeatController"
            }
          ],
          "name": "SeatController",
          "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "seat.service",
          "implementedTypes": [
            "SeatService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                }
              ],
              "returnType": "double",
              "microserviceName": "ts-seat-service",
              "annotations": [],
              "className": "SeatServiceImpl",
              "name": "getDirectProportion",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seat",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                },
                {
                  "type": "Set<Ticket>",
                  "annotations": [],
                  "name": "soldTickets",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-seat-service",
              "annotations": [],
              "className": "SeatServiceImpl",
              "name": "isContained",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-seat-service",
              "annotations": [],
              "className": "SeatServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                },
                {
                  "type": "Seat",
                  "annotations": [],
                  "name": "seatRequest",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-seat-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "seat.service.SeatServiceImpl"
                }
              ],
              "className": "SeatServiceImpl",
              "name": "distributeSeat",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[distributeSeat][TrainNumber start][G or D]\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order/tickets",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "distributeSeat",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order/tickets\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<LeftTicketInfo>>() {\r\n}",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "exchange",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[distributeSeat][Left ticket info][info is : {}]\",re3.getBody().toString()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "toString",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "re3",
              "objectType": "ResponseEntity",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getBody",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getData",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "re3",
              "objectType": "ResponseEntity",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getBody",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[distributeSeat][TrainNumber start][Other Capital Except D and G]\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/tickets",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "distributeSeat",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther/tickets\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<LeftTicketInfo>>() {\r\n}",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "exchange",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[distributeSeat][Left ticket info][info is : {}]\",re3.getBody().toString()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "toString",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "re3",
              "objectType": "ResponseEntity",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getBody",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getData",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "re3",
              "objectType": "ResponseEntity",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getBody",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStations",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTotalNum",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "startStation",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "seatRequest.getDestStation()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getDestStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "rand",
              "objectType": "Random",
              "calledFrom": "distributeSeat",
              "parameterContents": "range",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "leftTicketInfo",
              "objectType": "LeftTicketInfo",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSoldTickets",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getDestStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "distributeSeat",
              "parameterContents": "soldTicketDestStation",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "distributeSeat",
              "parameterContents": "startStation",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "soldTicket.getSeatNo()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "setSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[distributeSeat][Assign new tickets][Use the previous distributed seat number][seat number:{}]\",soldTicket.getSeatNo()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "distributeSeat",
              "parameterContents": "soldTickets,seat",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "isContained",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "rand",
              "objectType": "Random",
              "calledFrom": "distributeSeat",
              "parameterContents": "range",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "ticket",
              "objectType": "Ticket",
              "calledFrom": "distributeSeat",
              "parameterContents": "seat",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "setSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "distributeSeat",
              "parameterContents": "\"[distributeSeat][Assign new tickets][Use a new seat number][seat number:{}]\",seat",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "isContained",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[getLeftTicketOfInterval][Seat request][request:{}]\",seatRequest.toString()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "toString",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"G\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "trainNumber",
              "objectType": "String",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"D\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "startsWith",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[getLeftTicketOfInterval][TrainNumber start with G|D][trainNumber:{}]\",trainNumber",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order/tickets",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order/tickets\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<LeftTicketInfo>>() {\r\n}",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "exchange",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[getLeftTicketOfInterval][Get Order tickets result][result is {}]\",re3",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getData",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "re3",
              "objectType": "ResponseEntity",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getBody",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[getLeftTicketOfInterval][TrainNumber start with other capital][trainNumber:{}]\",trainNumber",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/tickets",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther/tickets\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<LeftTicketInfo>>() {\r\n}",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "exchange",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[getLeftTicketOfInterval][Get Order tickets result][result is {}]\",re3",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getData",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "re3",
              "objectType": "ResponseEntity",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getBody",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStations",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getTotalNum",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "leftTicketInfo",
              "objectType": "LeftTicketInfo",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSoldTickets",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTickets",
              "objectType": "Ticket",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "size",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getDestStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "soldTicketDestStation",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "startStation",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "\"[getLeftTicketOfInterval][Ticket available or sold][The previous distributed seat number is usable][{}]\",soldTicket.getSeatNo()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "soldTicket",
              "objectType": "Ticket",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "headers",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getDirectProportion",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "seatRequest.getStartStation()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "equals",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "0",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "get",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "seatRequest.getDestStation()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "equals",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "stationList.size() - 1",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "get",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "stationList",
              "objectType": "List",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "size",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getLeftTicketOfInterval",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getDestStation",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getDirectProportion",
              "parameterContents": "\"ts-config-service\"",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "url": "/api/v1/configservice/configs/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getDirectProportion",
              "parameterContents": "config_service_url + \"/api/v1/configservice/configs/\" + configName,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<Config>>() {\r\n}",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "exchange",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getDirectProportion",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getBody",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getDirectProportion",
              "parameterContents": "\"[getDirectProportion][Configs is : {}]\",configValue.getData().toString()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "info",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "getDirectProportion",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "toString",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "configValue",
              "objectType": "Response",
              "calledFrom": "getDirectProportion",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getData",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "Double",
              "objectType": "Double",
              "calledFrom": "getDirectProportion",
              "parameterContents": "configValue.getData().getValue()",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "parseDouble",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Response",
              "calledFrom": "getDirectProportion",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getValue",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            },
            {
              "objectName": "configValue",
              "objectType": "Response",
              "calledFrom": "getDirectProportion",
              "parameterContents": "",
              "microserviceName": "ts-seat-service",
              "className": "SeatServiceImpl",
              "name": "getData",
              "packageAndClassName": "seat.service.SeatServiceImpl"
            }
          ],
          "name": "SeatServiceImpl",
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-seat-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-seat-service",
              "artifactId": "ts-seat-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-seat-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18898
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-seat-service"
              }
            },
            "swagger": {
              "controllerPackage": "seat.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-seat-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-security-service",
      "path": "/ts-security-service",
      "controllers": [
        {
          "packageName": "security.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/securityservice/securityConfigs/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "accountId",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "attributes": {
                    "path": "/securityConfigs/{accountId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "check",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "url": "/api/v1/securityservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "home",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "url": "/api/v1/securityservice/securityConfigs",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "SecurityConfig",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/securityConfigs"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "create",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "url": "/api/v1/securityservice/securityConfigs",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "SecurityConfig",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/securityConfigs"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "update",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "url": "/api/v1/securityservice/securityConfigs",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/securityConfigs"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "findAllSecurityConfig",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "url": "/api/v1/securityservice/securityConfigs/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "security.controller.SecurityController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "security.controller.SecurityController"
                },
                {
                  "attributes": {
                    "path": "/securityConfigs/{id}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "security.controller.SecurityController"
                }
              ],
              "className": "SecurityController",
              "name": "delete",
              "packageAndClassName": "security.controller.SecurityController"
            }
          ],
          "fields": [
            {
              "type": "SecurityService",
              "name": "securityService",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "security.controller.SecurityController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/securityservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "security.controller.SecurityController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "\"[findAllSecurityConfig][Find All]\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "info",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "securityService.findAllSecurityConfig(headers)",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "ok",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "securityService",
              "objectType": "SecurityService",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "headers",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "findAllSecurityConfig",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[addNewSecurityConfig][Create][SecurityConfig Name: {}]\",info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "info",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "getName",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "create",
              "parameterContents": "securityService.addNewSecurityConfig(info, headers)",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "ok",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "securityService",
              "objectType": "SecurityService",
              "calledFrom": "create",
              "parameterContents": "info,headers",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "addNewSecurityConfig",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "update",
              "parameterContents": "\"[modifySecurityConfig][Update][SecurityConfig Name: {}]\",info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "info",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "getName",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "update",
              "parameterContents": "securityService.modifySecurityConfig(info, headers)",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "ok",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "securityService",
              "objectType": "SecurityService",
              "calledFrom": "update",
              "parameterContents": "info,headers",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "modifySecurityConfig",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[deleteSecurityConfig][Delete][SecurityConfig Id: {}]\",id",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "info",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "delete",
              "parameterContents": "securityService.deleteSecurityConfig(id, headers)",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "ok",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "securityService",
              "objectType": "SecurityService",
              "calledFrom": "delete",
              "parameterContents": "id,headers",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "deleteSecurityConfig",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "check",
              "parameterContents": "\"[check][Check Security][Check Account Id: {}]\",accountId",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "info",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "check",
              "parameterContents": "securityService.check(accountId, headers)",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "ok",
              "packageAndClassName": "security.controller.SecurityController"
            },
            {
              "objectName": "securityService",
              "objectType": "SecurityService",
              "calledFrom": "check",
              "parameterContents": "accountId,headers",
              "microserviceName": "ts-security-service",
              "className": "SecurityController",
              "name": "check",
              "packageAndClassName": "security.controller.SecurityController"
            }
          ],
          "name": "SecurityController",
          "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "security.service",
          "implementedTypes": [
            "SecurityService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "className": "SecurityServiceImpl",
              "name": "findAllSecurityConfig",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Transactional",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "className": "SecurityServiceImpl",
              "name": "deleteSecurityConfig",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                },
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "checkDate",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "returnType": "OrderSecurity",
              "microserviceName": "ts-security-service",
              "annotations": [],
              "className": "SecurityServiceImpl",
              "name": "getSecurityOrderInfoFromOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                },
                {
                  "type": "SecurityConfig",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "className": "SecurityServiceImpl",
              "name": "addNewSecurityConfig",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "security.service.SecurityServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-security-service",
              "annotations": [],
              "className": "SecurityServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "type": "SecurityRepository",
              "name": "securityRepository",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findAll",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityConfigs",
              "objectType": "SecurityConfig",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findAllSecurityConfig",
              "parameterContents": "\"[findAllSecurityConfig][Find all security config warn][{}]\",\"No content\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "warn",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findByName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "\"[addNewSecurityConfig][Add new Security config warn][Security config already exist][SecurityConfigId: {},Name: {}]\",sc.getId(),info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "warn",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "sc",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "toString",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "info.getValue()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "config",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "info.getDescription()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setDescription",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getDescription",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "addNewSecurityConfig",
              "parameterContents": "config",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "save",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "null",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "orElse",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findById",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "\"[modifySecurityConfig][Modify Security config error][Security config not found][SecurityConfigId: {},Name: {}]\",info.getId(),info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "error",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getId",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "sc",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "sc",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "info.getValue()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "sc",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "info.getDescription()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "setDescription",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "SecurityConfig",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getDescription",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "modifySecurityConfig",
              "parameterContents": "sc",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "save",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "id",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SecurityRepository",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "null",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "orElse",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "id",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findById",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteSecurityConfig",
              "parameterContents": "\"[deleteSecurityConfig][Delete Security config error][Reason not clear][SecurityConfigId: {}]\",id",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "error",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "check",
              "parameterContents": "\"[check][Get Order Num Info]\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "debug",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "check",
              "parameterContents": "new Date(),accountId,headers",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getSecurityOrderInfoFromOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "check",
              "parameterContents": "new Date(),accountId,headers",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getSecurityOrderOtherInfoFromOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "OrderSecurity",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumInLastOneHour",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "OrderSecurity",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumInLastOneHour",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "orderOtherResult",
              "objectType": "OrderSecurity",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumOfValidOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "orderResult",
              "objectType": "OrderSecurity",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumOfValidOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "check",
              "parameterContents": "\"[check][Get Security Config Info]\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "debug",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "check",
              "parameterContents": "\"max_order_1_hour\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findByName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "securityRepository",
              "objectType": "SecurityRepository",
              "calledFrom": "check",
              "parameterContents": "\"max_order_not_use\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "findByName",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "check",
              "parameterContents": "\"[check][Max][Max In One Hour: {}  Max Not Use: {}]\",configMaxInHour.getValue(),configMaxNotUse.getValue()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "info",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "configMaxInHour",
              "objectType": "SecurityConfig",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "configMaxNotUse",
              "objectType": "SecurityConfig",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "Integer",
              "objectType": "Integer",
              "calledFrom": "check",
              "parameterContents": "configMaxInHour.getValue()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "parseInt",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "configMaxInHour",
              "objectType": "SecurityConfig",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "Integer",
              "objectType": "Integer",
              "calledFrom": "check",
              "parameterContents": "configMaxNotUse.getValue()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "parseInt",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "configMaxNotUse",
              "objectType": "SecurityConfig",
              "calledFrom": "check",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getValue",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "check",
              "parameterContents": "\"[check][Check Security config warn][Too much order in last one hour or too much valid order][AccountId: {}]\",accountId",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "warn",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "\"ts-order-service\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "url": "/api/v1/orderservice/order/security/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "order_service_url + \"/api/v1/orderservice/order/security/\" + checkDate + \"/\" + accountId,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<OrderSecurity>>() {\r\n}",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "exchange",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getBody",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getData",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "\"[getSecurityOrderInfoFromOrder][Get Order Info For Security][Last One Hour: {}  Total Valid Order: {}]\",result.getOrderNumInLastOneHour(),result.getOrderNumOfValidOrder()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "info",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "OrderSecurity",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumInLastOneHour",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "OrderSecurity",
              "calledFrom": "getSecurityOrderInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumOfValidOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "\"ts-order-other-service\"",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "url": "/api/v1/orderOtherService/orderOther/security/{?}/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "order_other_service_url + \"/api/v1/orderOtherService/orderOther/security/\" + checkDate + \"/\" + accountId,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<OrderSecurity>>() {\r\n}",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "exchange",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getBody",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getData",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "\"[getSecurityOrderOtherInfoFromOrder][Get Order Other Info For Security][Last One Hour: {}  Total Valid Order: {}]\",result.getOrderNumInLastOneHour(),result.getOrderNumOfValidOrder()",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "info",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "OrderSecurity",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumInLastOneHour",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "OrderSecurity",
              "calledFrom": "getSecurityOrderOtherInfoFromOrder",
              "parameterContents": "",
              "microserviceName": "ts-security-service",
              "className": "SecurityServiceImpl",
              "name": "getOrderNumOfValidOrder",
              "packageAndClassName": "security.service.SecurityServiceImpl"
            }
          ],
          "name": "SecurityServiceImpl",
          "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "security.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "security.repository.SecurityRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-security-service",
              "annotations": [],
              "className": "SecurityRepository",
              "name": "deleteById",
              "packageAndClassName": "security.repository.SecurityRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "security.repository.SecurityRepository"
                }
              ],
              "returnType": "Optional<SecurityConfig>",
              "microserviceName": "ts-security-service",
              "annotations": [],
              "className": "SecurityRepository",
              "name": "findById",
              "packageAndClassName": "security.repository.SecurityRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "name",
                  "packageAndClassName": "security.repository.SecurityRepository"
                }
              ],
              "returnType": "SecurityConfig",
              "microserviceName": "ts-security-service",
              "annotations": [],
              "className": "SecurityRepository",
              "name": "findByName",
              "packageAndClassName": "security.repository.SecurityRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<SecurityConfig>",
              "microserviceName": "ts-security-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "security.repository.SecurityRepository"
                }
              ],
              "className": "SecurityRepository",
              "name": "findAll",
              "packageAndClassName": "security.repository.SecurityRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "security.repository.SecurityRepository"
            }
          ],
          "methodCalls": [],
          "name": "SecurityRepository",
          "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "security.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "security.entity.SecurityConfig"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "security.entity.SecurityConfig"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "security.entity.SecurityConfig"
            }
          ],
          "methodCalls": [],
          "name": "SecurityConfig",
          "path": "/ts-security-service/src/main/java/security/entity/SecurityConfig.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-security-service",
              "artifactId": "ts-security-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-security-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-security-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${SECURITY_MYSQL_HOST:ts-security-mysql}:${SECURITY_MYSQL_PORT:3306}/${SECURITY_MYSQL_DATABASE:ts-security-mysql}?useSSL=false",
                "username": "${SECURITY_MYSQL_USER:root}",
                "password": "${SECURITY_MYSQL_PASSWORD:root}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "server": {
              "port": 11188
            },
            "swagger": {
              "controllerPackage": "security.controller"
            },
            "order-service": {
              "url": "http://${ORDER_SERVICE_HOST:ts-order-service}:${ORDER_SERVICE_PORT:12031}"
            },
            "order-other-service": {
              "url": "http://${ORDER_OTHER_SERVICE_HOST:ts-order-other-service}:${ORDER_OTHER_SERVICE_PORT:12032}"
            }
          },
          "name": "application.yml",
          "path": "/ts-security-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-station-service",
      "path": "/ts-station-service",
      "controllers": [
        {
          "packageName": "fdse.microservice.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/stationservice/stations/id/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "value": "stationNameForId"
                      },
                      "name": "PathVariable",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "stationName",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/stations/id/{stationNameForId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "queryForStationId",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/api/v1/stationservice/stations",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "type": "Station",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "station",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/stations"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "update",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/api/v1/stationservice/stations/name/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {
                        "value": "stationIdForName"
                      },
                      "name": "PathVariable",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "stationId",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "attributes": {
                    "value": "/stations/name/{stationIdForName}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "queryById",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/api/v1/stationservice/stations",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/stations"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "query",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/api/v1/stationservice/stations/idlist",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "stationNameList",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "attributes": {
                    "value": "/stations/idlist"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "queryForIdBatch",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/api/v1/stationservice/stations/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "stationsId",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/stations/{stationsId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "delete",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/api/v1/stationservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "home",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/api/v1/stationservice/stations/namelist",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "stationIdList",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/stations/namelist"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "queryForNameBatch",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "url": "/api/v1/stationservice/stations",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                },
                {
                  "type": "Station",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "fdse.microservice.controller.StationController"
                    }
                  ],
                  "name": "station",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/stations"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "fdse.microservice.controller.StationController"
                }
              ],
              "className": "StationController",
              "name": "create",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "type": "StationService",
              "name": "stationService",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/stationservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "stationService.query(headers)",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "ok",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "query",
              "parameterContents": "headers",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "query",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Create station][name: {}]\",station.getName()",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "info",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "create",
              "parameterContents": "station,headers",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "create",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "update",
              "parameterContents": "\"[update][Update station][StationId: {}]\",station.getId()",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "info",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "update",
              "parameterContents": "stationService.update(station, headers)",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "ok",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "update",
              "parameterContents": "station,headers",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "update",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[delete][Delete station][StationId: {}]\",stationsId",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "info",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "delete",
              "parameterContents": "stationService.delete(stationsId, headers)",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "ok",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "delete",
              "parameterContents": "stationsId,headers",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "delete",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForStationId",
              "parameterContents": "\"[queryForId][Query for station id][StationName: {}]\",stationName",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "info",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForStationId",
              "parameterContents": "stationService.queryForId(stationName, headers)",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "ok",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "queryForStationId",
              "parameterContents": "stationName,headers",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "queryForId",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "\"[queryForIdBatch][Query stations for id batch][StationNameNumbers: {}]\",stationNameList.size()",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "info",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationNameList",
              "objectType": "List",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "size",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "stationService.queryForIdBatch(stationNameList, headers)",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "ok",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "stationNameList,headers",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "queryForIdBatch",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryById",
              "parameterContents": "\"[queryById][Query stations By Id][Id: {}]\",stationId",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "info",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryById",
              "parameterContents": "stationService.queryById(stationId, headers)",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "ok",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "queryById",
              "parameterContents": "stationId,headers",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "queryById",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForNameBatch",
              "parameterContents": "\"[queryByIdBatch][Query stations for name batch][StationIdNumbers: {}]\",stationIdList.size()",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "info",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationIdList",
              "objectType": "List",
              "calledFrom": "queryForNameBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "size",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryForNameBatch",
              "parameterContents": "stationService.queryByIdBatch(stationIdList, headers)",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "ok",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            },
            {
              "objectName": "stationService",
              "objectType": "StationService",
              "calledFrom": "queryForNameBatch",
              "parameterContents": "stationIdList,headers",
              "microserviceName": "ts-station-service",
              "className": "StationController",
              "name": "queryByIdBatch",
              "packageAndClassName": "fdse.microservice.controller.StationController"
            }
          ],
          "name": "StationController",
          "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "fdse.microservice.service",
          "implementedTypes": [
            "StationService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "className": "StationServiceImpl",
              "name": "exist",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "nameList",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "className": "StationServiceImpl",
              "name": "queryForIdBatch",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                },
                {
                  "type": "Station",
                  "annotations": [],
                  "name": "station",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "className": "StationServiceImpl",
              "name": "create",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationsId",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "className": "StationServiceImpl",
              "name": "delete",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
                }
              ],
              "className": "StationServiceImpl",
              "name": "query",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "type": "StationRepository",
              "name": "repository",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Station",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Create station error][Name not specify]\"",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "error",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "create",
              "parameterContents": "station.getName()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findByName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "create",
              "parameterContents": "station.getStayTime()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "setStayTime",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getStayTime",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "create",
              "parameterContents": "station",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "save",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Create station error][Already exists][StationId: {}]\",station.getId()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "error",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "exist",
              "parameterContents": "stationName",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findByName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "update",
              "parameterContents": "info.getId()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findById",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Station",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Station",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "update",
              "parameterContents": "\"[update][Update station error][Station not found][StationId: {}]\",info.getId()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "error",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Station",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Station",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "update",
              "parameterContents": "info.getName()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "setName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Station",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "update",
              "parameterContents": "info.getStayTime()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "setStayTime",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "Station",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getStayTime",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "update",
              "parameterContents": "station",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "save",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "delete",
              "parameterContents": "stationsId",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findById",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Station",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "Station",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "delete",
              "parameterContents": "station",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "delete",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[delete][Delete station error][Station not found][StationId: {}]\",stationsId",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "error",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findAll",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "stations",
              "objectType": "Station",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[query][Query stations warn][Find all stations: {}]\",\"No content\"",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "queryForId",
              "parameterContents": "stationName",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findByName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "queryForId",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForId",
              "parameterContents": "\"[queryForId][Find station id warn][Station not found][StationName: {}]\",stationName",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "nameList",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findByNames",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "stationMap",
              "objectType": "Map",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "s.getName(),s.getId()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Station",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "s",
              "objectType": "Station",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getId",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Map",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "name,stationMap.get(name)",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "put",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "stationMap",
              "objectType": "Map",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "name",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Map",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "\"[queryForIdBatch][Find station ids warn][Stations not found][StationNameNumber: {}]\",nameList.size()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "warn",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "nameList",
              "objectType": "List",
              "calledFrom": "queryForIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "size",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "queryById",
              "parameterContents": "stationId",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findById",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "queryById",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Station",
              "calledFrom": "queryById",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "queryById",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryById",
              "parameterContents": "\"[queryById][Find station name error][Station not found][StationId: {}]\",stationId",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "error",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "idList",
              "objectType": "List",
              "calledFrom": "queryByIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "size",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "StationRepository",
              "calledFrom": "queryByIdBatch",
              "parameterContents": "idList.get(i)",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "findById",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "idList",
              "objectType": "List",
              "calledFrom": "queryByIdBatch",
              "parameterContents": "i",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "stationOld",
              "objectType": "Station",
              "calledFrom": "queryByIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "stationOld",
              "objectType": "Station",
              "calledFrom": "queryByIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "get",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ArrayList",
              "calledFrom": "queryByIdBatch",
              "parameterContents": "station.getName()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "add",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "station",
              "objectType": "Station",
              "calledFrom": "queryByIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "getName",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "ArrayList",
              "calledFrom": "queryByIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryByIdBatch",
              "parameterContents": "\"[queryByIdBatch][Find station names error][Stations not found][StationIdNumber: {}]\",idList.size()",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "error",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            },
            {
              "objectName": "idList",
              "objectType": "List",
              "calledFrom": "queryByIdBatch",
              "parameterContents": "",
              "microserviceName": "ts-station-service",
              "className": "StationServiceImpl",
              "name": "size",
              "packageAndClassName": "fdse.microservice.service.StationServiceImpl"
            }
          ],
          "name": "StationServiceImpl",
          "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "fdse.microservice.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "fdse.microservice.repository.StationRepository"
                }
              ],
              "returnType": "Optional<Station>",
              "microserviceName": "ts-station-service",
              "annotations": [],
              "className": "StationRepository",
              "name": "findById",
              "packageAndClassName": "fdse.microservice.repository.StationRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "name",
                  "packageAndClassName": "fdse.microservice.repository.StationRepository"
                }
              ],
              "returnType": "Station",
              "microserviceName": "ts-station-service",
              "annotations": [],
              "className": "StationRepository",
              "name": "findByName",
              "packageAndClassName": "fdse.microservice.repository.StationRepository"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "names",
                  "packageAndClassName": "fdse.microservice.repository.StationRepository"
                }
              ],
              "returnType": "List<Station>",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "SELECT * from station where name in ?1"
                  },
                  "name": "Query",
                  "packageAndClassName": "fdse.microservice.repository.StationRepository"
                }
              ],
              "className": "StationRepository",
              "name": "findByNames",
              "packageAndClassName": "fdse.microservice.repository.StationRepository"
            },
            {
              "parameters": [],
              "returnType": "List<Station>",
              "microserviceName": "ts-station-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "fdse.microservice.repository.StationRepository"
                }
              ],
              "className": "StationRepository",
              "name": "findAll",
              "packageAndClassName": "fdse.microservice.repository.StationRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "fdse.microservice.repository.StationRepository"
            }
          ],
          "methodCalls": [],
          "name": "StationRepository",
          "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "fdse.microservice.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "name",
                  "packageAndClassName": "fdse.microservice.entity.Station"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-station-service",
              "annotations": [],
              "className": "Station",
              "name": "setName",
              "packageAndClassName": "fdse.microservice.entity.Station"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "fdse.microservice.entity.Station"
            },
            {
              "type": "int",
              "name": "stayTime",
              "packageAndClassName": "fdse.microservice.entity.Station"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "fdse.microservice.entity.Station"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "fdse.microservice.entity.Station"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "setName",
              "parameterContents": "Locale.ROOT",
              "microserviceName": "ts-station-service",
              "className": "Station",
              "name": "toLowerCase",
              "packageAndClassName": "fdse.microservice.entity.Station"
            },
            {
              "objectName": "name",
              "objectType": "String",
              "calledFrom": "setName",
              "parameterContents": "\" \",\"\"",
              "microserviceName": "ts-station-service",
              "className": "Station",
              "name": "replace",
              "packageAndClassName": "fdse.microservice.entity.Station"
            }
          ],
          "name": "Station",
          "path": "/ts-station-service/src/main/java/fdse/microservice/entity/Station.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-station-service",
              "artifactId": "ts-station-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-station-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-station-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${STATION_MYSQL_HOST:ts-station-mysql}:${STATION_MYSQL_PORT:3306}/${STATION_MYSQL_DATABASE:ts-station-mysql}?useSSL=false",
                "username": "${STATION_MYSQL_USER:root}",
                "password": "${STATION_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                }
              }
            },
            "server": {
              "port": 12345
            },
            "swagger": {
              "controllerPackage": "fdse.microservice"
            }
          },
          "name": "application.yml",
          "path": "/ts-station-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-train-service",
      "path": "/ts-train-service",
      "controllers": [
        {
          "packageName": "train.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/trainservice/trains",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "TrainType",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "trainType",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trains"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "update",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/api/v1/trainservice/trains/byNames",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "names",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trains/byNames"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "retrieveByName",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/api/v1/trainservice/trains/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/trains/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "home",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/api/v1/trainservice/trains/byName/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "name",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "value": "/trains/byName/{name}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "retrieveByName",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/api/v1/trainservice/trains",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trains"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "query",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/api/v1/trainservice/trains",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TrainType",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "trainType",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trains"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "create",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/api/v1/trainservice/trains/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trains/{id}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "retrieve",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "url": "/api/v1/trainservice/trains/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "id",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "train.controller.TrainController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trains/{id}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "train.controller.TrainController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "train.controller.TrainController"
                }
              ],
              "className": "TrainController",
              "name": "delete",
              "packageAndClassName": "train.controller.TrainController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "type": "TrainService",
              "name": "trainService",
              "packageAndClassName": "train.controller.TrainController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/trainservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "train.controller.TrainController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Create train][TrainTypeId: {}]\",trainType.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "info",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "getId",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "create",
              "parameterContents": "trainType,headers",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "create",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "create",
              "parameterContents": "new Response(1, \"create success\", null)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "create",
              "parameterContents": "new Response(0, \"train type already exist\", trainType)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "retrieve",
              "parameterContents": "\"[retrieve][Retrieve train][TrainTypeId: {}]\",id",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "info",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "retrieve",
              "parameterContents": "id,headers",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "retrieve",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "retrieve",
              "parameterContents": "new Response(0, \"here is no TrainType with the trainType id: \" + id, null)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "retrieve",
              "parameterContents": "new Response(1, \"success\", trainType)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "retrieveByName",
              "parameterContents": "\"[retrieveByName][Retrieve train][TrainTypeName: {}]\",name",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "info",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "retrieveByName",
              "parameterContents": "name,headers",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "retrieveByName",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "retrieveByName",
              "parameterContents": "new Response(0, \"here is no TrainType with the trainType name: \" + name, null)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "retrieveByName",
              "parameterContents": "new Response(1, \"success\", trainType)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "retrieveByName",
              "parameterContents": "\"[retrieveByNames][Retrieve train][TrainTypeNames: {}]\",names",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "info",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "retrieveByName",
              "parameterContents": "names,headers",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "retrieveByNames",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "retrieveByName",
              "parameterContents": "new Response(0, \"here is no TrainTypes with the trainType names: \" + names, null)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "retrieveByName",
              "parameterContents": "new Response(1, \"success\", trainTypes)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "update",
              "parameterContents": "\"[update][Update train][TrainTypeId: {}]\",trainType.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "info",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "getId",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "update",
              "parameterContents": "trainType,headers",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "update",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "update",
              "parameterContents": "new Response(1, \"update success\", isUpdateSuccess)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "update",
              "parameterContents": "new Response(0, \"there is no trainType with the trainType id\", isUpdateSuccess)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[delete][Delete train][TrainTypeId: {}]\",id",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "info",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "delete",
              "parameterContents": "id,headers",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "delete",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "delete",
              "parameterContents": "new Response(1, \"delete success\", isDeleteSuccess)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "delete",
              "parameterContents": "new Response(0, \"there is no train according to id\", null)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[query][Query train]\"",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "info",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainService",
              "objectType": "TrainService",
              "calledFrom": "query",
              "parameterContents": "headers",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "query",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "trainTypes",
              "objectType": "TrainType",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "isEmpty",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "new Response(1, \"success\", trainTypes)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "new Response(0, \"no content\", trainTypes)",
              "microserviceName": "ts-train-service",
              "className": "TrainController",
              "name": "ok",
              "packageAndClassName": "train.controller.TrainController"
            }
          ],
          "name": "TrainController",
          "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "train.service",
          "implementedTypes": [
            "TrainService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "className": "TrainServiceImpl",
              "name": "retrieve",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "names",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "returnType": "List<TrainType>",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "className": "TrainServiceImpl",
              "name": "retrieveByNames",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "returnType": "List<TrainType>",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "className": "TrainServiceImpl",
              "name": "query",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "className": "TrainServiceImpl",
              "name": "delete",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                },
                {
                  "type": "TrainType",
                  "annotations": [],
                  "name": "trainType",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "train.service.TrainServiceImpl"
                }
              ],
              "className": "TrainServiceImpl",
              "name": "create",
              "packageAndClassName": "train.service.TrainServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "TrainTypeRepository",
              "name": "repository",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "train.service.TrainServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "train.service.TrainServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getName",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Create train error][Train Type name not specified]\"",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "error",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "create",
              "parameterContents": "trainType.getName()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findByName",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getName",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getName",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "type",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "trainType.getAverageSpeed()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "setAverageSpeed",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "create",
              "parameterContents": "type",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "save",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Create train error][Train already exists][TrainTypeId: {}]\",trainType.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "error",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TrainTypeRepository",
              "calledFrom": "retrieve",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "retrieve",
              "parameterContents": "id",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "retrieve",
              "parameterContents": "\"[retrieve][Retrieve train error][Train not found][TrainTypeId: {}]\",id",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "error",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TrainTypeRepository",
              "calledFrom": "retrieve",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "get",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "retrieve",
              "parameterContents": "id",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "retrieveByName",
              "parameterContents": "name",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findByName",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "retrieveByName",
              "parameterContents": "\"[retrieveByName][RetrieveByName error][Train not found][TrainTypeName: {}]\",name",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "error",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "retrieveByNames",
              "parameterContents": "names",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findByNames",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "tt",
              "objectType": "TrainType",
              "calledFrom": "retrieveByNames",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "retrieveByNames",
              "parameterContents": "\"[retrieveByNames][RetrieveByNames error][Train not found][TrainTypeNames: {}]\",names",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "error",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "update",
              "parameterContents": "trainType.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getName",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "type",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "trainType.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "setId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "update",
              "parameterContents": "type",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "save",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "update",
              "parameterContents": "\"[update][Update train error][Train not found][TrainTypeId: {}]\",trainType.getId()",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "error",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "getId",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TrainTypeRepository",
              "calledFrom": "delete",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "delete",
              "parameterContents": "id",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "delete",
              "parameterContents": "id",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[delete][Delete train error][Train not found][TrainTypeId: {}]\",id",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "error",
              "packageAndClassName": "train.service.TrainServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TrainTypeRepository",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-train-service",
              "className": "TrainServiceImpl",
              "name": "findAll",
              "packageAndClassName": "train.service.TrainServiceImpl"
            }
          ],
          "name": "TrainServiceImpl",
          "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "train.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "name",
                  "packageAndClassName": "train.repository.TrainTypeRepository"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-train-service",
              "annotations": [],
              "className": "TrainTypeRepository",
              "name": "findByName",
              "packageAndClassName": "train.repository.TrainTypeRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "train.repository.TrainTypeRepository"
                }
              ],
              "returnType": "Optional<TrainType>",
              "microserviceName": "ts-train-service",
              "annotations": [],
              "className": "TrainTypeRepository",
              "name": "findById",
              "packageAndClassName": "train.repository.TrainTypeRepository"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "names",
                  "packageAndClassName": "train.repository.TrainTypeRepository"
                }
              ],
              "returnType": "List<TrainType>",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "SELECT * from train_type where name in ?1"
                  },
                  "name": "Query",
                  "packageAndClassName": "train.repository.TrainTypeRepository"
                }
              ],
              "className": "TrainTypeRepository",
              "name": "findByNames",
              "packageAndClassName": "train.repository.TrainTypeRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "train.repository.TrainTypeRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-train-service",
              "annotations": [],
              "className": "TrainTypeRepository",
              "name": "deleteById",
              "packageAndClassName": "train.repository.TrainTypeRepository"
            },
            {
              "parameters": [],
              "returnType": "List<TrainType>",
              "microserviceName": "ts-train-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "train.repository.TrainTypeRepository"
                }
              ],
              "className": "TrainTypeRepository",
              "name": "findAll",
              "packageAndClassName": "train.repository.TrainTypeRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "train.repository.TrainTypeRepository"
            }
          ],
          "methodCalls": [],
          "name": "TrainTypeRepository",
          "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "train.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "train.entity.TrainType"
            },
            {
              "type": "int",
              "name": "economyClass",
              "packageAndClassName": "train.entity.TrainType"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "train.entity.TrainType"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "train.entity.TrainType"
            }
          ],
          "methodCalls": [],
          "name": "TrainType",
          "path": "/ts-train-service/src/main/java/train/entity/TrainType.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-train-service",
              "artifactId": "ts-train-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-train-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-train-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${TRAIN_MYSQL_HOST:ts-train-mysql}:${TRAIN_MYSQL_PORT:3306}/${TRAIN_MYSQL_DATABASE:s-train-mysql}?useSSL=false",
                "username": "${TRAIN_MYSQL_USER:root}",
                "password": "${TRAIN_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "server": {
              "port": 14567
            },
            "swagger": {
              "controllerPackage": "train.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-train-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-travel-plan-service",
      "path": "/ts-travel-plan-service",
      "controllers": [
        {
          "packageName": "travelplan.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/travelplanservice/travelPlan/cheapest",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TripInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "queryInfo",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travelPlan/cheapest"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "className": "TravelPlanController",
              "name": "getByCheapest",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "url": "/api/v1/travelplanservice/travelPlan/quickest",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TripInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "queryInfo",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travelPlan/quickest"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "className": "TravelPlanController",
              "name": "getByQuickest",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "url": "/api/v1/travelplanservice/travelPlan/transferResult",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                },
                {
                  "type": "TransferTravelInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travelPlan/transferResult"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "className": "TravelPlanController",
              "name": "getTransferResult",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "url": "/api/v1/travelplanservice/travelPlan/minStation",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TripInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "queryInfo",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travelplan.controller.TravelPlanController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/travelPlan/minStation"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "className": "TravelPlanController",
              "name": "getByMinStation",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "url": "/api/v1/travelplanservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travelplan.controller.TravelPlanController"
                }
              ],
              "className": "TravelPlanController",
              "name": "home",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "type": "TravelPlanService",
              "name": "travelPlanService",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "attributes": {
                "default": "api/v1/travelplanservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTransferResult",
              "parameterContents": "\"[getTransferSearch][Search Transit][start: {},end: {}]\",info.getStartStation(),info.getEndStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "info",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelInfo",
              "calledFrom": "getTransferResult",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelInfo",
              "calledFrom": "getTransferResult",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTransferResult",
              "parameterContents": "travelPlanService.getTransferSearch(info, headers)",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "ok",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "travelPlanService",
              "objectType": "TravelPlanService",
              "calledFrom": "getTransferResult",
              "parameterContents": "info,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getTransferSearch",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getByCheapest",
              "parameterContents": "\"[getCheapest][Search Cheapest][start: {},end: {},time: {}]\",queryInfo.getStartPlace(),queryInfo.getEndPlace(),queryInfo.getDepartureTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "info",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "getByCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getStartPlace",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "getByCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getEndPlace",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "getByCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getByCheapest",
              "parameterContents": "travelPlanService.getCheapest(queryInfo, headers)",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "ok",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "travelPlanService",
              "objectType": "TravelPlanService",
              "calledFrom": "getByCheapest",
              "parameterContents": "queryInfo,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getCheapest",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getByQuickest",
              "parameterContents": "\"[getQuickest][Search Quickest][start: {},end: {},time: {}]\",queryInfo.getStartPlace(),queryInfo.getEndPlace(),queryInfo.getDepartureTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "info",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "getByQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getStartPlace",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "getByQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getEndPlace",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "getByQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getByQuickest",
              "parameterContents": "travelPlanService.getQuickest(queryInfo, headers)",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "ok",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "travelPlanService",
              "objectType": "TravelPlanService",
              "calledFrom": "getByQuickest",
              "parameterContents": "queryInfo,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getQuickest",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getByMinStation",
              "parameterContents": "\"[getMinStation][Search Min Station][start: {},end: {},time: {}]\",queryInfo.getStartPlace(),queryInfo.getEndPlace(),queryInfo.getDepartureTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "info",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "getByMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getStartPlace",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "getByMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getEndPlace",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "queryInfo",
              "objectType": "TripInfo",
              "calledFrom": "getByMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getByMinStation",
              "parameterContents": "travelPlanService.getMinStation(queryInfo, headers)",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "ok",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            },
            {
              "objectName": "travelPlanService",
              "objectType": "TravelPlanService",
              "calledFrom": "getByMinStation",
              "parameterContents": "queryInfo,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanController",
              "name": "getMinStation",
              "packageAndClassName": "travelplan.controller.TravelPlanController"
            }
          ],
          "name": "TravelPlanController",
          "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "travelplan.service",
          "implementedTypes": [
            "TravelPlanService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainTypeName",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "queryTrainTypeByName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stations",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "int",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "TransferTravelInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "className": "TravelPlanServiceImpl",
              "name": "getTransferSearch",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "TripInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "className": "TravelPlanServiceImpl",
              "name": "getCheapest",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "TripInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "ArrayList<TripResponse>",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromNormal",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "RoutePlanInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "ArrayList<RoutePlanResultUnit>",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "getRoutePlanResultCheapest",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                },
                {
                  "type": "TripInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
                }
              ],
              "returnType": "List<TripResponse>",
              "microserviceName": "ts-travel-plan-service",
              "annotations": [],
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromHighSpeed",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "queryInfoFirstSection",
              "objectType": "TripInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "StringUtils.Date2String(info.getTravelDate())",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "queryInfoFirstSection",
              "objectType": "TripInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getStartStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "queryInfoFirstSection",
              "objectType": "TripInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getViaStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getViaStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTransferSearch",
              "parameterContents": "queryInfoFirstSection,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromHighSpeed",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTransferSearch",
              "parameterContents": "queryInfoFirstSection,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromNormal",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "queryInfoSecondSectoin",
              "objectType": "TripInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "StringUtils.Date2String(info.getTravelDate())",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getTravelDate()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "queryInfoSecondSectoin",
              "objectType": "TripInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getViaStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getViaStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "queryInfoSecondSectoin",
              "objectType": "TripInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "info.getEndStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TransferTravelInfo",
              "calledFrom": "getTransferSearch",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTransferSearch",
              "parameterContents": "queryInfoSecondSectoin,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromHighSpeed",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTransferSearch",
              "parameterContents": "queryInfoSecondSectoin,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "tripsFromNormal",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "firstSection",
              "objectType": "TripResponse",
              "calledFrom": "getTransferSearch",
              "parameterContents": "firstSectionFromHighSpeed",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "firstSection",
              "objectType": "TripResponse",
              "calledFrom": "getTransferSearch",
              "parameterContents": "firstSectionFromNormal",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "secondSection",
              "objectType": "TripResponse",
              "calledFrom": "getTransferSearch",
              "parameterContents": "secondSectionFromHighSpeed",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "secondSection",
              "objectType": "TripResponse",
              "calledFrom": "getTransferSearch",
              "parameterContents": "secondSectionFromNormal",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "addAll",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TransferTravelResult",
              "calledFrom": "getTransferSearch",
              "parameterContents": "firstSection",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setFirstSectionResult",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "TransferTravelResult",
              "calledFrom": "getTransferSearch",
              "parameterContents": "secondSection",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setSecondSectionResult",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "5",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNum",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "info.getStartPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "info.getEndPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "info.getDepartureTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getCheapest",
              "parameterContents": "routePlanInfo,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRoutePlanResultCheapest",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "size",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "i",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "get",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getTripId()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getEndStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getTrainTypeName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getStartStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "stops",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getPriceForFirstClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getPriceForSecondClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getStartTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getEndTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getCheapest",
              "parameterContents": "tempUnit.getTrainTypeName(),headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "queryTrainTypeByName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getCheapest",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getStartStation(),tempUnit.getEndStation(),SeatClass.FIRSTCLASS.getCode(),firstClassTotalNum,tempUnit.getStopStations(),headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getCheapest",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getStartStation(),tempUnit.getEndStation(),SeatClass.SECONDCLASS.getCode(),secondClassTotalNum,tempUnit.getStopStations(),headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "first",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketFirstClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "second",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketSecondClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "lists",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getCheapest",
              "parameterContents": "newUnit",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "add",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getCheapest",
              "parameterContents": "\"[getCheapest][Get cheapest trip warn][Route Plan Result Units: {}]\",\"No Content\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "warn",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "5",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNum",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "info.getStartPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "info.getEndPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "info.getDepartureTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getQuickest",
              "parameterContents": "routePlanInfo,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRoutePlanResultQuickest",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "size",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "i",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "get",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getTripId()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getTrainTypeName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getEndStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getStartStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "stops",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getPriceForFirstClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getPriceForSecondClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getStartTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getEndTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getQuickest",
              "parameterContents": "tempUnit.getTrainTypeName(),headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "queryTrainTypeByName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getQuickest",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getStartStation(),tempUnit.getEndStation(),SeatClass.FIRSTCLASS.getCode(),firstClassTotalNum,tempUnit.getStopStations(),headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getQuickest",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getStartStation(),tempUnit.getEndStation(),SeatClass.SECONDCLASS.getCode(),secondClassTotalNum,tempUnit.getStopStations(),headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "first",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketFirstClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "second",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketSecondClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "lists",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getQuickest",
              "parameterContents": "newUnit",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "add",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getQuickest",
              "parameterContents": "\"[getQuickest][Get quickest trip warn][Route Plan Result Units: {}]\",\"No Content\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "warn",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "5",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNum",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "info.getStartPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "info.getEndPlace()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanInfo",
              "objectType": "RoutePlanInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "info.getDepartureTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getMinStation",
              "parameterContents": "routePlanInfo,headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRoutePlanResultMinStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "size",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "routePlanResultUnits",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "i",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "get",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getTripId()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getTrainTypeName()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTrainTypeId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getStartStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getEndStation()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "stops",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getPriceForFirstClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForFirstClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getPriceForSecondClassSeat()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getPriceForSecondClassSeat",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getEndTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getStartTime()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getMinStation",
              "parameterContents": "tempUnit.getTrainTypeName(),headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "queryTrainTypeByName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getMinStation",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getStartStation(),tempUnit.getEndStation(),SeatClass.FIRSTCLASS.getCode(),firstClassTotalNum,tempUnit.getStopStations(),headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getMinStation",
              "parameterContents": "info.getDepartureTime(),tempUnit.getTripId(),tempUnit.getStartStation(),tempUnit.getEndStation(),SeatClass.SECONDCLASS.getCode(),secondClassTotalNum,tempUnit.getStopStations(),headers",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getEndStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "tempUnit",
              "objectType": "RoutePlanResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getStopStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "first",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketFirstClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "newUnit",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "second",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setNumberOfRestTicketSecondClass",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "lists",
              "objectType": "TravelAdvanceResultUnit",
              "calledFrom": "getMinStation",
              "parameterContents": "newUnit",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "add",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getMinStation",
              "parameterContents": "\"[getMinStation][Get min stations trip warn][Route Plan Result Units: {}]\",\"No Content\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "warn",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "startStationName",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "endStationName",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "trainNumber",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "travelDate",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "seatType",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "stations",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setStations",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "totalNum",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "setTotalNum",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"[getRestTicketNumber][Seat Request][Seat Request is: {}]\",seatRequest.toString()",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "info",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "toString",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"ts-seat-service\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/api/v1/seatservice/seats/left_tickets",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "seat_service_url + \"/api/v1/seatservice/seats/left_tickets\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<Integer>>() {\r\n}",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRoutePlanResultCheapest",
              "parameterContents": "\"ts-route-plan-service\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/api/v1/routeplanservice/routePlan/cheapestRoute",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRoutePlanResultCheapest",
              "parameterContents": "route_plan_service_url + \"/api/v1/routeplanservice/routePlan/cheapestRoute\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<ArrayList<RoutePlanResultUnit>>>() {\r\n}",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getRoutePlanResultCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRoutePlanResultCheapest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRoutePlanResultQuickest",
              "parameterContents": "\"ts-route-plan-service\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/api/v1/routeplanservice/routePlan/quickestRoute",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRoutePlanResultQuickest",
              "parameterContents": "route_plan_service_url + \"/api/v1/routeplanservice/routePlan/quickestRoute\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<ArrayList<RoutePlanResultUnit>>>() {\r\n}",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getRoutePlanResultQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRoutePlanResultQuickest",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRoutePlanResultMinStation",
              "parameterContents": "\"ts-route-plan-service\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/api/v1/routeplanservice/routePlan/minStopStations",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRoutePlanResultMinStation",
              "parameterContents": "route_plan_service_url + \"/api/v1/routeplanservice/routePlan/minStopStations\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<ArrayList<RoutePlanResultUnit>>>() {\r\n}",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getRoutePlanResultMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRoutePlanResultMinStation",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "tripsFromHighSpeed",
              "parameterContents": "\"ts-travel-service\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/api/v1/travelservice/trips/left",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "tripsFromHighSpeed",
              "parameterContents": "travel_service_url + \"/api/v1/travelservice/trips/left\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<List<TripResponse>>>() {\r\n}",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "tripsFromHighSpeed",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "tripsFromHighSpeed",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "tripsFromNormal",
              "parameterContents": "\"ts-travel2-service\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/api/v1/travel2service/trips/left",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "tripsFromNormal",
              "parameterContents": "travel2_service_url + \"/api/v1/travel2service/trips/left\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<ArrayList<TripResponse>>>() {\r\n}",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "tripsFromNormal",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "tripsFromNormal",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "url": "/api/v1/trainservice/trains/byName/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "train_service_url + \"/api/v1/trainservice/trains/byName/\" + trainTypeName,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "response.getData(),TrainType.class",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "queryTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-travel-plan-service",
              "className": "TravelPlanServiceImpl",
              "name": "getData",
              "packageAndClassName": "travelplan.service.TravelPlanServiceImpl"
            }
          ],
          "name": "TravelPlanServiceImpl",
          "path": "/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-travel-plan-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": {
                  "groupId": "org.services",
                  "artifactId": "ts-common",
                  "version": "0.1.0"
                }
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-travel-plan-service",
              "artifactId": "ts-travel-plan-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-travel-plan-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 14322
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-travel-plan-service"
              }
            },
            "swagger": {
              "controllerPackage": "travelplan.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-travel-plan-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-travel-service",
      "path": "/ts-travel-service",
      "controllers": [
        {
          "packageName": "travel.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/travelservice/trips/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trips/{tripId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "deleteTrip",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/trips/left",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TripInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trips/left"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "queryInfo",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/trips/routes",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ArrayList<String>",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "routeIds",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trips/routes"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "getTripsByRouteId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "home",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/trips/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trips/{tripId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "retrieve",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/trips",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/trips"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "queryAll",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/trips/left_parallel",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TripInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/trips/left_parallel"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "queryInfoInparallel",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/admin_trip",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/admin_trip"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "adminQueryAll",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/trip_detail",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "type": "TripAllDetailInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "gtdi",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trip_detail"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/routes/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/routes/{tripId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/trips",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "TravelInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/trips"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "updateTrip",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/train_types/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/train_types/{tripId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "getTrainTypeByTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "url": "/api/v1/travelservice/trips",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "TravelInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "routeIds",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel.controller.TravelController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "returnType": "HttpEntity<?>",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel.controller.TravelController"
                },
                {
                  "attributes": {
                    "value": "/trips"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travel.controller.TravelController"
                }
              ],
              "className": "TravelController",
              "name": "createTrip",
              "packageAndClassName": "travel.controller.TravelController"
            }
          ],
          "fields": [
            {
              "type": "TravelService",
              "name": "travelService",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "travel.controller.TravelController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "attributes": {
                "default": "/api/v1/travelservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "travel.controller.TravelController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"[getTrainTypeByTripId][Get train Type by Trip id][TripId: {}]\",tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "travelService.getTrainTypeByTripId(tripId, headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "tripId,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getTrainTypeByTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[getRouteByTripId][Get Route By Trip ID][TripId: {}]\",tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "travelService.getRouteByTripId(tripId, headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "tripId,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripsByRouteId",
              "parameterContents": "\"[getTripByRoute][Get Trips by Route ids][RouteIds: {}]\",routeIds.size()",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "routeIds",
              "objectType": "ArrayList",
              "calledFrom": "getTripsByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "size",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripsByRouteId",
              "parameterContents": "travelService.getTripByRoute(routeIds, headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "getTripsByRouteId",
              "parameterContents": "routeIds,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getTripByRoute",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createTrip",
              "parameterContents": "\"[create][Create trip][TripId: {}]\",routeIds.getTripId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "routeIds",
              "objectType": "TravelInfo",
              "calledFrom": "createTrip",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "createTrip",
              "parameterContents": "routeIds,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "create",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "retrieve",
              "parameterContents": "\"[retrieve][Retrieve trip][TripId: {}]\",tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "retrieve",
              "parameterContents": "travelService.retrieve(tripId, headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "retrieve",
              "parameterContents": "tripId,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "retrieve",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateTrip",
              "parameterContents": "\"[update][Update trip][TripId: {}]\",info.getTripId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "updateTrip",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateTrip",
              "parameterContents": "travelService.update(info, headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "updateTrip",
              "parameterContents": "info,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "update",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteTrip",
              "parameterContents": "\"[delete][Delete trip][TripId: {}]\",tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteTrip",
              "parameterContents": "travelService.delete(tripId, headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "deleteTrip",
              "parameterContents": "tripId,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "delete",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getStartPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "length",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getStartPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getEndPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "length",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getEndPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getDepartureTime",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryInfo",
              "parameterContents": "\"[query][Travel Query Fail][Something null]\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryInfo",
              "parameterContents": "errorList",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryInfo",
              "parameterContents": "\"[query][Query TripResponse]\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryInfo",
              "parameterContents": "travelService.queryByBatch(info, headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "queryInfo",
              "parameterContents": "info,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "queryByBatch",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getStartPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "TripInfo",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "length",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getStartPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getEndPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "TripInfo",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "length",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getEndPlace",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getDepartureTime",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "\"[queryInParallel][Travel Query Fail][Something null]\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "errorList",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "\"[queryInParallel][Query TripResponse]\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "travelService.queryInParallel(info, headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "queryInfoInparallel",
              "parameterContents": "info,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "queryInParallel",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"[getTripAllDetailInfo][Get trip detail][TripId: {}]\",gtdi.getTripId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getTripId",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "travelService.getTripAllDetailInfo(gtdi, headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "gtdi,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAll",
              "parameterContents": "\"[queryAll][Query all trips]\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryAll",
              "parameterContents": "travelService.queryAll(headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "queryAll",
              "parameterContents": "headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "queryAll",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "adminQueryAll",
              "parameterContents": "\"[adminQueryAll][Admin query all trips]\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "info",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "adminQueryAll",
              "parameterContents": "travelService.adminQueryAll(headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "ok",
              "packageAndClassName": "travel.controller.TravelController"
            },
            {
              "objectName": "travelService",
              "objectType": "TravelService",
              "calledFrom": "adminQueryAll",
              "parameterContents": "headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelController",
              "name": "adminQueryAll",
              "packageAndClassName": "travel.controller.TravelController"
            }
          ],
          "name": "TravelController",
          "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "travel.service",
          "implementedTypes": [
            "TravelService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "afterToday",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "ArrayList<String>",
                  "annotations": [],
                  "name": "routeIds",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "getTripByRoute",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainTypeName",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getTrainTypeByName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "TravelInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "create",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "TripAllDetailInfo",
                  "annotations": [],
                  "name": "gtdi",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [],
              "returnType": "TripResponse",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "call",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "Trip",
                  "annotations": [],
                  "name": "trip",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "startPlaceName",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "TravelResult",
                  "annotations": [],
                  "name": "tr",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "TripResponse",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "setResponse",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "queryAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stationList",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "int",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "List<Trip>",
                  "annotations": [],
                  "name": "trips",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "startPlaceName",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "List<TripResponse>",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getTicketsByBatch",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "TripInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "query",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "Trip",
                  "annotations": [],
                  "name": "trip",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "Route",
                  "annotations": [],
                  "name": "route1",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "startPlaceName",
                  "packageAndClassName": "travel.service.TravelServiceImpl"
                }
              ],
              "returnType": "TripResponse",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "type": "HttpHeaders",
              "name": "headers",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "type": "ExecutorService",
              "name": "executorService",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "type": "Trip",
              "name": "tempTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "type": "TripRepository",
              "name": "repository",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "type": "TripInfo",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "create",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartStationName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStationsName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTerminalStationName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "create",
              "parameterContents": "info.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "create",
              "parameterContents": "trip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "save",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "ti",
              "objectType": "TripId",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Create trip error][Trip already exists][TripId: {}]\",info.getTripId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tripId",
              "objectType": "String",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "length",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "tripId1",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "trip.getRouteId(),headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[getRouteByTripId][Get route by Trip id error][Trip not found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[getRouteByTripId][Get route by Trip id error][Route not found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "tripId1",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "trip.getTrainTypeName(),headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeByName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"[getTrainTypeByTripId][Get Train Type by Trip id error][Trip not found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"[getTrainTypeByTripId][Get Train Type by Trip id error][Train Type not found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripByRoute",
              "parameterContents": "routeId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tripList",
              "objectType": "Trip",
              "calledFrom": "getTripByRoute",
              "parameterContents": "tempTripList",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tripList",
              "objectType": "Trip",
              "calledFrom": "getTripByRoute",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripByRoute",
              "parameterContents": "\"[getTripByRoute][Get trips by routes warn][Trip list][{}]\",\"No content\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "retrieve",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "retrieve",
              "parameterContents": "\"[retrieve][Retrieve trip error][Trip not found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "update",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getTrainTypeName()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartStationName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getStartStationName()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartStationName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartStationName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getStationsName()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStationsName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStationsName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getTerminalStationName()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTerminalStationName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTerminalStationName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getStartTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getEndTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "update",
              "parameterContents": "t",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "save",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "ti",
              "objectType": "TripId",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "update",
              "parameterContents": "\"[update][Update trip error][Trip not found][TripId: {}]\",info.getTripId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "delete",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "delete",
              "parameterContents": "ti",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "deleteByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[delete][Delete trip error][Trip not found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "tempTrip,null,startPlaceName,endPlaceName,info.getDepartureTime(),headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[query][Query trip error][Tickets not found][start: {},end: {},time: {}]\",startPlaceName,endPlaceName,info.getDepartureTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "TripResponse",
              "calledFrom": "query",
              "parameterContents": "response",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "queryByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryByBatch",
              "parameterContents": "allTripList,startPlaceName,endPlaceName,info.getDepartureTime(),headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTicketsByBatch",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "call",
              "parameterContents": "\"[call][Start to query][tripId: {}, routeId: {}] \",tempTrip.getTripId().toString(),tempTrip.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "debug",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempTrip",
              "objectType": "Trip",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempTrip",
              "objectType": "Trip",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "call",
              "parameterContents": "tempTrip,null,startPlaceName,endPlaceName,info.getDepartureTime(),headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "call",
              "parameterContents": "\"[call][Query trip error][Tickets not found][tripId: {}, routeId: {}, start: {}, end: {},time: {}]\",tempTrip.getTripId().toString(),tempTrip.getRouteId(),startPlaceName,endPlaceName,info.getDepartureTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempTrip",
              "objectType": "Trip",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempTrip",
              "objectType": "Trip",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "call",
              "parameterContents": "\"[call][Query trip success][tripId: {}, routeId: {}] \",tempTrip.getTripId().toString(),tempTrip.getRouteId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempTrip",
              "objectType": "Trip",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tempTrip",
              "objectType": "Trip",
              "calledFrom": "call",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInParallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryInParallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "queryInParallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "executorService",
              "objectType": "ExecutorService",
              "calledFrom": "queryInParallel",
              "parameterContents": "callable",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "submit",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "futureList",
              "objectType": "TripResponse",
              "calledFrom": "queryInParallel",
              "parameterContents": "future",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "future",
              "objectType": "TripResponse",
              "calledFrom": "queryInParallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "TripResponse",
              "calledFrom": "queryInParallel",
              "parameterContents": "response",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryInParallel",
              "parameterContents": "\"[queryInParallel][Query error]\" + e.toString()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "queryInParallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "TripResponse",
              "calledFrom": "queryInParallel",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"[getTripAllDetailInfo][TripId: {}]\",gtdi.getTripId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "debug",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "new TripId(gtdi.getTripId())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"[getTripAllDetailInfo][Get trip detail error][Trip not found][TripId: {}]\",gtdi.getTripId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTo",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "trip,null,startPlaceName,endPlaceName,gtdi.getTravelDate(),headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"[getTripAllDetailInfo][Get trip detail error][Tickets not found][start: {},end: {},time: {}]\",startPlaceName,endPlaceName,gtdi.getTravelDate()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "tripResponse",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "repository.findByTripId(new TripId(gtdi.getTripId()))",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "new TripId(gtdi.getTripId())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "afterToday",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "\"[getTickets][depaturetime not vailid][departuretime: {}]\",departureTime",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "trip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "startPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "infos",
              "objectType": "Travel",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "query",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tripMap",
              "objectType": "Trip",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "trip.getTripId().toString(),trip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "put",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "\"[getTicketsByBatch][before get basic][trips: {}]\",trips",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "\"ts-basic-service\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/api/v1/basicservice/basic/travels",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "basic_service_url + \"/api/v1/basicservice/basic/travels\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "\"[getTicketsByBatch][Ts-basic-service response status is 0][response is: {}]\",r",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "mapper",
              "objectType": "ObjectMapper",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "JsonUtils.object2Json(r.getData()),new TypeReference<Map<String, TravelResult>>() {\r\n}",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "readValue",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "r.getData()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "object2Json",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "\"[getTicketsByBatch][Ts-basic-service convert data failed][Fail msg: {}]\",e.getMessage()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trMap",
              "objectType": "TravelResult",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "entrySet",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trEntry",
              "objectType": "TravelResult",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getKey",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trEntry",
              "objectType": "TravelResult",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getValue",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tripMap",
              "objectType": "Trip",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "tripNumber",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "trip,tr,startPlaceName,endPlaceName,departureTime,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setResponse",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "responses",
              "objectType": "TripResponse",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "response",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "afterToday",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTickets",
              "parameterContents": "\"[getTickets][depaturetime not vailid][departuretime: {}]\",departureTime",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTickets",
              "parameterContents": "trip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTickets",
              "parameterContents": "startPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTickets",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTickets",
              "parameterContents": "\"[getTickets][before get basic][trip: {}]\",trip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "\"ts-basic-service\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/api/v1/basicservice/basic/travel",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTickets",
              "parameterContents": "basic_service_url + \"/api/v1/basicservice/basic/travel\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTickets",
              "parameterContents": "\"[getTickets][Ts-basic-service response status is 0][response is: {}]\",r",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "getTickets",
              "parameterContents": "re.getBody().getData(),TravelResult.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "trip,resultForTravel,startPlaceName,endPlaceName,departureTime,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setResponse",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "50",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setConfortClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "50",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEconomyClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "setResponse",
              "parameterContents": "departureTime,trip.getTripId().toString(),startPlaceName,endPlaceName,SeatClass.FIRSTCLASS.getCode(),firstClassTotalNum,stationList,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "setResponse",
              "parameterContents": "departureTime,trip.getTripId().toString(),startPlaceName,endPlaceName,SeatClass.SECONDCLASS.getCode(),secondClassTotalNum,stationList,headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "first",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setConfortClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "second",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEconomyClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "startPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTerminalStation",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "startPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "indexStart",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "0",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "indexEnd",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "0",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "StringUtils.String2Date(trip.getStartTime())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setResponse",
              "parameterContents": "trip.getStartTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "Calendar.MINUTE,minutesStart",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "StringUtils.Date2String(calendarStart.getTime())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setResponse",
              "parameterContents": "calendarStart.getTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "setResponse",
              "parameterContents": "\"[getTickets][Calculate distance][calculate time：{}  time: {}]\",minutesStart,calendarStart.getTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "StringUtils.String2Date(trip.getStartTime())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setResponse",
              "parameterContents": "trip.getStartTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "Calendar.MINUTE,minutesEnd",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "StringUtils.Date2String(calendarEnd.getTime())",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setResponse",
              "parameterContents": "calendarEnd.getTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "setResponse",
              "parameterContents": "\"[getTickets][Calculate distance][calculate time：{}  time: {}]\",minutesEnd,calendarEnd.getTime()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "trip.getTripId()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "trip.getTrainTypeName()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrainTypeName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "tr.getPrices().get(\"confortClass\")",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setPriceForConfortClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "\"confortClass\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "tr.getPrices().get(\"economyClass\")",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setPriceForEconomyClass",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "\"economyClass\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "tripList",
              "objectType": "Trip",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAll",
              "parameterContents": "\"[queryAll][Query all trips:][{}]\",\"tripList\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAll",
              "parameterContents": "\"[queryAll][Query all trips warn][{}]\",\"No Content\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "today",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "StringUtils.String2Date(date)",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "afterToday",
              "parameterContents": "date",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "afterToday",
              "parameterContents": "\"[today date][y: {}][m:{}][d: {}]\",calDateA.get(Calendar.YEAR),calDateA.get(Calendar.MONTH),calDateA.get(Calendar.DATE)",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.DATE",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "afterToday",
              "parameterContents": "\"[departrue date][y: {}][m:{}][d: {}]\",calDateB.get(Calendar.YEAR),calDateB.get(Calendar.MONTH),calDateB.get(Calendar.DATE)",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.DATE",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTrainTypeByName",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/api/v1/trainservice/trains/byName/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTrainTypeByName",
              "parameterContents": "train_service_url + \"/api/v1/trainservice/trains/byName/\" + trainTypeName,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<TrainType>>() {\r\n}",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id][Route ID：{}]\",routeId",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes/\" + routeId,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id][Routes Response is : {}]\",routeRes.toString()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "routeRes",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "routeRes",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "routeRes.getData(),Route.class",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "routeRes",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id][Route is: {}]\",route1.toString()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "route1",
              "objectType": "Route",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "endStationName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "startStationName",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "trainNumber",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "travelDate",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "seatType",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "totalNum",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTotalNum",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "stationList",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setStations",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"[getRestTicketNumber][Seat request][request: {}]\",seatRequest.toString()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"ts-seat-service\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "url": "/api/v1/seatservice/seats/left_tickets",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "seat_service_url + \"/api/v1/seatservice/seats/left_tickets\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<Integer>>() {\r\n}",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"[getRestTicketNumber][Get Rest tickets num][num is: {}]\",re.getBody().toString()",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "getRouteByRouteId(trip.getRouteId(), headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip.getRouteId(),headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "getTrainTypeByName(trip.getTrainTypeName(), headers)",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip.getTrainTypeName(),headers",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeByName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrips",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "adminTrip",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrips",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "adminQueryAll",
              "parameterContents": "\"[adminQueryAll][Admin query all trips warn][{}]\",\"No Content\"",
              "microserviceName": "ts-travel-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel.service.TravelServiceImpl"
            }
          ],
          "name": "TravelServiceImpl",
          "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "travel.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "TripId",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "travel.repository.TripRepository"
                }
              ],
              "returnType": "Trip",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TripRepository",
              "name": "findByTripId",
              "packageAndClassName": "travel.repository.TripRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "travel.repository.TripRepository"
                }
              ],
              "returnType": "ArrayList<Trip>",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TripRepository",
              "name": "findByRouteId",
              "packageAndClassName": "travel.repository.TripRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Trip>",
              "microserviceName": "ts-travel-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel.repository.TripRepository"
                }
              ],
              "className": "TripRepository",
              "name": "findAll",
              "packageAndClassName": "travel.repository.TripRepository"
            },
            {
              "parameters": [
                {
                  "type": "TripId",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "travel.repository.TripRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-travel-service",
              "annotations": [],
              "className": "TripRepository",
              "name": "deleteByTripId",
              "packageAndClassName": "travel.repository.TripRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "travel.repository.TripRepository"
            }
          ],
          "methodCalls": [],
          "name": "TripRepository",
          "path": "/ts-travel-service/src/main/java/travel/repository/TripRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "travel.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "TripId",
              "name": "tripId",
              "packageAndClassName": "travel.entity.Trip"
            },
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "travel.entity.Trip"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "travel.entity.Trip"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "travel.entity.Trip"
            }
          ],
          "methodCalls": [],
          "name": "Trip",
          "path": "/ts-travel-service/src/main/java/travel/entity/Trip.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-travel-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "scope": "runtime",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "org.apache.skywalking",
                    "artifactId": "apm-toolkit-trace",
                    "version": "8.6.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-travel-service",
              "artifactId": "ts-travel-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-travel-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 12346
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-travel-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${TRAVEL_MYSQL_HOST:ts-travel-mysql}:${TRAVEL_MYSQL_PORT:3306}/${TRAVEL_MYSQL_DATABASE:ts-travel-mysql}?useSSL=false",
                "username": "${TRAVEL_MYSQL_USER:root}",
                "password": "${TRAVEL_MYSQL_PASSWORD:root}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "swagger": {
              "controllerPackage": "travel.controller"
            },
            "train-service": {
              "url": "http://${TRAIN_SERVICE_HOST:ts-train-service}:${TRAIN_SERVICE_PORT:14567}"
            },
            "order-service": {
              "url": "http://${ORDER_SERVICE_HOST:ts-order-service}:${ORDER_SERVICE_PORT:12031}"
            },
            "route-service": {
              "url": "http://${ROUTE_SERVICE_HOST:ts-route-service}:${ROUTE_SERVICE_PORT:11178}"
            },
            "basic-service": {
              "url": "http://${BASIC_SERVICE_HOST:ts-basic-service}:${BASIC_SERVICE_PORT:15680}"
            },
            "seat-service": {
              "url": "http://${SEAT_SERVICE_HOST:ts-seat-service}:${SEAT_SERVICE_PORT:18898}"
            }
          },
          "name": "application.yml",
          "path": "/ts-travel-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-travel2-service",
      "path": "/ts-travel2-service",
      "controllers": [
        {
          "packageName": "travel2.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/travel2service/trips",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "value": "/trips"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "queryAll",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/trips/routes",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "ArrayList<String>",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "routeIds",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trips/routes"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "getTripsByRouteId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/trips/left",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "edu.fudan.common.entity.TripInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trips/left"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "queryInfo",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/train_types/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/train_types/{tripId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "getTrainTypeByTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/trips",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "edu.fudan.common.entity.TravelInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "info",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "value": "/trips"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "updateTrip",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/trip_detail",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "edu.fudan.common.entity.TripAllDetailInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "gtdi",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trip_detail"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/trips/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trips/{tripId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "deleteTrip",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/trips",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "edu.fudan.common.entity.TravelInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "routeIds",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity<?>",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "value": "/trips"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "createTrip",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/admin_trip",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "value": "/admin_trip"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "adminQueryAll",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/welcome",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "home",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/trips/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/trips/{tripId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "retrieve",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "url": "/api/v1/travel2service/routes/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "travel2.controller.Travel2Controller"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/routes/{tripId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "travel2.controller.Travel2Controller"
                }
              ],
              "className": "Travel2Controller",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            }
          ],
          "fields": [
            {
              "type": "TravelService",
              "name": "service",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/travel2service"
              },
              "name": "RequestMapping",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"[getTrainTypeByTripId][Get train by Trip id][TripId: {}]\",tripId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "service.getTrainTypeByTripId(tripId, headers)",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "tripId,headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getTrainTypeByTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[getRouteByTripId][Get Route By Trip ID][TripId: {}]\",tripId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "service.getRouteByTripId(tripId, headers)",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "tripId,headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripsByRouteId",
              "parameterContents": "\"[getTripByRoute][Get trips by Route id][RouteIdNumber: {}]\",routeIds.size()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "routeIds",
              "objectType": "ArrayList",
              "calledFrom": "getTripsByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "size",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripsByRouteId",
              "parameterContents": "service.getTripByRoute(routeIds, headers)",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "getTripsByRouteId",
              "parameterContents": "routeIds,headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getTripByRoute",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createTrip",
              "parameterContents": "\"[create][Create trip][TripId: {}]\",routeIds.getTripId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "routeIds",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "createTrip",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "createTrip",
              "parameterContents": "routeIds,headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "create",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "retrieve",
              "parameterContents": "\"[retrieve][Retrieve trip][TripId: {}]\",tripId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "retrieve",
              "parameterContents": "service.retrieve(tripId, headers)",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "retrieve",
              "parameterContents": "tripId,headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "retrieve",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateTrip",
              "parameterContents": "\"[update][Update trip][TripId: {}]\",info.getTripId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "updateTrip",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateTrip",
              "parameterContents": "service.update(info, headers)",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "updateTrip",
              "parameterContents": "info,headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "update",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteTrip",
              "parameterContents": "\"[delete][Delete trip][TripId: {}]\",tripId",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteTrip",
              "parameterContents": "service.delete(tripId, headers)",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "deleteTrip",
              "parameterContents": "tripId,headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "delete",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getStartPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "edu.fudan.common.entity.TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "length",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getStartPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getEndPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "edu.fudan.common.entity.TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "length",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getEndPlace",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TripInfo",
              "calledFrom": "queryInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getDepartureTime",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryInfo",
              "parameterContents": "\"[query][Travel Query Fail][Something null]\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryInfo",
              "parameterContents": "errorList",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryInfo",
              "parameterContents": "\"[query][Query TripResponse]\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryInfo",
              "parameterContents": "service.queryByBatch(info, headers)",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "queryInfo",
              "parameterContents": "info,headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "queryByBatch",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"[getTripAllDetailInfo][Get trip detail][TripId: {}]\",gtdi.getTripId()",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "gtdi",
              "objectType": "edu.fudan.common.entity.TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getTripId",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "service.getTripAllDetailInfo(gtdi, headers)",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "gtdi,headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAll",
              "parameterContents": "\"[queryAll][Query all trips]\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryAll",
              "parameterContents": "service.queryAll(headers)",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "queryAll",
              "parameterContents": "headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "queryAll",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "adminQueryAll",
              "parameterContents": "\"[adminQueryAll][Admin query all trips]\"",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "info",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "adminQueryAll",
              "parameterContents": "service.adminQueryAll(headers)",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "ok",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            },
            {
              "objectName": "service",
              "objectType": "TravelService",
              "calledFrom": "adminQueryAll",
              "parameterContents": "headers",
              "microserviceName": "ts-travel2-service",
              "className": "Travel2Controller",
              "name": "adminQueryAll",
              "packageAndClassName": "travel2.controller.Travel2Controller"
            }
          ],
          "name": "Travel2Controller",
          "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "travel2.service",
          "implementedTypes": [
            "TravelService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "date",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "afterToday",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "edu.fudan.common.entity.TravelInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "create",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "ArrayList<String>",
                  "annotations": [],
                  "name": "routeIds",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "getTripByRoute",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "trainTypeName",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "TrainType",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getTrainTypeByName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "TripAllDetailInfo",
                  "annotations": [],
                  "name": "gtdi",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "getTripAllDetailInfo",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "Trip",
                  "annotations": [],
                  "name": "trip",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "startPlaceName",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "TravelResult",
                  "annotations": [],
                  "name": "tr",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "TripResponse",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "setResponse",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "queryAll",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "seatType",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stationList",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "travelDate",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "int",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "Route",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "List<Trip>",
                  "annotations": [],
                  "name": "trips",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "startPlaceName",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "List<TripResponse>",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getTicketsByBatch",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "TripInfo",
                  "annotations": [],
                  "name": "info",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "queryByBatch",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "className": "TravelServiceImpl",
              "name": "getRouteByTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "Trip",
                  "annotations": [],
                  "name": "trip",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "Route",
                  "annotations": [],
                  "name": "route1",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "startPlaceName",
                  "packageAndClassName": "travel2.service.TravelServiceImpl"
                }
              ],
              "returnType": "TripResponse",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TravelServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "type": "TripRepository",
              "name": "repository",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "tripId1",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[getRouteByTripId][Get Route By Trip ID Fail][Trip Not Found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "trip.getRouteId(),headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[getRouteByTripId][Get route by Trip id error][Route not found][RouteId: {}]\",trip.getRouteId()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByTripId",
              "parameterContents": "\"[getRouteByTripId][Get Route By Trip ID Success]\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "tripId1",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "trip.getTrainTypeName(),headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeByName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"[getTrainTypeByTripId[]Get Train Type by Trip id error][Trip not found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTrainTypeByTripId",
              "parameterContents": "\"[getTrainTypeByTripId][Get Train Type by Trip id error][Train Type not found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripByRoute",
              "parameterContents": "routeId",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findByRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tripList",
              "objectType": "Trip",
              "calledFrom": "getTripByRoute",
              "parameterContents": "tempTripList",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tripList",
              "objectType": "Trip",
              "calledFrom": "getTripByRoute",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripByRoute",
              "parameterContents": "\"[getTripByRoute][Get Trips by Route ids warn][Trips not found][RouteIdNumber: {}]\",routeIds.size()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "routeIds",
              "objectType": "ArrayList",
              "calledFrom": "getTripByRoute",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "size",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "create",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStartStationName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStationsName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTerminalStationName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "create",
              "parameterContents": "info.getRouteId()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "create",
              "parameterContents": "trip",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "save",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "ti",
              "objectType": "TripId",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[getTripByRoute][Create trip error][Trip already exists][TripId: {}]\",info.getTripId()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "retrieve",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "retrieve",
              "parameterContents": "\"[retrieve][Retrieve trip error][Trip not found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "update",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getTrainTypeName()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setStartStationName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getStartStationName()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setStartStationName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStartStationName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getStationsName()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setStationsName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStationsName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getTerminalStationName()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTerminalStationName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTerminalStationName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getStartTime()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getEndTime()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getEndTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "Trip",
              "calledFrom": "update",
              "parameterContents": "info.getRouteId()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "update",
              "parameterContents": "t",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "save",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "ti",
              "objectType": "TripId",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "update",
              "parameterContents": "\"[update][Update trip error][Trip not found][TripId: {}]\",info.getTripId()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "edu.fudan.common.entity.TravelInfo",
              "calledFrom": "update",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "delete",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "delete",
              "parameterContents": "ti",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "deleteByTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "delete",
              "parameterContents": "\"[delete][Delete trip error][Trip not found][TripId: {}]\",tripId",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "queryByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "queryByBatch",
              "parameterContents": "allTripList,startPlaceName,endPlaceName,info.getDepartureTime(),headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTicketsByBatch",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "queryByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStartPlace",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getEndPlace",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "query",
              "parameterContents": "tempTrip,null,StartPlaceName,endPlaceName,info.getDepartureTime(),headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "query",
              "parameterContents": "\"[query][Query trip error][Tickets not found][start: {},end: {},time: {}]\",StartPlaceName,endPlaceName,info.getDepartureTime()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "info",
              "objectType": "TripInfo",
              "calledFrom": "query",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getDepartureTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "list",
              "objectType": "TripResponse",
              "calledFrom": "query",
              "parameterContents": "response",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"[getTripAllDetailInfo][gtdi info: {}]\",gtdi.toString()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "debug",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "new TripId(gtdi.getTripId())",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"[getTripAllDetailInfo][Get trip detail error][Trip not found][TripId: {}]\",gtdi.getTripId()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTo",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "trip,null,gtdi.getFrom(),gtdi.getTo(),gtdi.getTravelDate(),headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTickets",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTo",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTravelDate",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "null",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "\"[getTripAllDetailInfo][Query trip error][Tickets not found][start: {},end: {}]\",gtdi.getTo(),gtdi.getFrom()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTo",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "tripResponse",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTripResponse",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdr",
              "objectType": "TripAllDetail",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "repository.findByTripId(new TripId(gtdi.getTripId()))",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "new TripId(gtdi.getTripId())",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "gtdi",
              "objectType": "TripAllDetailInfo",
              "calledFrom": "getTripAllDetailInfo",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "afterToday",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "\"[getTickets][depaturetime not vailid][departuretime: {}]\",departureTime",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "trip",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "startPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "infos",
              "objectType": "Travel",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "query",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tripMap",
              "objectType": "Trip",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "trip.getTripId().toString(),trip",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "put",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "\"[getTicketsByBatch][before get basic][trips: {}]\",trips",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "\"ts-basic-service\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "url": "/api/v1/basicservice/basic/travels",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "basic_service_url + \"/api/v1/basicservice/basic/travels\",HttpMethod.POST,requestEntity,Response.class",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "\"[getTicketsByBatch][Ts-basic-service response status is 0][response is: {}]\",r",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "mapper",
              "objectType": "ObjectMapper",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "JsonUtils.object2Json(r.getData()),new TypeReference<Map<String, TravelResult>>() {\r\n}",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "readValue",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "r.getData()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "object2Json",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "\"[getTicketsByBatch][Ts-basic-service convert data failed][Fail msg: {}]\",e.getMessage()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trMap",
              "objectType": "TravelResult",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "entrySet",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trEntry",
              "objectType": "TravelResult",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getKey",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trEntry",
              "objectType": "TravelResult",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getValue",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tripMap",
              "objectType": "Trip",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "tripNumber",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "trip,tr,startPlaceName,endPlaceName,departureTime,headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setResponse",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "responses",
              "objectType": "TripResponse",
              "calledFrom": "getTicketsByBatch",
              "parameterContents": "response",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "afterToday",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTickets",
              "parameterContents": "trip",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTickets",
              "parameterContents": "startPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setStartPlace",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTickets",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setEndPlace",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "query",
              "objectType": "Travel",
              "calledFrom": "getTickets",
              "parameterContents": "departureTime",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setDepartureTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "\"ts-basic-service\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "url": "/api/v1/basicservice/basic/travel",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTickets",
              "parameterContents": "basic_service_url + \"/api/v1/basicservice/basic/travel\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<edu.fudan.common.entity.TravelResult>>() {\r\n}",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "r",
              "objectType": "Response",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTickets",
              "parameterContents": "\"[getTickets][Ts-basic-service response status is 0][response is: {}]\",r",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getTickets",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTickets",
              "parameterContents": "trip,resultForTravel,startPlaceName,endPlaceName,departureTime,headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setResponse",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "50",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setConfortClass",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "50",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setEconomyClass",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getRoute",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getConfortClass",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getEconomyClass",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "setResponse",
              "parameterContents": "departureTime,trip.getTripId().toString(),startPlaceName,endPlaceName,SeatClass.FIRSTCLASS.getCode(),firstClassTotalNum,stationList,headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FIRSTCLASS",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "setResponse",
              "parameterContents": "departureTime,trip.getTripId().toString(),startPlaceName,endPlaceName,SeatClass.SECONDCLASS.getCode(),secondClassTotalNum,stationList,headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getRestTicketNumber",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "SECONDCLASS",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getCode",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "first",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setConfortClass",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "second",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setEconomyClass",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "startPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTerminalStation",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "startPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "endPlaceName",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "indexOf",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStations",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "indexStart",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "0",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "indexEnd",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "0",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "route",
              "objectType": "Route",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getDistances",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTrainType",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trainType",
              "objectType": "TrainType",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getAverageSpeed",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "StringUtils.String2Date(trip.getStartTime())",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setResponse",
              "parameterContents": "trip.getStartTime()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "Calendar.MINUTE,minutesStart",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "StringUtils.Date2String(calendarStart.getTime())",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setStartTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setResponse",
              "parameterContents": "calendarStart.getTime()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "setResponse",
              "parameterContents": "\"[getTickets][Calculate distance][calculate time：{}  time: {}]\",minutesStart,calendarStart.getTime()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarStart",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "StringUtils.String2Date(trip.getStartTime())",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setResponse",
              "parameterContents": "trip.getStartTime()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStartTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "Calendar.MINUTE,minutesEnd",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "StringUtils.Date2String(calendarEnd.getTime())",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setEndTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setResponse",
              "parameterContents": "calendarEnd.getTime()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "Date2String",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "setResponse",
              "parameterContents": "\"[getTickets][Calculate distance][calculate time：{}  time: {}]\",minutesEnd,calendarEnd.getTime()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calendarEnd",
              "objectType": "Calendar",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "trip.getTripId()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "trip.getTrainTypeName()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTrainTypeName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "tr.getPrices().get(\"confortClass\")",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setPriceForConfortClass",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "\"confortClass\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "TripResponse",
              "calledFrom": "setResponse",
              "parameterContents": "tr.getPrices().get(\"economyClass\")",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setPriceForEconomyClass",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "\"economyClass\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tr",
              "objectType": "TravelResult",
              "calledFrom": "setResponse",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getPrices",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "tripList",
              "objectType": "Trip",
              "calledFrom": "queryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "queryAll",
              "parameterContents": "\"[queryAll][Query all trips warn][{}]\",\"No Content\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "today",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "Calendar",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getInstance",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "StringUtils.String2Date(date)",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTime",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "afterToday",
              "parameterContents": "date",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "String2Date",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.YEAR",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateA",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "calDateB",
              "objectType": "Calendar",
              "calledFrom": "afterToday",
              "parameterContents": "Calendar.DAY_OF_MONTH",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "get",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTrainTypeByName",
              "parameterContents": "\"ts-train-service\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "url": "/api/v1/trainservice/trains/byName/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getTrainTypeByName",
              "parameterContents": "train_service_url + \"/api/v1/trainservice/trains/byName/\" + trainTypeName,HttpMethod.GET,requestEntity,new ParameterizedTypeReference<Response<TrainType>>() {\r\n}",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getTrainTypeByName",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id][Route ID：{}]\",routeId",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "debug",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"ts-route-service\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "url": "/api/v1/routeservice/routes/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "route_service_url + \"/api/v1/routeservice/routes/\" + routeId,HttpMethod.GET,requestEntity,Response.class",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id Fail][Route not found][RouteId: {}]\",routeId",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "error",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "\"[getRouteByRouteId][Get Route By Id Success]\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "JsonUtils",
              "objectType": "Solving JsonUtils",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "result.getData(),Route.class",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "conveterObject",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "getRouteByRouteId",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "endStationName",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setDestStation",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "startStationName",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setStartStation",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "trainNumber",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "travelDate",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTravelDate",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "seatType",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setSeatType",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "totalNum",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTotalNum",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "stationList",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setStations",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"[getRestTicketNumber][Seat request][request: {}]\",seatRequest.toString()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "seatRequest",
              "objectType": "Seat",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"ts-seat-service\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "url": "/api/v1/seatservice/seats/left_tickets",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "seat_service_url + \"/api/v1/seatservice/seats/left_tickets\",HttpMethod.POST,requestEntity,new ParameterizedTypeReference<Response<Integer>>() {\r\n}",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "exchange",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "\"[getRestTicketNumber][Get Rest tickets num][num is: {}]\",re.getBody().toString()",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "info",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "toString",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "ResponseEntity",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getData",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getRestTicketNumber",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getBody",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "repository",
              "objectType": "TripRepository",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "findAll",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "getRouteByRouteId(trip.getRouteId(), headers)",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setRoute",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip.getRouteId(),headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getRouteByRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getRouteId",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "getTrainTypeByName(trip.getTrainTypeName(), headers)",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTrainType",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip.getTrainTypeName(),headers",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeByName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "trip",
              "objectType": "Trip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "getTrainTypeName",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrip",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "trip",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "setTrip",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrips",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "adminTrip",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "add",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "adminTrips",
              "objectType": "AdminTrip",
              "calledFrom": "adminQueryAll",
              "parameterContents": "",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "adminQueryAll",
              "parameterContents": "\"[adminQueryAll][Admin query all trips warn][{}]\",\"No Content\"",
              "microserviceName": "ts-travel2-service",
              "className": "TravelServiceImpl",
              "name": "warn",
              "packageAndClassName": "travel2.service.TravelServiceImpl"
            }
          ],
          "name": "TravelServiceImpl",
          "path": "/ts-travel2-service/src/main/java/travel2/service/TravelServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "travel2.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "TripId",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "travel2.repository.TripRepository"
                }
              ],
              "returnType": "Trip",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TripRepository",
              "name": "findByTripId",
              "packageAndClassName": "travel2.repository.TripRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "routeId",
                  "packageAndClassName": "travel2.repository.TripRepository"
                }
              ],
              "returnType": "ArrayList<Trip>",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TripRepository",
              "name": "findByRouteId",
              "packageAndClassName": "travel2.repository.TripRepository"
            },
            {
              "parameters": [],
              "returnType": "ArrayList<Trip>",
              "microserviceName": "ts-travel2-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "travel2.repository.TripRepository"
                }
              ],
              "className": "TripRepository",
              "name": "findAll",
              "packageAndClassName": "travel2.repository.TripRepository"
            },
            {
              "parameters": [
                {
                  "type": "TripId",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "travel2.repository.TripRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-travel2-service",
              "annotations": [],
              "className": "TripRepository",
              "name": "deleteByTripId",
              "packageAndClassName": "travel2.repository.TripRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "travel2.repository.TripRepository"
            }
          ],
          "methodCalls": [],
          "name": "TripRepository",
          "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "travel2.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "TripId",
              "name": "tripId",
              "packageAndClassName": "travel2.entity.Trip"
            },
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "travel2.entity.Trip"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "name": "trip2"
              },
              "name": "Table",
              "packageAndClassName": "travel2.entity.Trip"
            },
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "travel2.entity.Trip"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "travel2.entity.Trip"
            }
          ],
          "methodCalls": [],
          "name": "Trip",
          "path": "/ts-travel2-service/src/main/java/travel2/entity/Trip.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "description": "ts-travel2-service",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "scope": "runtime",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-travel2-service",
              "artifactId": "ts-travel2-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8",
                "project.reporting.outputEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-travel2-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 16346
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-travel2-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${TRAVEL2_MYSQL_HOST:ts-travel2-mysql}:${TRAVEL2_MYSQL_PORT:3306}/${TRAVEL2_MYSQL_DATABASE:ts-travel2-mysql}?useSSL=false",
                "username": "${TRAVEL2_MYSQL_USER:root}",
                "password": "${TRAVEL2_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "swagger": {
              "controllerPackage": "travel2.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-travel2-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-verification-code-service",
      "path": "/ts-verification-code-service",
      "controllers": [
        {
          "packageName": "verifycode.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/verifycode/verify/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "verifycode.controller.VerifyCodeController"
                    }
                  ],
                  "name": "verifyCode",
                  "packageAndClassName": "verifycode.controller.VerifyCodeController"
                },
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "verifycode.controller.VerifyCodeController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "verifycode.controller.VerifyCodeController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "verifycode.controller.VerifyCodeController"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "verifycode.controller.VerifyCodeController"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-verification-code-service",
              "annotations": [
                {
                  "attributes": {
                    "value": "/verify/{verifyCode}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "verifycode.controller.VerifyCodeController"
                }
              ],
              "className": "VerifyCodeController",
              "name": "verifyCode",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "url": "/api/v1/verifycode/generate",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "verifycode.controller.VerifyCodeController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "verifycode.controller.VerifyCodeController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "verifycode.controller.VerifyCodeController"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "verifycode.controller.VerifyCodeController"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-verification-code-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/generate"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "verifycode.controller.VerifyCodeController"
                }
              ],
              "className": "VerifyCodeController",
              "name": "imageCode",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "type": "VerifyCodeService",
              "name": "verifyCodeService",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/verifycode"
              },
              "name": "RequestMapping",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "imageCode",
              "parameterContents": "\"[imageCode][Image code]\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "info",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "response",
              "objectType": "HttpServletResponse",
              "calledFrom": "imageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "getOutputStream",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "verifyCodeService",
              "objectType": "VerifyCodeService",
              "calledFrom": "imageCode",
              "parameterContents": "60,20,os,request,response,headers",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "getImageCode",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "",
              "objectType": "HttpServletRequest",
              "calledFrom": "imageCode",
              "parameterContents": "simpleCaptcha,map.get(\"strEnsure\").toString().toLowerCase()",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "setAttribute",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "request",
              "objectType": "HttpServletRequest",
              "calledFrom": "imageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "getSession",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "imageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "toLowerCase",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "",
              "objectType": "Object",
              "calledFrom": "imageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "toString",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "map",
              "objectType": "Map",
              "calledFrom": "imageCode",
              "parameterContents": "\"strEnsure\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "get",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "",
              "objectType": "HttpServletRequest",
              "calledFrom": "imageCode",
              "parameterContents": "\"codeTime\",System.currentTimeMillis()",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "setAttribute",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "request",
              "objectType": "HttpServletRequest",
              "calledFrom": "imageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "getSession",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "System",
              "objectType": "System",
              "calledFrom": "imageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "currentTimeMillis",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "ImageIO",
              "objectType": "ImageIO",
              "calledFrom": "imageCode",
              "parameterContents": "(BufferedImage) map.get(\"image\"),\"JPEG\",os",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "write",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "map",
              "objectType": "Map",
              "calledFrom": "imageCode",
              "parameterContents": "\"image\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "get",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "os",
              "objectType": "OutputStream",
              "calledFrom": "imageCode",
              "parameterContents": "error.getBytes()",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "write",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "error",
              "objectType": "String",
              "calledFrom": "imageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "getBytes",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "verifyCode",
              "parameterContents": "\"[verifyCode][receivedCode: {}]\",verifyCode",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "info",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "verifyCodeService",
              "objectType": "VerifyCodeService",
              "calledFrom": "verifyCode",
              "parameterContents": "request,response,verifyCode,headers",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "verifyCode",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "verifyCode",
              "parameterContents": "\"[verifyCode][verify result: {}]\",result",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeController",
              "name": "info",
              "packageAndClassName": "verifycode.controller.VerifyCodeController"
            }
          ],
          "name": "VerifyCodeController",
          "path": "/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "verifycode.service.impl",
          "implementedTypes": [
            "VerifyCodeService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "fc",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                }
              ],
              "returnType": "Color",
              "microserviceName": "ts-verification-code-service",
              "annotations": [],
              "className": "VerifyCodeServiceImpl",
              "name": "getRandColor",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "width",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                },
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                },
                {
                  "type": "OutputStream",
                  "annotations": [],
                  "name": "os",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                }
              ],
              "returnType": "Map<String,Object>",
              "microserviceName": "ts-verification-code-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                }
              ],
              "className": "VerifyCodeServiceImpl",
              "name": "getImageCode",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                },
                {
                  "type": "HttpServletRequest",
                  "annotations": [],
                  "name": "request",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "receivedCode",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                },
                {
                  "type": "HttpServletResponse",
                  "annotations": [],
                  "name": "response",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                }
              ],
              "returnType": "boolean",
              "microserviceName": "ts-verification-code-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
                }
              ],
              "className": "VerifyCodeServiceImpl",
              "name": "verifyCode",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "char[]",
              "name": "mapTable",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "type": "String",
              "name": "ysbCaptcha",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "type": "int",
              "name": "CAPTCHA_EXPIRED",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "type": "Cache<String,String>",
              "name": "cacheCode",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "image",
              "objectType": "BufferedImage",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getGraphics",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "getRandColor(200, 250)",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "setColor",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getImageCode",
              "parameterContents": "200,250",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getRandColor",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "0,0,width,height",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "fillRect",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "new Font(\"Times New Roman\", Font.PLAIN, 18)",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "setFont",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "getRandColor(160, 200)",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "setColor",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getImageCode",
              "parameterContents": "160,200",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getRandColor",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "width",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "height",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "12",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "12",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "x,y,x + xl,y + yl",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "drawLine",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "Math",
              "objectType": "Math",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "random",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "new Color(20 + random.nextInt(110), 20 + random.nextInt(110), 20 + random.nextInt(110))",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "setColor",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "110",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "110",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getImageCode",
              "parameterContents": "110",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "strEnsure",
              "objectType": "String",
              "calledFrom": "getImageCode",
              "parameterContents": "i,i + 1",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "substring",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "str,13 * i + 6,16",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "drawString",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "g",
              "objectType": "Graphics",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "dispose",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "returnMap",
              "objectType": "Map",
              "calledFrom": "getImageCode",
              "parameterContents": "\"image\",image",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "put",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "returnMap",
              "objectType": "Map",
              "calledFrom": "getImageCode",
              "parameterContents": "\"strEnsure\",strEnsure",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "put",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "getImageCode",
              "parameterContents": "request,ysbCaptcha",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getCookieByName",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getImageCode",
              "parameterContents": "\"[getImageCode][Get image code warn.Cookie not found][Path Info: {}]\",request.getPathInfo()",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "warn",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "HttpServletRequest",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getPathInfo",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "toUpperCase",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getImageCode",
              "parameterContents": "\"-\",\"\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "replace",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "toString",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "getImageCode",
              "parameterContents": "response,ysbCaptcha,cookieId,CAPTCHA_EXPIRED",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "addCookie",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "cookie",
              "objectType": "Cookie",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getValue",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "toUpperCase",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "getImageCode",
              "parameterContents": "\"-\",\"\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "replace",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "toString",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "getImageCode",
              "parameterContents": "response,ysbCaptcha,cookieId,CAPTCHA_EXPIRED",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "addCookie",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "cookie",
              "objectType": "Cookie",
              "calledFrom": "getImageCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getValue",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getImageCode",
              "parameterContents": "\"[getImageCode][strEnsure: {}]\",strEnsure",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "info",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "cacheCode",
              "objectType": "Cache",
              "calledFrom": "getImageCode",
              "parameterContents": "cookieId,strEnsure",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "put",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "verifyCode",
              "parameterContents": "request,ysbCaptcha",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getCookieByName",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "verifyCode",
              "parameterContents": "\"[verifyCode][Verify code warn][Cookie not found][Path Info: {}]\",request.getPathInfo()",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "warn",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "request",
              "objectType": "HttpServletRequest",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getPathInfo",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "toUpperCase",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "verifyCode",
              "parameterContents": "\"-\",\"\"",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "replace",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "toString",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "CookieUtil",
              "objectType": "Solving CookieUtil",
              "calledFrom": "verifyCode",
              "parameterContents": "response,ysbCaptcha,cookieId,CAPTCHA_EXPIRED",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "addCookie",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "cookie",
              "objectType": "Cookie",
              "calledFrom": "verifyCode",
              "parameterContents": "",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getValue",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "cacheCode",
              "objectType": "Cache",
              "calledFrom": "verifyCode",
              "parameterContents": "cookieId",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "getIfPresent",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "verifyCode",
              "parameterContents": "\"GET Code By cookieId \" + cookieId + \"   is :\" + code",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "info",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "verifyCode",
              "parameterContents": "\"[verifyCode][Get image code warn][Code not found][CookieId: {}]\",cookieId",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "warn",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "code",
              "objectType": "String",
              "calledFrom": "verifyCode",
              "parameterContents": "receivedCode",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "equalsIgnoreCase",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getRandColor",
              "parameterContents": "bc - fc",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getRandColor",
              "parameterContents": "bc - fc",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            },
            {
              "objectName": "random",
              "objectType": "Random",
              "calledFrom": "getRandColor",
              "parameterContents": "bc - fc",
              "microserviceName": "ts-verification-code-service",
              "className": "VerifyCodeServiceImpl",
              "name": "nextInt",
              "packageAndClassName": "verifycode.service.impl.VerifyCodeServiceImpl"
            }
          ],
          "name": "VerifyCodeServiceImpl",
          "path": "/ts-verification-code-service/src/main/java/verifycode/service/impl/VerifyCodeServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "com.google.guava",
                    "artifactId": "guava",
                    "version": "31.0-jre"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-verification-code-service",
              "artifactId": "ts-verification-code-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-verification-code-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 15678
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-verification-code-service"
              }
            },
            "swagger": {
              "controllerPackage": "verifycode.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-verification-code-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-auth-service",
      "path": "/ts-auth-service",
      "controllers": [
        {
          "packageName": "auth.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/auth/hello",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "auth.controller.AuthController"
                }
              ],
              "className": "AuthController",
              "name": "getHello",
              "packageAndClassName": "auth.controller.AuthController"
            },
            {
              "url": "/api/v1/auth",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "AuthDto",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "auth.controller.AuthController"
                    }
                  ],
                  "name": "authDto",
                  "packageAndClassName": "auth.controller.AuthController"
                }
              ],
              "returnType": "HttpEntity<Response>",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "PostMapping",
                  "packageAndClassName": "auth.controller.AuthController"
                }
              ],
              "className": "AuthController",
              "name": "createDefaultUser",
              "packageAndClassName": "auth.controller.AuthController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "auth.controller.AuthController"
            },
            {
              "type": "UserService",
              "name": "userService",
              "packageAndClassName": "auth.controller.AuthController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/auth"
              },
              "name": "RequestMapping",
              "packageAndClassName": "auth.controller.AuthController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "auth.controller.AuthController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "createDefaultUser",
              "parameterContents": "\"[createDefaultUser][Create default auth user with authDto][AuthDto: {}]\",authDto.toString()",
              "microserviceName": "ts-auth-service",
              "className": "AuthController",
              "name": "info",
              "packageAndClassName": "auth.controller.AuthController"
            },
            {
              "objectName": "authDto",
              "objectType": "AuthDto",
              "calledFrom": "createDefaultUser",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "AuthController",
              "name": "toString",
              "packageAndClassName": "auth.controller.AuthController"
            },
            {
              "objectName": "userService",
              "objectType": "UserService",
              "calledFrom": "createDefaultUser",
              "parameterContents": "authDto",
              "microserviceName": "ts-auth-service",
              "className": "AuthController",
              "name": "createDefaultAuthUser",
              "packageAndClassName": "auth.controller.AuthController"
            }
          ],
          "name": "AuthController",
          "path": "/ts-auth-service/src/main/java/auth/controller/AuthController.java",
          "fileType": "JCLASS"
        },
        {
          "packageName": "auth.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/users",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "auth.controller.UserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "auth.controller.UserController"
                }
              ],
              "returnType": "ResponseEntity<List<User>>",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "GetMapping",
                  "packageAndClassName": "auth.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "getAllUser",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "url": "/api/v1/users/hello",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "Object",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "auth.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "getHello",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "url": "/api/v1/users/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "auth.controller.UserController"
                    }
                  ],
                  "name": "userId",
                  "packageAndClassName": "auth.controller.UserController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "auth.controller.UserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "auth.controller.UserController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/{userId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "auth.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "deleteUserById",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "url": "/api/v1/users/login",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "BasicAuthDto",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "auth.controller.UserController"
                    }
                  ],
                  "name": "dao",
                  "packageAndClassName": "auth.controller.UserController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "auth.controller.UserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "auth.controller.UserController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/login"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "auth.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "getToken",
              "packageAndClassName": "auth.controller.UserController"
            }
          ],
          "fields": [
            {
              "type": "TokenService",
              "name": "tokenService",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "type": "Logger",
              "name": "logger",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "type": "UserService",
              "name": "userService",
              "packageAndClassName": "auth.controller.UserController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/users"
              },
              "name": "RequestMapping",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "auth.controller.UserController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getToken",
              "parameterContents": "\"Login request of username: {}\",dao.getUsername()",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "info",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "dao",
              "objectType": "BasicAuthDto",
              "calledFrom": "getToken",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "getUsername",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "tokenService",
              "objectType": "TokenService",
              "calledFrom": "getToken",
              "parameterContents": "dao,headers",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "getToken",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "ResponseEntity",
              "objectType": "Solving ResponseEntity",
              "calledFrom": "getToken",
              "parameterContents": "res",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "ok",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getToken",
              "parameterContents": "\"[getToken][tokenService.getToken error][UserOperationException, message: {}]\",e.getMessage()",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "error",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "e",
              "objectType": "UserOperationException",
              "calledFrom": "getToken",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "getMessage",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "ResponseEntity",
              "objectType": "Solving ResponseEntity",
              "calledFrom": "getToken",
              "parameterContents": "new Response<>(0, \"get token error\", null)",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "ok",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "getAllUser",
              "parameterContents": "\"[getAllUser][Get all users]\"",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "info",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "Solving ResponseEntity",
              "calledFrom": "getAllUser",
              "parameterContents": "userService.getAllUser(headers)",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "body",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "ResponseEntity",
              "objectType": "Solving ResponseEntity",
              "calledFrom": "getAllUser",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "ok",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "userService",
              "objectType": "UserService",
              "calledFrom": "getAllUser",
              "parameterContents": "headers",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "getAllUser",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "logger",
              "objectType": "Logger",
              "calledFrom": "deleteUserById",
              "parameterContents": "\"[deleteUserById][Delete user][userId: {}]\",userId",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "info",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "ResponseEntity",
              "objectType": "Solving ResponseEntity",
              "calledFrom": "deleteUserById",
              "parameterContents": "userService.deleteByUserId(userId, headers)",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "ok",
              "packageAndClassName": "auth.controller.UserController"
            },
            {
              "objectName": "userService",
              "objectType": "UserService",
              "calledFrom": "deleteUserById",
              "parameterContents": "userId,headers",
              "microserviceName": "ts-auth-service",
              "className": "UserController",
              "name": "deleteByUserId",
              "packageAndClassName": "auth.controller.UserController"
            }
          ],
          "name": "UserController",
          "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "auth.service.impl",
          "implementedTypes": [
            "TokenService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "auth.service.impl.TokenServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-auth-service",
              "annotations": [],
              "className": "TokenServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "auth.service.impl.TokenServiceImpl"
                },
                {
                  "type": "BasicAuthDto",
                  "annotations": [],
                  "name": "dto",
                  "packageAndClassName": "auth.service.impl.TokenServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "auth.service.impl.TokenServiceImpl"
                }
              ],
              "className": "TokenServiceImpl",
              "name": "getToken",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "JWTProvider",
              "name": "jwtProvider",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "type": "AuthenticationManager",
              "name": "authenticationManager",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "type": "UserRepository",
              "name": "userRepository",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "dto",
              "objectType": "BasicAuthDto",
              "calledFrom": "getToken",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "dto",
              "objectType": "BasicAuthDto",
              "calledFrom": "getToken",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "dto",
              "objectType": "BasicAuthDto",
              "calledFrom": "getToken",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "getVerificationCode",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getToken",
              "parameterContents": "\"ts-verification-code-service\"",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "getToken",
              "parameterContents": "verifyCode",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "url": "/api/v1/verifycode/verify/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "getToken",
              "parameterContents": "verification_code_service_url + \"/api/v1/verifycode/verify/\" + verifyCode,HttpMethod.GET,requestEntity,Boolean.class",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "exchange",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "re",
              "objectType": "ResponseEntity",
              "calledFrom": "getToken",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "getBody",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getToken",
              "parameterContents": "\"[getToken][Verification failed][userName: {}]\",username",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "info",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "authenticationManager",
              "objectType": "AuthenticationManager",
              "calledFrom": "getToken",
              "parameterContents": "upat",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "authenticate",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getToken",
              "parameterContents": "\"[getToken][Incorrect username or password][username: {}, password: {}]\",username,password",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "warn",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UserRepository",
              "calledFrom": "getToken",
              "parameterContents": "() -> new UserOperationException(MessageFormat.format(InfoConstant.USER_NAME_NOT_FOUND_1, username))",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "orElseThrow",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "getToken",
              "parameterContents": "username",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "findByUsername",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "MessageFormat",
              "objectType": "MessageFormat",
              "calledFrom": "getToken",
              "parameterContents": "InfoConstant.USER_NAME_NOT_FOUND_1,username",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "format",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "jwtProvider",
              "objectType": "JWTProvider",
              "calledFrom": "getToken",
              "parameterContents": "user",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "createToken",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getToken",
              "parameterContents": "\"[getToken][success][USER TOKEN: {} USER ID: {}]\",token,user.getUserId()",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "info",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "getToken",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "getToken",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "TokenServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "auth.service.impl.TokenServiceImpl"
            }
          ],
          "name": "TokenServiceImpl",
          "path": "/ts-auth-service/src/main/java/auth/service/impl/TokenServiceImpl.java",
          "fileType": "JCLASS"
        },
        {
          "packageName": "auth.service.impl",
          "implementedTypes": [
            "UserService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "User",
                  "annotations": [],
                  "name": "user",
                  "packageAndClassName": "auth.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-auth-service",
              "annotations": [],
              "className": "UserServiceImpl",
              "name": "checkUserCreateInfo",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "AuthDto",
                  "annotations": [],
                  "name": "dto",
                  "packageAndClassName": "auth.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "User",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "auth.service.impl.UserServiceImpl"
                }
              ],
              "className": "UserServiceImpl",
              "name": "createDefaultAuthUser",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "auth.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "List<User>",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "auth.service.impl.UserServiceImpl"
                }
              ],
              "className": "UserServiceImpl",
              "name": "getAllUser",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "auth.service.impl.UserServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "userId",
                  "packageAndClassName": "auth.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "auth.service.impl.UserServiceImpl"
                }
              ],
              "className": "UserServiceImpl",
              "name": "deleteByUserId",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "User",
                  "annotations": [],
                  "name": "user",
                  "packageAndClassName": "auth.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "User",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "auth.service.impl.UserServiceImpl"
                }
              ],
              "className": "UserServiceImpl",
              "name": "saveUser",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "UserRepository",
              "name": "userRepository",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "type": "PasswordEncoder",
              "name": "passwordEncoder",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "getAllUser",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "findAll",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "\"[createDefaultAuthUser][Register User Info][AuthDto name: {}]\",dto.getUserName()",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "dto",
              "objectType": "AuthDto",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "build",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "new HashSet<>(Arrays.asList(AuthConstant.ROLE_USER))",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "roles",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "passwordEncoder.encode(dto.getPassword())",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "password",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "dto.getUserName()",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "username",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Solving User",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "dto.getUserId()",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "userId",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "User",
              "objectType": "Solving User",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "builder",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "dto",
              "objectType": "AuthDto",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "dto",
              "objectType": "AuthDto",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "passwordEncoder",
              "objectType": "PasswordEncoder",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "dto.getPassword()",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "encode",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "dto",
              "objectType": "AuthDto",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "Arrays",
              "objectType": "Arrays",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "AuthConstant.ROLE_USER",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "asList",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "user",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "checkUserCreateInfo",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "\"[createDefaultAuthUser][Create default auth user][UserOperationException][message: {}]\",e.getMessage()",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "error",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "UserOperationException",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "user",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "save",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "deleteByUserId",
              "parameterContents": "\"[deleteByUserId][DELETE USER][user id: {}]\",userId",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "deleteByUserId",
              "parameterContents": "userId",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "deleteByUserId",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "\"[checkUserCreateInfo][Check user create info][userId: {}, userName: {}]\",user.getUserId(),user.getUsername()",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "String",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "user.getUsername()",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "equals",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getUsername",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "infos",
              "objectType": "List",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "MessageFormat.format(InfoConstant.PROPERTIES_CANNOT_BE_EMPTY_1, InfoConstant.USERNAME)",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "add",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "MessageFormat",
              "objectType": "MessageFormat",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "InfoConstant.PROPERTIES_CANNOT_BE_EMPTY_1,InfoConstant.USERNAME",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "format",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "infos",
              "objectType": "List",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "MessageFormat.format(InfoConstant.PROPERTIES_CANNOT_BE_EMPTY_1, InfoConstant.PASSWORD)",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "add",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "MessageFormat",
              "objectType": "MessageFormat",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "InfoConstant.PROPERTIES_CANNOT_BE_EMPTY_1,InfoConstant.PASSWORD",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "format",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "User",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "length",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "infos",
              "objectType": "List",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "MessageFormat.format(InfoConstant.PASSWORD_LEAST_CHAR_1, 6)",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "add",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "MessageFormat",
              "objectType": "MessageFormat",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "InfoConstant.PASSWORD_LEAST_CHAR_1,6",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "format",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getRoles",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "User",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "getRoles",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "infos",
              "objectType": "List",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "MessageFormat.format(InfoConstant.PROPERTIES_CANNOT_BE_EMPTY_1, InfoConstant.ROLES)",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "add",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "MessageFormat",
              "objectType": "MessageFormat",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "InfoConstant.PROPERTIES_CANNOT_BE_EMPTY_1,InfoConstant.ROLES",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "format",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "infos",
              "objectType": "List",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "infos.toString()",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "warn",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "infos",
              "objectType": "List",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "toString",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            },
            {
              "objectName": "infos",
              "objectType": "List",
              "calledFrom": "checkUserCreateInfo",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "UserServiceImpl",
              "name": "toString",
              "packageAndClassName": "auth.service.impl.UserServiceImpl"
            }
          ],
          "name": "UserServiceImpl",
          "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [
        {
          "packageName": "auth.entity",
          "implementedTypes": [
            "UserDetails"
          ],
          "classRole": "ENTITY",
          "methods": [
            {
              "parameters": [],
              "returnType": "Collection<? extends GrantedAuthority>",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "auth.entity.User"
                }
              ],
              "className": "User",
              "name": "getAuthorities",
              "packageAndClassName": "auth.entity.User"
            },
            {
              "parameters": [],
              "returnType": "boolean",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "auth.entity.User"
                }
              ],
              "className": "User",
              "name": "isAccountNonExpired",
              "packageAndClassName": "auth.entity.User"
            },
            {
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-auth-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "auth.entity.User"
                }
              ],
              "className": "User",
              "name": "getPassword",
              "packageAndClassName": "auth.entity.User"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "userId",
              "packageAndClassName": "auth.entity.User"
            },
            {
              "type": "Set<String>",
              "name": "roles",
              "packageAndClassName": "auth.entity.User"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "name": "auth_user"
              },
              "name": "Table",
              "packageAndClassName": "auth.entity.User"
            },
            {
              "attributes": {},
              "name": "Builder",
              "packageAndClassName": "auth.entity.User"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "auth.entity.User"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Solving SimpleGrantedAuthority",
              "calledFrom": "getAuthorities",
              "parameterContents": "Collectors.toList()",
              "microserviceName": "ts-auth-service",
              "className": "User",
              "name": "collect",
              "packageAndClassName": "auth.entity.User"
            },
            {
              "objectName": "",
              "objectType": "Stream",
              "calledFrom": "getAuthorities",
              "parameterContents": "SimpleGrantedAuthority::new",
              "microserviceName": "ts-auth-service",
              "className": "User",
              "name": "map",
              "packageAndClassName": "auth.entity.User"
            },
            {
              "objectName": "",
              "objectType": "Set",
              "calledFrom": "getAuthorities",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "User",
              "name": "stream",
              "packageAndClassName": "auth.entity.User"
            },
            {
              "objectName": "Collectors",
              "objectType": "Collectors",
              "calledFrom": "getAuthorities",
              "parameterContents": "",
              "microserviceName": "ts-auth-service",
              "className": "User",
              "name": "toList",
              "packageAndClassName": "auth.entity.User"
            }
          ],
          "name": "User",
          "path": "/ts-auth-service/src/main/java/auth/entity/User.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": [
                    {
                      "groupId": "org.springframework.boot",
                      "artifactId": "spring-boot-maven-plugin"
                    },
                    {
                      "configuration": {
                        "source": 8,
                        "target": 8
                      },
                      "groupId": "org.apache.maven.plugins",
                      "artifactId": "maven-compiler-plugin"
                    }
                  ]
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "ts-auth-service",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "io.jsonwebtoken",
                    "artifactId": "jjwt",
                    "version": "0.8.0"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-security"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-auth-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-common",
      "path": "/ts-common",
      "controllers": [],
      "services": [],
      "repositories": [],
      "entities": [
        {
          "packageName": "edu.fudan.common.entity",
          "implementedTypes": [
            "Serializable"
          ],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "foodName",
              "packageAndClassName": "edu.fudan.common.entity.Food"
            },
            {
              "type": "double",
              "name": "price",
              "packageAndClassName": "edu.fudan.common.entity.Food"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Embeddable",
              "packageAndClassName": "edu.fudan.common.entity.Food"
            }
          ],
          "methodCalls": [],
          "name": "Food",
          "path": "/ts-common/src/main/java/edu/fudan/common/entity/Food.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "configuration": {
                      "source": 8,
                      "target": 8
                    },
                    "groupId": "org.apache.maven.plugins",
                    "artifactId": "maven-compiler-plugin"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "ts-common",
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "io.jsonwebtoken",
                    "artifactId": "jjwt",
                    "version": "0.8.0"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-security"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  },
                  {
                    "groupId": "javax.persistence",
                    "artifactId": "javax.persistence-api"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-common/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-user-service",
      "path": "/ts-user-service",
      "controllers": [
        {
          "packageName": "user.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/userservice/users",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "UserDto",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "user",
                  "packageAndClassName": "user.controller.UserController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "PutMapping",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "updateUser",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "url": "/api/v1/userservice/users/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "userName",
                  "packageAndClassName": "user.controller.UserController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/{userName}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "getUserByUserName",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "url": "/api/v1/userservice/users/register",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "UserDto",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "userDto",
                  "packageAndClassName": "user.controller.UserController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/register"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "registerUser",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "url": "/api/v1/userservice/users",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "GetMapping",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "getAllUser",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "url": "/api/v1/userservice/users/hello",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/hello"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "testHello",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "url": "/api/v1/userservice/users/id/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "userId",
                  "packageAndClassName": "user.controller.UserController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/id/{userId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "getUserByUserId",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "url": "/api/v1/userservice/users/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "userId",
                  "packageAndClassName": "user.controller.UserController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "user.controller.UserController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "returnType": "ResponseEntity<Response>",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/{userId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "user.controller.UserController"
                }
              ],
              "className": "UserController",
              "name": "deleteUserById",
              "packageAndClassName": "user.controller.UserController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "type": "UserService",
              "name": "userService",
              "packageAndClassName": "user.controller.UserController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/userservice/users"
              },
              "name": "RequestMapping",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "user.controller.UserController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllUser",
              "parameterContents": "\"[getAllUser][Get all user]\"",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "info",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllUser",
              "parameterContents": "userService.getAllUsers(headers)",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "ok",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "userService",
              "objectType": "UserService",
              "calledFrom": "getAllUser",
              "parameterContents": "headers",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "getAllUsers",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getUserByUserName",
              "parameterContents": "\"[getUserByUserName][Get user by user name][UserName: {}]\",userName",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "info",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getUserByUserName",
              "parameterContents": "userService.findByUserName(userName, headers)",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "ok",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "userService",
              "objectType": "UserService",
              "calledFrom": "getUserByUserName",
              "parameterContents": "userName,headers",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "findByUserName",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getUserByUserId",
              "parameterContents": "\"[getUserByUserId][Get user by user id][UserId: {}]\",userId",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "info",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getUserByUserId",
              "parameterContents": "userService.findByUserId(userId, headers)",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "ok",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "userService",
              "objectType": "UserService",
              "calledFrom": "getUserByUserId",
              "parameterContents": "userId,headers",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "findByUserId",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "registerUser",
              "parameterContents": "\"[registerUser][Register user][UserName: {}]\",userDto.getUserName()",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "info",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "registerUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "getUserName",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "registerUser",
              "parameterContents": "userService.saveUser(userDto, headers)",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "body",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "ResponseEntity",
              "objectType": "Solving ResponseEntity",
              "calledFrom": "registerUser",
              "parameterContents": "HttpStatus.CREATED",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "status",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "userService",
              "objectType": "UserService",
              "calledFrom": "registerUser",
              "parameterContents": "userDto,headers",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "saveUser",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteUserById",
              "parameterContents": "\"[deleteUserById][Delete user][UserId: {}]\",userId",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "info",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteUserById",
              "parameterContents": "userService.deleteUser(userId, headers)",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "ok",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "userService",
              "objectType": "UserService",
              "calledFrom": "deleteUserById",
              "parameterContents": "userId,headers",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "deleteUser",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateUser",
              "parameterContents": "\"[updateUser][Update user][UserId: {}]\",user.getUserId()",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "info",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "user",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "getUserId",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "userService.updateUser(user, headers)",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "ok",
              "packageAndClassName": "user.controller.UserController"
            },
            {
              "objectName": "userService",
              "objectType": "UserService",
              "calledFrom": "updateUser",
              "parameterContents": "user,headers",
              "microserviceName": "ts-user-service",
              "className": "UserController",
              "name": "updateUser",
              "packageAndClassName": "user.controller.UserController"
            }
          ],
          "name": "UserController",
          "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "user.service.impl",
          "implementedTypes": [
            "UserService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "AuthDto",
                  "annotations": [],
                  "name": "dto",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-user-service",
              "annotations": [],
              "className": "UserServiceImpl",
              "name": "createDefaultAuthUser",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-user-service",
              "annotations": [],
              "className": "UserServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                },
                {
                  "type": "UserDto",
                  "annotations": [],
                  "name": "userDto",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                }
              ],
              "className": "UserServiceImpl",
              "name": "saveUser",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "userId",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-user-service",
              "annotations": [],
              "className": "UserServiceImpl",
              "name": "deleteUserAuth",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                }
              ],
              "className": "UserServiceImpl",
              "name": "getAllUsers",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "userName",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "user.service.impl.UserServiceImpl"
                }
              ],
              "className": "UserServiceImpl",
              "name": "findByUserName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "type": "UserRepository",
              "name": "userRepository",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "saveUser",
              "parameterContents": "\"[saveUser][Save User Name][user name: {}]\",userDto.getUserName()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "toString",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "build",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveUser",
              "parameterContents": "userDto.getEmail()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "email",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveUser",
              "parameterContents": "userDto.getDocumentNum()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "documentNum",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveUser",
              "parameterContents": "userDto.getDocumentType()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "documentType",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveUser",
              "parameterContents": "userDto.getGender()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "gender",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveUser",
              "parameterContents": "userDto.getPassword()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "password",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Solving User",
              "calledFrom": "saveUser",
              "parameterContents": "userDto.getUserName()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "userName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Solving User",
              "calledFrom": "saveUser",
              "parameterContents": "userId",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "userId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "User",
              "objectType": "Solving User",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "builder",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getGender",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getDocumentNum",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "saveUser",
              "parameterContents": "userDto.getUserName()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "findByUserName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveUser",
              "parameterContents": "AuthDto.builder().userId(userId + \"\").userName(user.getUserName()).password(user.getPassword()).build()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "createDefaultAuthUser",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "build",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveUser",
              "parameterContents": "user.getPassword()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "password",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Solving AuthDto",
              "calledFrom": "saveUser",
              "parameterContents": "user.getUserName()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "userName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Solving AuthDto",
              "calledFrom": "saveUser",
              "parameterContents": "userId + \"\"",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "userId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "AuthDto",
              "objectType": "Solving AuthDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "builder",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "user",
              "objectType": "User",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "saveUser",
              "parameterContents": "user",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "save",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "saveUser",
              "parameterContents": "\"[saveUser][Send authorization message to ts-auth-service....]\"",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "saveUser",
              "parameterContents": "\"[saveUser][Save user error][User already exists][UserId: {}]\",userDto.getUserId()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "error",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "saveUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "\"[createDefaultAuthUser][CALL TO AUTH][AuthDto: {}]\",dto.toString()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "dto",
              "objectType": "AuthDto",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "toString",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "\"ts-auth-service\"",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "discoveryClient",
              "objectType": "DiscoveryClient",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "\"ts-auth-service\"",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getInstances",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "auth_svcs",
              "objectType": "ServiceInstance",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "size",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "auth_svcs",
              "objectType": "ServiceInstance",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "0",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "get",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "\"[createDefaultAuthUser][CALL TO AUTH][auth_svc host: {}][auth_svc port: {}]\",auth_svc.getHost(),auth_svc.getPort()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "auth_svc",
              "objectType": "ServiceInstance",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getHost",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "auth_svc",
              "objectType": "ServiceInstance",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getPort",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "\"[createDefaultAuthUser][CALL TO AUTH][can not get auth url]\"",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "url": "/api/v1/auth",
              "httpMethod": "POST",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "auth_service_url + \"/api/v1/auth\",HttpMethod.POST,entity,new ParameterizedTypeReference<Response<AuthDto>>() {\r\n}",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "exchange",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "res",
              "objectType": "ResponseEntity",
              "calledFrom": "createDefaultAuthUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getBody",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "getAllUsers",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "findAll",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "users",
              "objectType": "User",
              "calledFrom": "getAllUsers",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllUsers",
              "parameterContents": "\"[getAllUsers][Get all users warn: {}]\",\"No Content\"",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "warn",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "findByUserName",
              "parameterContents": "userName",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "findByUserName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findByUserName",
              "parameterContents": "\"[findByUserName][Get user by name warn,user is null][UserName: {}]\",userName",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "warn",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "findByUserId",
              "parameterContents": "userId",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "findByUserId",
              "parameterContents": "\"[findByUserId][Get user by id error,user is null][UserId: {}]\",userId",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "error",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "deleteUser",
              "parameterContents": "\"[deleteUser][DELETE USER BY ID][userId: {}]\",userId",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "deleteUser",
              "parameterContents": "userId",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteUser",
              "parameterContents": "userId,headers",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "deleteUserAuth",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "deleteUser",
              "parameterContents": "userId",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "deleteByUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "deleteUser",
              "parameterContents": "\"[deleteUser][DELETE SUCCESS][userId: {}]\",userId",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "deleteUser",
              "parameterContents": "\"[deleteUser][Delete user error][User not found][UserId: {}]\",userId",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "error",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateUser",
              "parameterContents": "\"[updateUser][UPDATE USER: {}]\",userDto.toString()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "toString",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "updateUser",
              "parameterContents": "userDto.getUserId()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "findByUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "build",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "userDto.getDocumentType()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "documentType",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "userDto.getDocumentNum()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "documentNum",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "userDto.getGender()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "gender",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "userDto.getUserName()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "userName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "oldUser.getUserId()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "userId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateUser",
              "parameterContents": "userDto.getPassword()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "password",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Solving User",
              "calledFrom": "updateUser",
              "parameterContents": "userDto.getEmail()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "email",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "User",
              "objectType": "Solving User",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "builder",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getEmail",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getPassword",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "oldUser",
              "objectType": "User",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserName",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getGender",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getDocumentNum",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getDocumentType",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "updateUser",
              "parameterContents": "oldUser.getUserId()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "deleteByUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "oldUser",
              "objectType": "User",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userRepository",
              "objectType": "UserRepository",
              "calledFrom": "updateUser",
              "parameterContents": "newUser",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "save",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "updateUser",
              "parameterContents": "\"[updateUser][Update user error][User not found][UserId: {}]\",userDto.getUserId()",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "error",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "userDto",
              "objectType": "UserDto",
              "calledFrom": "updateUser",
              "parameterContents": "",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getUserId",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "deleteUserAuth",
              "parameterContents": "\"[deleteUserAuth][DELETE USER BY ID][userId: {}]\",userId",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "headers",
              "objectType": "HttpHeaders",
              "calledFrom": "deleteUserAuth",
              "parameterContents": "HttpHeaders.AUTHORIZATION",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getFirst",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "newHeaders",
              "objectType": "HttpHeaders",
              "calledFrom": "deleteUserAuth",
              "parameterContents": "HttpHeaders.AUTHORIZATION,token",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "set",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteUserAuth",
              "parameterContents": "\"ts-auth-service\"",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "url": "/users/{?}",
              "httpMethod": "DELETE",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "deleteUserAuth",
              "parameterContents": "AUTH_SERVICE_URI + \"/users/\" + userId,HttpMethod.DELETE,httpEntity,Response.class",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "exchange",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "deleteUserAuth",
              "parameterContents": "\"[deleteUserAuth][DELETE USER AUTH SUCCESS][userId: {}]\",userId",
              "microserviceName": "ts-user-service",
              "className": "UserServiceImpl",
              "name": "info",
              "packageAndClassName": "user.service.impl.UserServiceImpl"
            }
          ],
          "name": "UserServiceImpl",
          "path": "/ts-user-service/src/main/java/user/service/impl/UserServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "user.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [],
              "returnType": "List<User>",
              "microserviceName": "ts-user-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "user.repository.UserRepository"
                }
              ],
              "className": "UserRepository",
              "name": "findAll",
              "packageAndClassName": "user.repository.UserRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "userName",
                  "packageAndClassName": "user.repository.UserRepository"
                }
              ],
              "returnType": "User",
              "microserviceName": "ts-user-service",
              "annotations": [],
              "className": "UserRepository",
              "name": "findByUserName",
              "packageAndClassName": "user.repository.UserRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "userId",
                  "packageAndClassName": "user.repository.UserRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-user-service",
              "annotations": [],
              "className": "UserRepository",
              "name": "deleteByUserId",
              "packageAndClassName": "user.repository.UserRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "user.repository.UserRepository"
            }
          ],
          "methodCalls": [],
          "name": "UserRepository",
          "path": "/ts-user-service/src/main/java/user/repository/UserRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "user.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "userId",
              "packageAndClassName": "user.entity.User"
            },
            {
              "type": "int",
              "name": "gender",
              "packageAndClassName": "user.entity.User"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Builder",
              "packageAndClassName": "user.entity.User"
            }
          ],
          "methodCalls": [],
          "name": "User",
          "path": "/ts-user-service/src/main/java/user/entity/User.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": [
                    {
                      "groupId": "org.springframework.boot",
                      "artifactId": "spring-boot-maven-plugin"
                    },
                    {
                      "configuration": {
                        "source": 7,
                        "target": 7
                      },
                      "groupId": "org.apache.maven.plugins",
                      "artifactId": "maven-compiler-plugin"
                    }
                  ]
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "ts-user-service",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-user-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "bin",
      "path": "/old-docs/Json2Shiviz/bin",
      "controllers": [],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "repositories": {
              "repositories": [
                "// Use jcenter for resolving your dependencies.",
                "// You can declare any Maven/Ivy/file repository here.",
                "jcenter()"
              ]
            },
            "dependencies": {
              "dependencies": [
                "// This dependency is found on compile classpath of this component and consumers.",
                "compile 'com.google.guava:guava:21.0'",
                "// https://mvnrepository.com/artifact/org.json/json",
                "compile group: 'org.json', name: 'json', version: '20170516'",
                "// Use JUnit test framework",
                "testCompile 'junit:junit:4.12'"
              ]
            },
            "//mainClassName": "\"org.services.analysis.CallAnalysis\"",
            "mainClassName": "\"org.services.analysis.TraceTranslator\""
          },
          "name": "build.gradle",
          "path": "/old-docs/Json2Shiviz/bin/build.gradle",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ms-monitoring-core",
      "path": "/old-docs/Lib/ms-monitoring-core",
      "controllers": [],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "modelVersion": "4.0.0",
              "groupId": "myproject.microservices",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "name": "micro-service-monitoring-core",
              "description": "micro-service-monitoring-core",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "micro-service-monitoring-core",
              "packaging": "jar",
              "version": "0.1.0",
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-web",
                    "optional": true
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-websocket",
                    "optional": true
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-configuration-processor",
                    "optional": true
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-actuator",
                    "optional": true
                  },
                  {
                    "groupId": "org.springframework.integration",
                    "artifactId": "spring-integration-core",
                    "optional": true
                  },
                  {
                    "groupId": "org.springframework",
                    "artifactId": "spring-context"
                  },
                  {
                    "groupId": "org.springframework.data",
                    "artifactId": "spring-data-rest-webmvc",
                    "optional": true
                  },
                  {
                    "groupId": "org.apache.httpcomponents",
                    "artifactId": "httpclient",
                    "optional": true
                  },
                  {
                    "groupId": "org.aspectj",
                    "artifactId": "aspectjrt"
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/old-docs/Lib/ms-monitoring-core/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-ui-test",
      "path": "/old-docs/ts-ui-test",
      "controllers": [],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "executions": {
                      "execution": {
                        "phase": "package",
                        "configuration": {
                          "transformers": {
                            "transformer": {
                              "mainClass": "example.RemoteDriverTest2",
                              "implementation": "org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"
                            }
                          }
                        },
                        "goals": {
                          "goal": "shade"
                        }
                      }
                    },
                    "groupId": "org.apache.maven.plugins",
                    "artifactId": "maven-shade-plugin",
                    "version": "3.0.0"
                  }
                }
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "artifactId": "ts-ui-test",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.seleniumhq.selenium",
                    "artifactId": "selenium-server",
                    "version": "3.3.1"
                  },
                  {
                    "groupId": "org.testng",
                    "scope": "test",
                    "artifactId": "testng",
                    "version": 6.11
                  }
                ]
              }
            }
          },
          "name": "pom.xml",
          "path": "/old-docs/ts-ui-test/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-delivery-service",
      "path": "/ts-delivery-service",
      "controllers": [],
      "services": [],
      "repositories": [
        {
          "packageName": "delivery.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "delivery.repository.DeliveryRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-delivery-service",
              "annotations": [],
              "className": "DeliveryRepository",
              "name": "deleteById",
              "packageAndClassName": "delivery.repository.DeliveryRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "delivery.repository.DeliveryRepository"
                }
              ],
              "returnType": "Delivery",
              "microserviceName": "ts-delivery-service",
              "annotations": [],
              "className": "DeliveryRepository",
              "name": "findByOrderId",
              "packageAndClassName": "delivery.repository.DeliveryRepository"
            },
            {
              "parameters": [],
              "returnType": "List<Delivery>",
              "microserviceName": "ts-delivery-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "delivery.repository.DeliveryRepository"
                }
              ],
              "className": "DeliveryRepository",
              "name": "findAll",
              "packageAndClassName": "delivery.repository.DeliveryRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "delivery.repository.DeliveryRepository"
                }
              ],
              "returnType": "Optional<Delivery>",
              "microserviceName": "ts-delivery-service",
              "annotations": [],
              "className": "DeliveryRepository",
              "name": "findById",
              "packageAndClassName": "delivery.repository.DeliveryRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "delivery.repository.DeliveryRepository"
            }
          ],
          "methodCalls": [],
          "name": "DeliveryRepository",
          "path": "/ts-delivery-service/src/main/java/delivery/repository/DeliveryRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "delivery.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "UUID",
              "name": "orderId",
              "packageAndClassName": "delivery.entity.Delivery"
            },
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "delivery.entity.Delivery"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "AllArgsConstructor",
              "packageAndClassName": "delivery.entity.Delivery"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "delivery.entity.Delivery"
            }
          ],
          "methodCalls": [],
          "name": "Delivery",
          "path": "/ts-delivery-service/src/main/java/delivery/entity/Delivery.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "scope": "runtime",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-amqp"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "io.springfox",
                    "artifactId": "springfox-swagger2",
                    "version": "2.9.2"
                  },
                  {
                    "groupId": "io.springfox",
                    "artifactId": "springfox-swagger-ui",
                    "version": "2.9.2"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-delivery-service",
              "artifactId": "ts-delivery-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-delivery-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 18808
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-delivery-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${DELIVERY_MYSQL_HOST:ts-delivery-mysql}:${DELIVERY_MYSQL_PORT:3306}/${DELIVERY_MYSQL_DATABASE:ts-delivery-mysql}?useSSL=false",
                "username": "${DELIVERY_MYSQL_USER:root}",
                "password": "${DELIVERY_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "rabbitmq": {
                "host": "${rabbitmq_host:localhost}",
                "port": 5672
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-delivery-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-food-delivery-service",
      "path": "/ts-food-delivery-service",
      "controllers": [
        {
          "packageName": "food_delivery.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/fooddeliveryservice/orders/store/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "storeId",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/orders/store/{storeId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "className": "FoodDeliveryController",
              "name": "getFoodDeliveryOrderByStoreId",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "url": "/api/v1/fooddeliveryservice/orders/seatno",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "SeatInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "seatInfo",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/orders/seatno"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "className": "FoodDeliveryController",
              "name": "updateSeatNo",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "url": "/api/v1/fooddeliveryservice/orders",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "FoodDeliveryOrder",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "fd",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/orders"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "className": "FoodDeliveryController",
              "name": "createFoodDeliveryOrder",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "url": "/api/v1/fooddeliveryservice/orders/all",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/orders/all"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "className": "FoodDeliveryController",
              "name": "getAllFoodDeliveryOrders",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "url": "/api/v1/fooddeliveryservice/orders/dtime",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "DeliveryInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "deliveryInfo",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/orders/dtime"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "className": "FoodDeliveryController",
              "name": "updateDeliveryTime",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "url": "/api/v1/fooddeliveryservice/orders/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/orders/{orderId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "className": "FoodDeliveryController",
              "name": "getFoodDeliveryOrderById",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "url": "/api/v1/fooddeliveryservice/orders/d/{?}",
              "httpMethod": "DELETE",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "orderId",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/orders/d/{orderId}"
                  },
                  "name": "DeleteMapping",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "className": "FoodDeliveryController",
              "name": "deleteFoodDeliveryOrder",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "url": "/api/v1/fooddeliveryservice/orders/tripid",
              "httpMethod": "PUT",
              "parameters": [
                {
                  "type": "TripOrderInfo",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "tripOrderInfo",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/orders/tripid"
                  },
                  "name": "PutMapping",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "className": "FoodDeliveryController",
              "name": "updateTripId",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "url": "/api/v1/fooddeliveryservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
                }
              ],
              "className": "FoodDeliveryController",
              "name": "home",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            }
          ],
          "fields": [
            {
              "type": "FoodDeliveryService",
              "name": "foodDeliveryService",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/fooddeliveryservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "\"[Food Delivery Service][Create Food Delivery Order]\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "info",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "foodDeliveryService.createFoodDeliveryOrder(fd, headers)",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "ok",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "foodDeliveryService",
              "objectType": "FoodDeliveryService",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "fd,headers",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "createFoodDeliveryOrder",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "deleteFoodDeliveryOrder",
              "parameterContents": "\"[Food Delivery Service][Delete Food Delivery Order]\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "info",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "deleteFoodDeliveryOrder",
              "parameterContents": "foodDeliveryService.deleteFoodDeliveryOrder(orderId, headers)",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "ok",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "foodDeliveryService",
              "objectType": "FoodDeliveryService",
              "calledFrom": "deleteFoodDeliveryOrder",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "deleteFoodDeliveryOrder",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getFoodDeliveryOrderById",
              "parameterContents": "\"[Food Delivery Service][Get Food Delivery Order By Id]\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "info",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getFoodDeliveryOrderById",
              "parameterContents": "foodDeliveryService.getFoodDeliveryOrderById(orderId, headers)",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "ok",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "foodDeliveryService",
              "objectType": "FoodDeliveryService",
              "calledFrom": "getFoodDeliveryOrderById",
              "parameterContents": "orderId,headers",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "getFoodDeliveryOrderById",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getAllFoodDeliveryOrders",
              "parameterContents": "\"[Food Delivery Service][Get All Food Delivery Orders]\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "info",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllFoodDeliveryOrders",
              "parameterContents": "foodDeliveryService.getAllFoodDeliveryOrders(headers)",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "ok",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "foodDeliveryService",
              "objectType": "FoodDeliveryService",
              "calledFrom": "getAllFoodDeliveryOrders",
              "parameterContents": "headers",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "getAllFoodDeliveryOrders",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getFoodDeliveryOrderByStoreId",
              "parameterContents": "\"[Food Delivery Service][Get Food Delivery Order By StoreId]\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "info",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getFoodDeliveryOrderByStoreId",
              "parameterContents": "foodDeliveryService.getFoodDeliveryOrderByStoreId(storeId, headers)",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "ok",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "foodDeliveryService",
              "objectType": "FoodDeliveryService",
              "calledFrom": "getFoodDeliveryOrderByStoreId",
              "parameterContents": "storeId,headers",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "getFoodDeliveryOrderByStoreId",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateTripId",
              "parameterContents": "\"[Food Delivery Service][Update Trip Id]\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "info",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateTripId",
              "parameterContents": "foodDeliveryService.updateTripId(tripOrderInfo, headers)",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "ok",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "foodDeliveryService",
              "objectType": "FoodDeliveryService",
              "calledFrom": "updateTripId",
              "parameterContents": "tripOrderInfo,headers",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "updateTripId",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateSeatNo",
              "parameterContents": "\"[Food Delivery Service][Update Seat No]\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "info",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateSeatNo",
              "parameterContents": "foodDeliveryService.updateSeatNo(seatInfo, headers)",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "ok",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "foodDeliveryService",
              "objectType": "FoodDeliveryService",
              "calledFrom": "updateSeatNo",
              "parameterContents": "seatInfo,headers",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "updateSeatNo",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "\"[Food Delivery Service][Update Delivery Time]\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "info",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "foodDeliveryService.updateDeliveryTime(deliveryInfo, headers)",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "ok",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            },
            {
              "objectName": "foodDeliveryService",
              "objectType": "FoodDeliveryService",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "deliveryInfo,headers",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryController",
              "name": "updateDeliveryTime",
              "packageAndClassName": "food_delivery.controller.FoodDeliveryController"
            }
          ],
          "name": "FoodDeliveryController",
          "path": "/ts-food-delivery-service/src/main/java/food_delivery/controller/FoodDeliveryController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "food_delivery.service",
          "implementedTypes": [
            "FoodDeliveryService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "serviceName",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "returnType": "String",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [],
              "className": "FoodDeliveryServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                },
                {
                  "type": "TripOrderInfo",
                  "annotations": [],
                  "name": "tripInfo",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "className": "FoodDeliveryServiceImpl",
              "name": "updateTripId",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                },
                {
                  "type": "SeatInfo",
                  "annotations": [],
                  "name": "seatInfo",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "className": "FoodDeliveryServiceImpl",
              "name": "updateSeatNo",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "className": "FoodDeliveryServiceImpl",
              "name": "deleteFoodDeliveryOrder",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "className": "FoodDeliveryServiceImpl",
              "name": "getAllFoodDeliveryOrders",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                },
                {
                  "type": "FoodDeliveryOrder",
                  "annotations": [],
                  "name": "fd",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "className": "FoodDeliveryServiceImpl",
              "name": "createFoodDeliveryOrder",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "DeliveryInfo",
                  "annotations": [],
                  "name": "deliveryInfo",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-food-delivery-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
                }
              ],
              "className": "FoodDeliveryServiceImpl",
              "name": "updateDeliveryTime",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "type": "FoodDeliveryOrderRepository",
              "name": "foodDeliveryOrderRepository",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "fd",
              "objectType": "FoodDeliveryOrder",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getStationFoodStoreId",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "\"ts-station-food-service\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getServiceUrl",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "url": "/api/v1/stationfoodservice/stationfoodstores/bystoreid/{?}",
              "httpMethod": "GET",
              "objectName": "restTemplate",
              "objectType": "RestTemplate",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "staion_food_service_url + \"/api/v1/stationfoodservice/stationfoodstores/bystoreid/\" + stationFoodStoreId,HttpMethod.GET,new HttpEntity(headers),new ParameterizedTypeReference<Response<StationFoodStoreInfo>>() {\r\n}",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "exchange",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "getStationFoodStore",
              "objectType": "ResponseEntity",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getBody",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "result",
              "objectType": "Response",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getData",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "stationFoodStoreInfo",
              "objectType": "StationFoodStoreInfo",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getFoodList",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Food",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "Collectors.toMap(Food::getFoodName, Food::getPrice)",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "collect",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "storeFoodList",
              "objectType": "Food",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "stream",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "Collectors",
              "objectType": "Collectors",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "Food::getFoodName,Food::getPrice",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "toMap",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "fd",
              "objectType": "FoodDeliveryOrder",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getFoodList",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodPrice",
              "objectType": "Map",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "food.getFoodName()",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "get",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "food",
              "objectType": "Food",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "\"{}:{} have no such food: {}\",stationFoodStoreId,stationFoodStoreInfo.getStoreName(),food.getFoodName()",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "error",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "stationFoodStoreInfo",
              "objectType": "StationFoodStoreInfo",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getStoreName",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "food",
              "objectType": "Food",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getFoodName",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "stationFoodStoreInfo",
              "objectType": "StationFoodStoreInfo",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getDeliveryFee",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "fd",
              "objectType": "FoodDeliveryOrder",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "deliveryFee",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "setDeliveryFee",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "createFoodDeliveryOrder",
              "parameterContents": "fd",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "save",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "deleteFoodDeliveryOrder",
              "parameterContents": "null",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "orElse",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "deleteFoodDeliveryOrder",
              "parameterContents": "id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "findById",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "deleteFoodDeliveryOrder",
              "parameterContents": "\"[deleteFoodDeliveryOrder] No such food delivery order id: {}\",id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "error",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "deleteFoodDeliveryOrder",
              "parameterContents": "id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "deleteById",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "deleteFoodDeliveryOrder",
              "parameterContents": "\"[deleteFoodDeliveryOrder] Delete success, food delivery order id: {}\",id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "info",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "getFoodDeliveryOrderById",
              "parameterContents": "null",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "orElse",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "getFoodDeliveryOrderById",
              "parameterContents": "id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "findById",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getFoodDeliveryOrderById",
              "parameterContents": "\"[deleteFoodDeliveryOrder] No such food delivery order id: {}\",id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "error",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getFoodDeliveryOrderById",
              "parameterContents": "\"[getFoodDeliveryOrderById] Get success, food delivery order id: {}\",id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "info",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "getAllFoodDeliveryOrders",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "findAll",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getAllFoodDeliveryOrders",
              "parameterContents": "\"[getAllFoodDeliveryOrders] Food delivery orders query error\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "error",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getAllFoodDeliveryOrders",
              "parameterContents": "\"[getAllFoodDeliveryOrders] Get all food delivery orders success\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "info",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "getFoodDeliveryOrderByStoreId",
              "parameterContents": "storeId",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "findByStationFoodStoreId",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getFoodDeliveryOrderByStoreId",
              "parameterContents": "\"[getAllFoodDeliveryOrders] Food delivery orders query error\"",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "error",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getFoodDeliveryOrderByStoreId",
              "parameterContents": "\"[getAllFoodDeliveryOrders] Get food delivery orders by storeId {} success\",storeId",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "info",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "tripInfo",
              "objectType": "TripOrderInfo",
              "calledFrom": "updateTripId",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "tripInfo",
              "objectType": "TripOrderInfo",
              "calledFrom": "updateTripId",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "updateTripId",
              "parameterContents": "null",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "orElse",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "updateTripId",
              "parameterContents": "id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "findById",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateTripId",
              "parameterContents": "\"[updateTripId] No such delivery order id: {}\",id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "error",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "FoodDeliveryOrder",
              "calledFrom": "updateTripId",
              "parameterContents": "tripId",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "setTripId",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "updateTripId",
              "parameterContents": "t",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "save",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateTripId",
              "parameterContents": "\"[updateTripId] update tripId success. id:{}, tripId:{}\",id,tripId",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "info",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "seatInfo",
              "objectType": "SeatInfo",
              "calledFrom": "updateSeatNo",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "seatInfo",
              "objectType": "SeatInfo",
              "calledFrom": "updateSeatNo",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getSeatNo",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "updateSeatNo",
              "parameterContents": "null",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "orElse",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "updateSeatNo",
              "parameterContents": "id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "findById",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateSeatNo",
              "parameterContents": "\"[updateSeatNo] No such delivery order id: {}\",id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "error",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "FoodDeliveryOrder",
              "calledFrom": "updateSeatNo",
              "parameterContents": "seatNo",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "setSeatNo",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "updateSeatNo",
              "parameterContents": "t",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "save",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateSeatNo",
              "parameterContents": "\"[updateSeatNo] update seatNo success. id:{}, seatNo:{}\",id,seatNo",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "info",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "deliveryInfo",
              "objectType": "DeliveryInfo",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getOrderId",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "deliveryInfo",
              "objectType": "DeliveryInfo",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "getDeliveryTime",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "null",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "orElse",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "findById",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "\"[updateDeliveryTime] No such delivery order id: {}\",id",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "error",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "t",
              "objectType": "FoodDeliveryOrder",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "deliveryTime",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "setDeliveryTime",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "foodDeliveryOrderRepository",
              "objectType": "FoodDeliveryOrderRepository",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "t",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "save",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateDeliveryTime",
              "parameterContents": "\"[updateDeliveryTime] update deliveryTime success. id:{}, deliveryTime:{}\",id,deliveryTime",
              "microserviceName": "ts-food-delivery-service",
              "className": "FoodDeliveryServiceImpl",
              "name": "info",
              "packageAndClassName": "food_delivery.service.FoodDeliveryServiceImpl"
            }
          ],
          "name": "FoodDeliveryServiceImpl",
          "path": "/ts-food-delivery-service/src/main/java/food_delivery/service/FoodDeliveryServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [],
      "entities": [
        {
          "packageName": "food_delivery.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "food_delivery.entity.FoodDeliveryOrder"
            },
            {
              "type": "List<Food>",
              "name": "foodList",
              "packageAndClassName": "food_delivery.entity.FoodDeliveryOrder"
            },
            {
              "type": "int",
              "name": "seatNo",
              "packageAndClassName": "food_delivery.entity.FoodDeliveryOrder"
            },
            {
              "type": "double",
              "name": "deliveryFee",
              "packageAndClassName": "food_delivery.entity.FoodDeliveryOrder"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "uuid"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "food_delivery.entity.FoodDeliveryOrder"
            },
            {
              "attributes": {},
              "name": "AllArgsConstructor",
              "packageAndClassName": "food_delivery.entity.FoodDeliveryOrder"
            }
          ],
          "methodCalls": [],
          "name": "FoodDeliveryOrder",
          "path": "/ts-food-delivery-service/src/main/java/food_delivery/entity/FoodDeliveryOrder.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 18957
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-food-delivery-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${FOOD_DELIVERY_MYSQL_HOST:ts-food-delivery-mysql}:${FOOD_DELIVERY_MYSQL_PORT:3306}/${FOOD_DELIVERY_MYSQL_DATABASE:ts-food-delivery-mysql}?useSSL=false",
                "username": "${FOOD_DELIVERY_MYSQL_USER:root}",
                "password": "${FOOD_DELIVERY_MYSQL_PASSWORD:root}",
                "driver-class-name": "com.mysql.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "swagger": {
              "controllerPackage": "fooddelivery.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-food-delivery-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api",
                    "version": "2.0.2"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-food-delivery-service",
              "artifactId": "ts-food-delivery-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-food-delivery-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-gateway-service",
      "path": "/ts-gateway-service",
      "controllers": [],
      "services": [],
      "repositories": [],
      "entities": [],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 18888
            },
            "spring": {
              "main": {
                "web-application-type": "reactive"
              },
              "application": {
                "name": "ts-gateway-service"
              },
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:127.0.0.1:8848}"
                  }
                },
                "gateway": {
                  "routes": [
                    {
                      "id": "admin-basic-info",
                      "uri": "lb://${ADMIN_BASIC_INFO_SERVICE_HOST:ts-admin-basic-info-service}",
                      "predicates": [
                        "Path=/api/v1/adminbasicservice/**"
                      ]
                    },
                    {
                      "id": "admin-order",
                      "uri": "lb://${ADMIN_ORDER_SERVICE_HOST:ts-admin-order-service}",
                      "predicates": [
                        "Path=/api/v1/adminorderservice/**"
                      ]
                    },
                    {
                      "id": "admin-route",
                      "uri": "lb://${ADMIN_ROUTE_SERVICE_HOST:ts-admin-route-service}",
                      "predicates": [
                        "Path=/api/v1/adminrouteservice/**"
                      ]
                    },
                    {
                      "id": "admin-travel",
                      "uri": "lb://${ADMIN_TRAVEL_SERVICE_HOST:ts-admin-travel-service}",
                      "predicates": [
                        "Path=/api/v1/admintravelservice/**"
                      ]
                    },
                    {
                      "id": "admin-user",
                      "uri": "lb://${ADMIN_USER_SERVICE_HOST:ts-admin-user-service}",
                      "predicates": [
                        "Path=/api/v1/adminuserservice/users/**"
                      ]
                    },
                    {
                      "id": "assurance",
                      "uri": "lb://${ASSURANCE_SERVICE_HOST:ts-assurance-service}",
                      "predicates": [
                        "Path=/api/v1/assuranceservice/**"
                      ]
                    },
                    {
                      "id": "auth",
                      "uri": "lb://${AUTH_SERVICE_HOST:ts-auth-service}",
                      "predicates": [
                        "Path=/api/v1/auth/**"
                      ]
                    },
                    {
                      "id": "auth-user",
                      "uri": "lb://${AUTH_SERVICE_HOST:ts-auth-service}",
                      "predicates": [
                        "Path=/api/v1/users/**"
                      ]
                    },
                    {
                      "id": "avatar",
                      "uri": "lb://${AVATAR_SERVICE_HOST:ts-avatar-service}",
                      "predicates": [
                        "Path=/api/v1/avatar/**"
                      ]
                    },
                    {
                      "id": "basic",
                      "uri": "lb://${BASIC_SERVICE_HOST:ts-basic-service}",
                      "predicates": [
                        "Path=/api/v1/basicservice/**"
                      ]
                    },
                    {
                      "id": "cancel",
                      "uri": "lb://${CANCEL_SERVICE_HOST:ts-cancel-service}",
                      "predicates": [
                        "Path=/api/v1/cancelservice/**"
                      ]
                    },
                    {
                      "id": "config",
                      "uri": "lb://${CONFIG_SERVICE_HOST:ts-config-service}",
                      "predicates": [
                        "Path=/api/v1/configservice/**"
                      ]
                    },
                    {
                      "id": "consign-price",
                      "uri": "lb://${CONSIGN_PRICE_SERVICE_HOST:ts-consign-price-service}",
                      "predicates": [
                        "Path=/api/v1/consignpriceservice/**"
                      ]
                    },
                    {
                      "id": "consign",
                      "uri": "lb://${CONSIGN_SERVICE_HOST:ts-consign-service}",
                      "predicates": [
                        "Path=/api/v1/consignservice/**"
                      ]
                    },
                    {
                      "id": "contacts",
                      "uri": "lb://${CONTACTS_SERVICE_HOST:ts-contacts-service}",
                      "predicates": [
                        "Path=/api/v1/contactservice/**"
                      ]
                    },
                    {
                      "id": "execute",
                      "uri": "lb://${EXECUTE_SERVICE_HOST:ts-execute-service}",
                      "predicates": [
                        "Path=/api/v1/executeservice/**"
                      ]
                    },
                    {
                      "id": "food",
                      "uri": "lb://${FOOD_SERVICE_HOST:ts-food-service}",
                      "predicates": [
                        "Path=/api/v1/foodservice/**"
                      ]
                    },
                    {
                      "id": "inside-payment",
                      "uri": "lb://${INSIDE_PAYMENT_SERVICE_HOST:ts-inside-payment-service}",
                      "predicates": [
                        "Path=/api/v1/inside_pay_service/**"
                      ]
                    },
                    {
                      "id": "notification",
                      "uri": "lb://${NOTIFICATION_SERVICE_HOST:ts-notification-service}",
                      "predicates": [
                        "Path=/api/v1/notifyservice/**"
                      ]
                    },
                    {
                      "id": "order-other",
                      "uri": "lb://${ORDER_OTHER_SERVICE_HOST:ts-order-other-service}",
                      "predicates": [
                        "Path=/api/v1/orderOtherService/**"
                      ]
                    },
                    {
                      "id": "order",
                      "uri": "lb://${ORDER_SERVICE_HOST:ts-order-service}",
                      "predicates": [
                        "Path=/api/v1/orderservice/**"
                      ]
                    },
                    {
                      "id": "payment",
                      "uri": "lb://${PAYMENT_SERVICE_HOST:ts-payment-service}",
                      "predicates": [
                        "Path=/api/v1/paymentservice/**"
                      ]
                    },
                    {
                      "id": "preserve-other",
                      "uri": "lb://${PRESERVE_OTHER_SERVICE_HOST:ts-preserve-other-service}",
                      "predicates": [
                        "Path=/api/v1/preserveotherservice/**"
                      ]
                    },
                    {
                      "id": "preserve",
                      "uri": "lb://${PRESERVE_SERVICE_HOST:ts-preserve-service}",
                      "predicates": [
                        "Path=/api/v1/preserveservice/**"
                      ]
                    },
                    {
                      "id": "price",
                      "uri": "lb://${PRICE_SERVICE_HOST:ts-price-service}",
                      "predicates": [
                        "Path=/api/v1/priceservice/**"
                      ]
                    },
                    {
                      "id": "rebook",
                      "uri": "lb://${REBOOK_SERVICE_HOST:ts-rebook-service}",
                      "predicates": [
                        "Path=/api/v1/rebookservice/**"
                      ]
                    },
                    {
                      "id": "route-plan",
                      "uri": "lb://${ROUTE_PLAN_SERVICE_HOST:ts-route-plan-service}",
                      "predicates": [
                        "Path=/api/v1/routeplanservice/**"
                      ]
                    },
                    {
                      "id": "route",
                      "uri": "lb://${ROUTE_SERVICE_HOST:ts-route-service}",
                      "predicates": [
                        "Path=/api/v1/routeservice/**"
                      ]
                    },
                    {
                      "id": "seat",
                      "uri": "lb://${SEAT_SERVICE_HOST:ts-seat-service}",
                      "predicates": [
                        "Path=/api/v1/seatservice/**"
                      ]
                    },
                    {
                      "id": "security",
                      "uri": "lb://${SECURITY_SERVICE_HOST:ts-security-service}",
                      "predicates": [
                        "Path=/api/v1/securityservice/**"
                      ]
                    },
                    {
                      "id": "station-food",
                      "uri": "lb://${STATION_FOOD_SERVICE_HOST:ts-station-food-service}",
                      "predicates": [
                        "Path=/api/v1/stationfoodservice/**"
                      ]
                    },
                    {
                      "id": "station",
                      "uri": "lb://${STATION_SERVICE_HOST:ts-station-service}",
                      "predicates": [
                        "Path=/api/v1/stationservice/**"
                      ]
                    },
                    {
                      "id": "train-food",
                      "uri": "lb://${TRAIN_FOOD_SERVICE_HOST:ts-train-food-service}",
                      "predicates": [
                        "Path=/api/v1/trainfoodservice/**"
                      ]
                    },
                    {
                      "id": "train",
                      "uri": "lb://${TRAIN_SERVICE_HOST:ts-train-service}",
                      "predicates": [
                        "Path=/api/v1/trainservice/**"
                      ]
                    },
                    {
                      "id": "travel2",
                      "uri": "lb://${TRAVEL2_SERVICE_HOST:ts-travel2-service}",
                      "predicates": [
                        "Path=/api/v1/travel2service/**"
                      ]
                    },
                    {
                      "id": "travel-plan",
                      "uri": "lb://${TRAVEL_PLAN_SERVICE_HOST:ts-travel-plan-service}",
                      "predicates": [
                        "Path=/api/v1/travelplanservice/**"
                      ]
                    },
                    {
                      "id": "travel",
                      "uri": "lb://${TRAVEL_SERVICE_HOST:ts-travel-service}",
                      "predicates": [
                        "Path=/api/v1/travelservice/**"
                      ]
                    },
                    {
                      "id": "user",
                      "uri": "lb://${USER_SERVICE_HOST:ts-user-service}",
                      "predicates": [
                        "Path=/api/v1/userservice/users/**"
                      ]
                    },
                    {
                      "id": "verification-code",
                      "uri": "lb://${VERIFICATION_CODE_SERVICE_HOST:ts-verification-code-service}",
                      "predicates": [
                        "Path=/api/v1/verifycode/**"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "name": "application.yml",
          "path": "/ts-gateway-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.cloud",
                    "artifactId": "spring-cloud-starter-gateway"
                  },
                  {
                    "groupId": "io.netty",
                    "artifactId": "netty-all"
                  },
                  {
                    "groupId": "com.alibaba.csp",
                    "artifactId": "sentinel-spring-cloud-gateway-adapter"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-gateway-service",
              "artifactId": "ts-gateway-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-gateway-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-station-food-service",
      "path": "/ts-station-food-service",
      "controllers": [
        {
          "packageName": "food.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/stationfoodservice/stationfoodstores",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "food.controller.StationFoodController"
                    }
                  ],
                  "name": "stationNameList",
                  "packageAndClassName": "food.controller.StationFoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "food.controller.StationFoodController"
                },
                {
                  "attributes": {
                    "default": "/stationfoodstores"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "food.controller.StationFoodController"
                }
              ],
              "className": "StationFoodController",
              "name": "getFoodStoresByStationNames",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "url": "/api/v1/stationfoodservice/stationfoodstores/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "food.controller.StationFoodController"
                    }
                  ],
                  "name": "stationName",
                  "packageAndClassName": "food.controller.StationFoodController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food.controller.StationFoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food.controller.StationFoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "food.controller.StationFoodController"
                },
                {
                  "attributes": {
                    "default": "/stationfoodstores/{stationId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "food.controller.StationFoodController"
                }
              ],
              "className": "StationFoodController",
              "name": "getFoodStoresOfStation",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "url": "/api/v1/stationfoodservice/stationfoodstores",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food.controller.StationFoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food.controller.StationFoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "food.controller.StationFoodController"
                },
                {
                  "attributes": {
                    "default": "/stationfoodstores"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "food.controller.StationFoodController"
                }
              ],
              "className": "StationFoodController",
              "name": "getAllFoodStores",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "url": "/api/v1/stationfoodservice/stationfoodstores/bystoreid/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "food.controller.StationFoodController"
                    }
                  ],
                  "name": "stationFoodStoreId",
                  "packageAndClassName": "food.controller.StationFoodController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "food.controller.StationFoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "food.controller.StationFoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {
                    "default": "/stationfoodstores/bystoreid/{stationFoodStoreId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "food.controller.StationFoodController"
                }
              ],
              "className": "StationFoodController",
              "name": "getFoodListByStationFoodStoreId",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "url": "/api/v1/stationfoodservice/stationfoodstores/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/stationfoodstores/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "food.controller.StationFoodController"
                }
              ],
              "className": "StationFoodController",
              "name": "home",
              "packageAndClassName": "food.controller.StationFoodController"
            }
          ],
          "fields": [
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "type": "StationFoodService",
              "name": "stationFoodService",
              "packageAndClassName": "food.controller.StationFoodController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/stationfoodservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "food.controller.StationFoodController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllFoodStores",
              "parameterContents": "\"[Food Map Service][Get All FoodStores]\"",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "info",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllFoodStores",
              "parameterContents": "stationFoodService.listFoodStores(headers)",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "ok",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "stationFoodService",
              "objectType": "StationFoodService",
              "calledFrom": "getAllFoodStores",
              "parameterContents": "headers",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "listFoodStores",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getFoodStoresOfStation",
              "parameterContents": "\"[Food Map Service][Get FoodStores By StationName]\"",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "info",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getFoodStoresOfStation",
              "parameterContents": "stationFoodService.listFoodStoresByStationName(stationName, headers)",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "ok",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "stationFoodService",
              "objectType": "StationFoodService",
              "calledFrom": "getFoodStoresOfStation",
              "parameterContents": "stationName,headers",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "listFoodStoresByStationName",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getFoodStoresByStationNames",
              "parameterContents": "\"[Food Map Service][Get FoodStores By StationNames]\"",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "info",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getFoodStoresByStationNames",
              "parameterContents": "stationFoodService.getFoodStoresByStationNames(stationNameList)",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "ok",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "stationFoodService",
              "objectType": "StationFoodService",
              "calledFrom": "getFoodStoresByStationNames",
              "parameterContents": "stationNameList",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "getFoodStoresByStationNames",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getFoodListByStationFoodStoreId",
              "parameterContents": "\"[Food Map Service][Get Foodlist By stationFoodStoreId]\"",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "info",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getFoodListByStationFoodStoreId",
              "parameterContents": "stationFoodService.getStaionFoodStoreById(stationFoodStoreId)",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "ok",
              "packageAndClassName": "food.controller.StationFoodController"
            },
            {
              "objectName": "stationFoodService",
              "objectType": "StationFoodService",
              "calledFrom": "getFoodListByStationFoodStoreId",
              "parameterContents": "stationFoodStoreId",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodController",
              "name": "getStaionFoodStoreById",
              "packageAndClassName": "food.controller.StationFoodController"
            }
          ],
          "name": "StationFoodController",
          "path": "/ts-station-food-service/src/main/java/food/controller/StationFoodController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "food.service",
          "implementedTypes": [
            "StationFoodService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stationNames",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                }
              ],
              "className": "StationFoodServiceImpl",
              "name": "getFoodStoresByStationNames",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                }
              ],
              "className": "StationFoodServiceImpl",
              "name": "listFoodStoresByStationName",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                }
              ],
              "className": "StationFoodServiceImpl",
              "name": "getStaionFoodStoreById",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                }
              ],
              "className": "StationFoodServiceImpl",
              "name": "listFoodStores",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                },
                {
                  "type": "StationFoodStore",
                  "annotations": [],
                  "name": "fs",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.service.StationFoodServiceImpl"
                }
              ],
              "className": "StationFoodServiceImpl",
              "name": "createFoodStore",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "StationFoodRepository",
              "name": "stationFoodRepository",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createFoodStore",
              "parameterContents": "null",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "orElse",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "stationFoodRepository",
              "objectType": "StationFoodRepository",
              "calledFrom": "createFoodStore",
              "parameterContents": "fs.getId()",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "findById",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "fs",
              "objectType": "StationFoodStore",
              "calledFrom": "createFoodStore",
              "parameterContents": "",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "getId",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createFoodStore",
              "parameterContents": "\"[Init FoodStore] Already Exists Id: {}\",fs.getId()",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "error",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "fs",
              "objectType": "StationFoodStore",
              "calledFrom": "createFoodStore",
              "parameterContents": "",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "getId",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "stationFoodRepository",
              "objectType": "StationFoodRepository",
              "calledFrom": "createFoodStore",
              "parameterContents": "fs",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "save",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "e",
              "objectType": "Exception",
              "calledFrom": "createFoodStore",
              "parameterContents": "",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "getMessage",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "stationFoodRepository",
              "objectType": "StationFoodRepository",
              "calledFrom": "listFoodStores",
              "parameterContents": "",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "findAll",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "stationFoodStores",
              "objectType": "StationFoodStore",
              "calledFrom": "listFoodStores",
              "parameterContents": "",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "listFoodStores",
              "parameterContents": "\"List food stores error: {}\",\"Food store is empty\"",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "error",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "stationFoodRepository",
              "objectType": "StationFoodRepository",
              "calledFrom": "listFoodStoresByStationName",
              "parameterContents": "stationName",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "findByStationName",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "stationFoodStoreList",
              "objectType": "StationFoodStore",
              "calledFrom": "listFoodStoresByStationName",
              "parameterContents": "",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "listFoodStoresByStationName",
              "parameterContents": "\"List food stores by station id error: {}, stationName: {}\",\"Food store is empty\",stationName",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "error",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "stationFoodRepository",
              "objectType": "StationFoodRepository",
              "calledFrom": "getFoodStoresByStationNames",
              "parameterContents": "stationNames",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "findByStationNameIn",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getFoodStoresByStationNames",
              "parameterContents": "\"List food stores by station ids error: {}, stationName list: {}\",\"Food store is empty\",stationNames",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "error",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "StationFoodRepository",
              "calledFrom": "getStaionFoodStoreById",
              "parameterContents": "null",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "orElse",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "stationFoodRepository",
              "objectType": "StationFoodRepository",
              "calledFrom": "getStaionFoodStoreById",
              "parameterContents": "id",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "findById",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getStaionFoodStoreById",
              "parameterContents": "\"no such staionFoodStoreId: {}\",id",
              "microserviceName": "ts-station-food-service",
              "className": "StationFoodServiceImpl",
              "name": "error",
              "packageAndClassName": "food.service.StationFoodServiceImpl"
            }
          ],
          "name": "StationFoodServiceImpl",
          "path": "/ts-station-food-service/src/main/java/food/service/StationFoodServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "food.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "food.repository.StationFoodRepository"
                }
              ],
              "returnType": "Optional<StationFoodStore>",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.repository.StationFoodRepository"
                }
              ],
              "className": "StationFoodRepository",
              "name": "findById",
              "packageAndClassName": "food.repository.StationFoodRepository"
            },
            {
              "parameters": [
                {
                  "type": "List<String>",
                  "annotations": [],
                  "name": "stationNames",
                  "packageAndClassName": "food.repository.StationFoodRepository"
                }
              ],
              "returnType": "List<StationFoodStore>",
              "microserviceName": "ts-station-food-service",
              "annotations": [],
              "className": "StationFoodRepository",
              "name": "findByStationNameIn",
              "packageAndClassName": "food.repository.StationFoodRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "stationName",
                  "packageAndClassName": "food.repository.StationFoodRepository"
                }
              ],
              "returnType": "List<StationFoodStore>",
              "microserviceName": "ts-station-food-service",
              "annotations": [],
              "className": "StationFoodRepository",
              "name": "findByStationName",
              "packageAndClassName": "food.repository.StationFoodRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "food.repository.StationFoodRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.repository.StationFoodRepository"
                }
              ],
              "className": "StationFoodRepository",
              "name": "deleteById",
              "packageAndClassName": "food.repository.StationFoodRepository"
            },
            {
              "parameters": [],
              "returnType": "List<StationFoodStore>",
              "microserviceName": "ts-station-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "food.repository.StationFoodRepository"
                }
              ],
              "className": "StationFoodRepository",
              "name": "findAll",
              "packageAndClassName": "food.repository.StationFoodRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "food.repository.StationFoodRepository"
            }
          ],
          "methodCalls": [],
          "name": "StationFoodRepository",
          "path": "/ts-station-food-service/src/main/java/food/repository/StationFoodRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "food.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "food.entity.StationFoodStore"
            },
            {
              "type": "List<Food>",
              "name": "foodList",
              "packageAndClassName": "food.entity.StationFoodStore"
            },
            {
              "type": "double",
              "name": "deliveryFee",
              "packageAndClassName": "food.entity.StationFoodStore"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Table",
              "packageAndClassName": "food.entity.StationFoodStore"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "food.entity.StationFoodStore"
            }
          ],
          "methodCalls": [],
          "name": "StationFoodStore",
          "path": "/ts-station-food-service/src/main/java/food/entity/StationFoodStore.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "server": {
              "port": 18855
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:127.0.0.1:8848}"
                  }
                }
              },
              "application": {
                "name": "ts-station-food-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${STATION_FOOD_MYSQL_HOST:10.176.122.1}:${STATION_FOOD_MYSQL_PORT:3306}/${STATION_FOOD_MYSQL_DATABASE:ts}?useSSL=false",
                "username": "${STATION_FOOD_MYSQL_USER:root}",
                "password": "${STATION_FOOD_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "swagger": {
              "controllerPackage": "food.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-station-food-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api",
                    "version": "2.0.2"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-station-food-service",
              "artifactId": "ts-station-food-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-station-food-service/pom.xml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-train-food-service",
      "path": "/ts-train-food-service",
      "controllers": [
        {
          "packageName": "trainFood.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/trainfoodservice/trainfoods/{?}",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "String",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "PathVariable",
                      "packageAndClassName": "trainFood.controller.TrainFoodController"
                    }
                  ],
                  "name": "tripId",
                  "packageAndClassName": "trainFood.controller.TrainFoodController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "trainFood.controller.TrainFoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "trainFood.controller.TrainFoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-train-food-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "trainFood.controller.TrainFoodController"
                },
                {
                  "attributes": {
                    "default": "/trainfoods/{tripId}"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "trainFood.controller.TrainFoodController"
                }
              ],
              "className": "TrainFoodController",
              "name": "getTrainFoodOfTrip",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            },
            {
              "url": "/api/v1/trainfoodservice/trainfoods/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-train-food-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/trainfoods/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "trainFood.controller.TrainFoodController"
                }
              ],
              "className": "TrainFoodController",
              "name": "home",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            },
            {
              "url": "/api/v1/trainfoodservice/trainfoods",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "trainFood.controller.TrainFoodController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "trainFood.controller.TrainFoodController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-train-food-service",
              "annotations": [
                {
                  "attributes": {
                    "origins": "*"
                  },
                  "name": "CrossOrigin",
                  "packageAndClassName": "trainFood.controller.TrainFoodController"
                },
                {
                  "attributes": {
                    "default": "/trainfoods"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "trainFood.controller.TrainFoodController"
                }
              ],
              "className": "TrainFoodController",
              "name": "getAllTrainFood",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            }
          ],
          "fields": [
            {
              "type": "TrainFoodService",
              "name": "trainFoodService",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            },
            {
              "attributes": {
                "default": "/api/v1/trainfoodservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllTrainFood",
              "parameterContents": "\"[Food Map Service][Get All TrainFoods]\"",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodController",
              "name": "info",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllTrainFood",
              "parameterContents": "trainFoodService.listTrainFood(headers)",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodController",
              "name": "ok",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            },
            {
              "objectName": "trainFoodService",
              "objectType": "TrainFoodService",
              "calledFrom": "getAllTrainFood",
              "parameterContents": "headers",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodController",
              "name": "listTrainFood",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getTrainFoodOfTrip",
              "parameterContents": "\"[Food Map Service][Get TrainFoods By TripId]\"",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodController",
              "name": "info",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getTrainFoodOfTrip",
              "parameterContents": "trainFoodService.listTrainFoodByTripId(tripId, headers)",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodController",
              "name": "ok",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            },
            {
              "objectName": "trainFoodService",
              "objectType": "TrainFoodService",
              "calledFrom": "getTrainFoodOfTrip",
              "parameterContents": "tripId,headers",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodController",
              "name": "listTrainFoodByTripId",
              "packageAndClassName": "trainFood.controller.TrainFoodController"
            }
          ],
          "name": "TrainFoodController",
          "path": "/ts-train-food-service/src/main/java/trainFood/controller/TrainFoodController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "trainFood.service",
          "implementedTypes": [
            "TrainFoodService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-train-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
                }
              ],
              "className": "TrainFoodServiceImpl",
              "name": "listTrainFood",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
                },
                {
                  "type": "TrainFood",
                  "annotations": [],
                  "name": "tf",
                  "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
                }
              ],
              "returnType": "TrainFood",
              "microserviceName": "ts-train-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
                }
              ],
              "className": "TrainFoodServiceImpl",
              "name": "createTrainFood",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-train-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
                }
              ],
              "className": "TrainFoodServiceImpl",
              "name": "listTrainFoodByTripId",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "type": "TrainFoodRepository",
              "name": "trainFoodRepository",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "trainFoodRepository",
              "objectType": "TrainFoodRepository",
              "calledFrom": "createTrainFood",
              "parameterContents": "tf.getTripId()",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "tf",
              "objectType": "TrainFood",
              "calledFrom": "createTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "TrainFood",
              "calledFrom": "createTrainFood",
              "parameterContents": "tf.getFoodList()",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "equals",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "tfTemp",
              "objectType": "TrainFood",
              "calledFrom": "createTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "getFoodList",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "tf",
              "objectType": "TrainFood",
              "calledFrom": "createTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "getFoodList",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createTrainFood",
              "parameterContents": "\"[Init TrainFood] Already Exists TripId: {}\",tf.getTripId()",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "error",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "tf",
              "objectType": "TrainFood",
              "calledFrom": "createTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "tfTemp",
              "objectType": "TrainFood",
              "calledFrom": "createTrainFood",
              "parameterContents": "tf.getFoodList()",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "setFoodList",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "tf",
              "objectType": "TrainFood",
              "calledFrom": "createTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "getFoodList",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "trainFoodRepository",
              "objectType": "TrainFoodRepository",
              "calledFrom": "createTrainFood",
              "parameterContents": "tfTemp",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "save",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "trainFoodRepository",
              "objectType": "TrainFoodRepository",
              "calledFrom": "createTrainFood",
              "parameterContents": "tf",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "save",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "trainFoodRepository",
              "objectType": "TrainFoodRepository",
              "calledFrom": "listTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "findAll",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "trainFoodList",
              "objectType": "TrainFood",
              "calledFrom": "listTrainFood",
              "parameterContents": "",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "listTrainFood",
              "parameterContents": "\"List train food error: {}\",noContent",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "error",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "trainFoodRepository",
              "objectType": "TrainFoodRepository",
              "calledFrom": "listTrainFoodByTripId",
              "parameterContents": "tripId",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "findByTripId",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            },
            {
              "objectName": "tf",
              "objectType": "TrainFood",
              "calledFrom": "listTrainFoodByTripId",
              "parameterContents": "",
              "microserviceName": "ts-train-food-service",
              "className": "TrainFoodServiceImpl",
              "name": "getFoodList",
              "packageAndClassName": "trainFood.service.TrainFoodServiceImpl"
            }
          ],
          "name": "TrainFoodServiceImpl",
          "path": "/ts-train-food-service/src/main/java/trainFood/service/TrainFoodServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "trainFood.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [],
              "returnType": "List<TrainFood>",
              "microserviceName": "ts-train-food-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "trainFood.repository.TrainFoodRepository"
                }
              ],
              "className": "TrainFoodRepository",
              "name": "findAll",
              "packageAndClassName": "trainFood.repository.TrainFoodRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "tripId",
                  "packageAndClassName": "trainFood.repository.TrainFoodRepository"
                }
              ],
              "returnType": "TrainFood",
              "microserviceName": "ts-train-food-service",
              "annotations": [],
              "className": "TrainFoodRepository",
              "name": "findByTripId",
              "packageAndClassName": "trainFood.repository.TrainFoodRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "trainFood.repository.TrainFoodRepository"
                }
              ],
              "returnType": "TrainFood",
              "microserviceName": "ts-train-food-service",
              "annotations": [],
              "className": "TrainFoodRepository",
              "name": "findById",
              "packageAndClassName": "trainFood.repository.TrainFoodRepository"
            },
            {
              "parameters": [
                {
                  "type": "UUID",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "trainFood.repository.TrainFoodRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-train-food-service",
              "annotations": [],
              "className": "TrainFoodRepository",
              "name": "deleteById",
              "packageAndClassName": "trainFood.repository.TrainFoodRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "trainFood.repository.TrainFoodRepository"
            }
          ],
          "methodCalls": [],
          "name": "TrainFoodRepository",
          "path": "/ts-train-food-service/src/main/java/trainFood/repository/TrainFoodRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "trainFood.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "trainFood.entity.TrainFood"
            },
            {
              "type": "List<Food>",
              "name": "foodList",
              "packageAndClassName": "trainFood.entity.TrainFood"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Data",
              "packageAndClassName": "trainFood.entity.TrainFood"
            },
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "org.hibernate.id.UUIDGenerator"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "trainFood.entity.TrainFood"
            }
          ],
          "methodCalls": [],
          "name": "TrainFood",
          "path": "/ts-train-food-service/src/main/java/trainFood/entity/TrainFood.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "mysql",
                    "scope": "runtime",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "artifactId": "jakarta.validation-api"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-train-food-service",
              "artifactId": "ts-train-food-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-train-food-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 19999
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:nacos-0.nacos-headless.default.svc.cluster.local,nacos-1.nacos-headless.default.svc.cluster.local,nacos-2.nacos-headless.default.svc.cluster.local}"
                  }
                }
              },
              "application": {
                "name": "ts-train-food-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${TRAIN_FOOD_MYSQL_HOST:ts-train-food-mysql}:${TRAIN_FOOD_MYSQL_PORT:3306}/${TRAIN_FOOD_MYSQL_DATABASE:ts-train-food-mysql}?useSSL=false",
                "username": "${TRAIN_FOOD_MYSQL_USER:root}",
                "password": "${TRAIN_FOOD_MYSQL_PASSWORD:root}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "swagger": {
              "controllerPackage": "trainFood.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-train-food-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    },
    {
      "name": "ts-wait-order-service",
      "path": "/ts-wait-order-service",
      "controllers": [
        {
          "packageName": "waitorder.controller",
          "implementedTypes": [],
          "classRole": "CONTROLLER",
          "methods": [
            {
              "url": "/api/v1/waitorderservice/waitlistorders",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "waitorder.controller.WaitListOrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "waitorder.controller.WaitListOrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/waitlistorders"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "waitorder.controller.WaitListOrderController"
                }
              ],
              "className": "WaitListOrderController",
              "name": "getWaitListOrders",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "url": "/api/v1/waitorderservice/orders",
              "httpMethod": "GET",
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "waitorder.controller.WaitListOrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "waitorder.controller.WaitListOrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/orders"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "waitorder.controller.WaitListOrderController"
                }
              ],
              "className": "WaitListOrderController",
              "name": "getAllOrders",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "url": "/api/v1/waitorderservice/order",
              "httpMethod": "POST",
              "parameters": [
                {
                  "type": "WaitListOrderVO",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestBody",
                      "packageAndClassName": "waitorder.controller.WaitListOrderController"
                    }
                  ],
                  "name": "createOrder",
                  "packageAndClassName": "waitorder.controller.WaitListOrderController"
                },
                {
                  "type": "HttpHeaders",
                  "annotations": [
                    {
                      "attributes": {},
                      "name": "RequestHeader",
                      "packageAndClassName": "waitorder.controller.WaitListOrderController"
                    }
                  ],
                  "name": "headers",
                  "packageAndClassName": "waitorder.controller.WaitListOrderController"
                }
              ],
              "returnType": "HttpEntity",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/order"
                  },
                  "name": "PostMapping",
                  "packageAndClassName": "waitorder.controller.WaitListOrderController"
                }
              ],
              "className": "WaitListOrderController",
              "name": "createNewOrder",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "url": "/api/v1/waitorderservice/welcome",
              "httpMethod": "GET",
              "parameters": [],
              "returnType": "String",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {
                    "path": "/welcome"
                  },
                  "name": "GetMapping",
                  "packageAndClassName": "waitorder.controller.WaitListOrderController"
                }
              ],
              "className": "WaitListOrderController",
              "name": "home",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            }
          ],
          "fields": [
            {
              "type": "WaitListOrderService",
              "name": "waitListOrderService",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "default": "/api/v1/waitorderservice"
              },
              "name": "RequestMapping",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "attributes": {},
              "name": "RestController",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            }
          ],
          "methodCalls": [
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "createNewOrder",
              "parameterContents": "\"[createWaitOrder][Create Wait Order][from {} to {} at {}]\",createOrder.getFrom(),createOrder.getTo(),createOrder.getDate()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "info",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "createOrder",
              "objectType": "WaitListOrderVO",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "getFrom",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "createOrder",
              "objectType": "WaitListOrderVO",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "getTo",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "createOrder",
              "objectType": "WaitListOrderVO",
              "calledFrom": "createNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "getDate",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "createNewOrder",
              "parameterContents": "waitListOrderService.create(createOrder, headers)",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "ok",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "waitListOrderService",
              "objectType": "WaitListOrderService",
              "calledFrom": "createNewOrder",
              "parameterContents": "createOrder,headers",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "create",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Get All Orders]\"",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "info",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllOrders",
              "parameterContents": "waitListOrderService.getAllOrders(headers)",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "ok",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "waitListOrderService",
              "objectType": "WaitListOrderService",
              "calledFrom": "getAllOrders",
              "parameterContents": "headers",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "getAllOrders",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getWaitListOrders",
              "parameterContents": "\"[getWaitListOrders][Get All Wait List Orders]\"",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "info",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getWaitListOrders",
              "parameterContents": "waitListOrderService.getAllWaitListOrders(headers)",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "ok",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            },
            {
              "objectName": "waitListOrderService",
              "objectType": "WaitListOrderService",
              "calledFrom": "getWaitListOrders",
              "parameterContents": "headers",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderController",
              "name": "getAllWaitListOrders",
              "packageAndClassName": "waitorder.controller.WaitListOrderController"
            }
          ],
          "name": "WaitListOrderController",
          "path": "/ts-wait-order-service/src/main/java/waitorder/controller/WaitListOrderController.java",
          "fileType": "JCLASS"
        }
      ],
      "services": [
        {
          "packageName": "waitorder.service.Impl",
          "implementedTypes": [
            "WaitListOrderService"
          ],
          "classRole": "SERVICE",
          "methods": [
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "className": "WaitListOrderServiceImpl",
              "name": "getAllOrders",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                },
                {
                  "type": "WaitListOrderVO",
                  "annotations": [],
                  "name": "orderVO",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "returnType": "Response<WaitListOrder>",
              "microserviceName": "ts-wait-order-service",
              "annotations": [],
              "className": "WaitListOrderServiceImpl",
              "name": "saveNewOrder",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                },
                {
                  "type": "WaitListOrder",
                  "annotations": [],
                  "name": "orderPO",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                },
                {
                  "type": "WaitListOrderVO",
                  "annotations": [],
                  "name": "orderVO",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-wait-order-service",
              "annotations": [],
              "className": "WaitListOrderServiceImpl",
              "name": "triggerThread",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                },
                {
                  "type": "WaitListOrderVO",
                  "annotations": [],
                  "name": "orderVO",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Transactional",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "className": "WaitListOrderServiceImpl",
              "name": "create",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "className": "WaitListOrderServiceImpl",
              "name": "findOrderById",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "int",
                  "annotations": [],
                  "name": "status",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                },
                {
                  "type": "String",
                  "annotations": [],
                  "name": "orderId",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Transactional",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "className": "WaitListOrderServiceImpl",
              "name": "modifyWaitListOrderStatus",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "WaitListOrderVO",
                  "annotations": [],
                  "name": "newOrder",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                },
                {
                  "type": "List<WaitListOrder>",
                  "annotations": [],
                  "name": "orderList",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "returnType": "Boolean",
              "microserviceName": "ts-wait-order-service",
              "annotations": [],
              "className": "WaitListOrderServiceImpl",
              "name": "WaitListOrderExist",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "parameters": [
                {
                  "type": "HttpHeaders",
                  "annotations": [],
                  "name": "headers",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                },
                {
                  "type": "WaitListOrder",
                  "annotations": [],
                  "name": "order",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "returnType": "Response",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Transactional",
                  "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
                }
              ],
              "className": "WaitListOrderServiceImpl",
              "name": "updateOrder",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            }
          ],
          "fields": [
            {
              "type": "DiscoveryClient",
              "name": "discoveryClient",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "type": "String",
              "name": "success",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "type": "Logger",
              "name": "LOGGER",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "type": "WaitListOrderRepository",
              "name": "waitListOrderRepository",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "type": "RestTemplate",
              "name": "restTemplate",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            }
          ],
          "annotations": [
            {
              "attributes": {},
              "name": "Service",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            }
          ],
          "methodCalls": [
            {
              "objectName": "waitListOrderRepository",
              "objectType": "WaitListOrderRepository",
              "calledFrom": "findOrderById",
              "parameterContents": "id",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "WaitListOrder",
              "calledFrom": "findOrderById",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "findOrderById",
              "parameterContents": "\"[findWaitOrderById][Find Order By Id Fail][No content][id: {}] \",id",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "WaitListOrder",
              "calledFrom": "findOrderById",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "get",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "findOrderById",
              "parameterContents": "\"[findWaitOrderById][Find Order By Id Success][id: {}] \",id",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "create",
              "parameterContents": "\"[create][Create Wait Order][Ready to Create Wait Order]\"",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "create",
              "parameterContents": "orderVO,headers",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "saveNewOrder",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "create",
              "parameterContents": "response.getData(),orderVO,headers",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "triggerThread",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "response",
              "objectType": "Response",
              "calledFrom": "create",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getData",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "waitListOrderRepository",
              "objectType": "WaitListOrderRepository",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "findAll",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderList",
              "objectType": "WaitListOrder",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Find all orders Success][size:{}]\",orderList.size()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderList",
              "objectType": "WaitListOrder",
              "calledFrom": "getAllOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "size",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getAllOrders",
              "parameterContents": "\"[getAllOrders][Find All Wait List Orders Fail][{}]\",\"No content\"",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "waitListOrderRepository",
              "objectType": "WaitListOrderRepository",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "findAll",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderList",
              "objectType": "WaitListOrder",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "isEmpty",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "\"[getAllWaitListOrders][Find all orders Success][size:{}]\",orderList.size()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderList",
              "objectType": "WaitListOrder",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "size",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "filterList",
              "objectType": "List",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "WaitListOrderStatus.NOTPAID.getCode()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "add",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "NOTPAID",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "filterList",
              "objectType": "List",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "WaitListOrderStatus.PAID.getCode()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "add",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "PAID",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getCode",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "Collectors.toList()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "collect",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "WaitListOrder",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "WaitListOrder -> filterList.contains(WaitListOrder.getStatus())",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "filter",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderList",
              "objectType": "WaitListOrder",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "stream",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "filterList",
              "objectType": "List",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "WaitListOrder.getStatus()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "contains",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "WaitListOrder",
              "objectType": "",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getStatus",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "Collectors",
              "objectType": "Collectors",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "toList",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "getAllWaitListOrders",
              "parameterContents": "\"[getAllWaitListOrders][Find All Wait List Orders Fail][{}]\",\"No content\"",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "warn",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Update Wait List Order][Order Info:{}] \",order.toString()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "WaitListOrder",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "waitListOrderRepository",
              "objectType": "WaitListOrderRepository",
              "calledFrom": "updateOrder",
              "parameterContents": "order.getId()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "WaitListOrder",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "WaitListOrder",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Update Order Info Fail][Order not found][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "error",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "WaitListOrder",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "WaitListOrder",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "get",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "BeanUtils",
              "objectType": "Solving BeanUtils",
              "calledFrom": "updateOrder",
              "parameterContents": "old,order",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "copyProperties",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "waitListOrderRepository",
              "objectType": "WaitListOrderRepository",
              "calledFrom": "updateOrder",
              "parameterContents": "old",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "save",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "updateOrder",
              "parameterContents": "\"[updateOrder][Update Wait List Order Info Success][OrderId: {}]\",order.getId()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "WaitListOrder",
              "calledFrom": "updateOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "modifyWaitListOrderStatus",
              "parameterContents": "\"[modifyWaitListOrderStatus][Modify Order Status][OrderId:{}] \",orderId",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "waitListOrderRepository",
              "objectType": "WaitListOrderRepository",
              "calledFrom": "modifyWaitListOrderStatus",
              "parameterContents": "orderId",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "findById",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "WaitListOrder",
              "calledFrom": "modifyWaitListOrderStatus",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "isPresent",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "modifyWaitListOrderStatus",
              "parameterContents": "\"[modifyWaitListOrderStatus][Modify Order Status Fail][Order not found][OrderId: {}]\",orderId",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "error",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "op",
              "objectType": "WaitListOrder",
              "calledFrom": "modifyWaitListOrderStatus",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "get",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "old",
              "objectType": "WaitListOrder",
              "calledFrom": "modifyWaitListOrderStatus",
              "parameterContents": "status",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "setStatus",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "waitListOrderRepository",
              "objectType": "WaitListOrderRepository",
              "calledFrom": "modifyWaitListOrderStatus",
              "parameterContents": "old",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "save",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "LOGGER",
              "objectType": "Logger",
              "calledFrom": "modifyWaitListOrderStatus",
              "parameterContents": "\"[modifyWaitListOrderStatus][Modify Order Status Success][OrderId: {}]\",orderId",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "waitListOrderRepository",
              "objectType": "WaitListOrderRepository",
              "calledFrom": "saveNewOrder",
              "parameterContents": "orderVO.getAccountId()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "findByAccountId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderVO",
              "objectType": "WaitListOrderVO",
              "calledFrom": "saveNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "",
              "calledFrom": "saveNewOrder",
              "parameterContents": "accountOrders,orderVO",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "WaitListOrderExist",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "saveNewOrder",
              "parameterContents": "\"[create][Create Wait Order Fail][Order already exists][AccountId: {} , TripId: {}]\",orderVO.getAccountId(),orderVO.getTripId()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "error",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderVO",
              "objectType": "WaitListOrderVO",
              "calledFrom": "saveNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderVO",
              "objectType": "WaitListOrderVO",
              "calledFrom": "saveNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "newWaitListOrder",
              "objectType": "WaitListOrder",
              "calledFrom": "saveNewOrder",
              "parameterContents": "UUID.randomUUID().toString()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "setId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "UUID",
              "calledFrom": "saveNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "toString",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "UUID",
              "objectType": "UUID",
              "calledFrom": "saveNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "randomUUID",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "BeanUtils",
              "objectType": "Solving BeanUtils",
              "calledFrom": "saveNewOrder",
              "parameterContents": "newWaitListOrder,orderVO",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "copyProperties",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "newWaitListOrder",
              "objectType": "WaitListOrder",
              "calledFrom": "saveNewOrder",
              "parameterContents": "orderVO.getTripId()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "setTrainNumber",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderVO",
              "objectType": "WaitListOrderVO",
              "calledFrom": "saveNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "waitListOrderRepository",
              "objectType": "WaitListOrderRepository",
              "calledFrom": "saveNewOrder",
              "parameterContents": "newWaitListOrder",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "save",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "",
              "objectType": "Logger",
              "calledFrom": "saveNewOrder",
              "parameterContents": "\"[create][Create Wait Order Success][Order Price][AccountId: {} , TripId: {}]\",orderVO.getAccountId(),orderVO.getTripId()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "info",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderVO",
              "objectType": "WaitListOrderVO",
              "calledFrom": "saveNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderVO",
              "objectType": "WaitListOrderVO",
              "calledFrom": "saveNewOrder",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "Objects",
              "objectType": "Objects",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "order.getAccountId(),newOrder.getAccountId()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "equals",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "WaitListOrder",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "WaitListOrderVO",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getAccountId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "Objects",
              "objectType": "Objects",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "order.getContactsId(),newOrder.getContactsId()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "equals",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "WaitListOrder",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "WaitListOrderVO",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getContactsId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "Objects",
              "objectType": "Objects",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "order.getTrainNumber(),newOrder.getTripId()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "equals",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "WaitListOrder",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getTrainNumber",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "WaitListOrderVO",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getTripId",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "Objects",
              "objectType": "Objects",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "order.getTravelTime(),newOrder.getDate()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "equals",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "WaitListOrder",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getTravelTime",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "WaitListOrderVO",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getDate",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "Objects",
              "objectType": "Objects",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "order.getFrom(),newOrder.getFrom()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "equals",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "WaitListOrder",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "WaitListOrderVO",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getFrom",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "Objects",
              "objectType": "Objects",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "order.getTo(),newOrder.getTo()",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "equals",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "order",
              "objectType": "WaitListOrder",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getTo",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "newOrder",
              "objectType": "WaitListOrderVO",
              "calledFrom": "WaitListOrderExist",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getTo",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "orderPO",
              "objectType": "WaitListOrder",
              "calledFrom": "triggerThread",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "getWaitUtilTime",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            },
            {
              "objectName": "pollThread",
              "objectType": "PollThread",
              "calledFrom": "triggerThread",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrderServiceImpl",
              "name": "start",
              "packageAndClassName": "waitorder.service.Impl.WaitListOrderServiceImpl"
            }
          ],
          "name": "WaitListOrderServiceImpl",
          "path": "/ts-wait-order-service/src/main/java/waitorder/service/Impl/WaitListOrderServiceImpl.java",
          "fileType": "JCLASS"
        }
      ],
      "repositories": [
        {
          "packageName": "waitorder.repository",
          "implementedTypes": [],
          "classRole": "REPOSITORY",
          "methods": [
            {
              "parameters": [],
              "returnType": "List<WaitListOrder>",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
                }
              ],
              "className": "WaitListOrderRepository",
              "name": "findAll",
              "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
                }
              ],
              "className": "WaitListOrderRepository",
              "name": "deleteById",
              "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "accountId",
                  "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
                }
              ],
              "returnType": "ArrayList<WaitListOrder>",
              "microserviceName": "ts-wait-order-service",
              "annotations": [],
              "className": "WaitListOrderRepository",
              "name": "findByAccountId",
              "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
            },
            {
              "parameters": [
                {
                  "type": "String",
                  "annotations": [],
                  "name": "id",
                  "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
                }
              ],
              "returnType": "Optional<WaitListOrder>",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
                }
              ],
              "className": "WaitListOrderRepository",
              "name": "findById",
              "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
            }
          ],
          "fields": [],
          "annotations": [
            {
              "attributes": {},
              "name": "Repository",
              "packageAndClassName": "waitorder.repository.WaitListOrderRepository"
            }
          ],
          "methodCalls": [],
          "name": "WaitListOrderRepository",
          "path": "/ts-wait-order-service/src/main/java/waitorder/repository/WaitListOrderRepository.java",
          "fileType": "JCLASS"
        }
      ],
      "entities": [
        {
          "packageName": "waitorder.entity",
          "implementedTypes": [],
          "classRole": "ENTITY",
          "methods": [
            {
              "parameters": [],
              "returnType": "Date",
              "microserviceName": "ts-wait-order-service",
              "annotations": [],
              "className": "WaitListOrder",
              "name": "getCreatedTime",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            },
            {
              "parameters": [],
              "returnType": "int",
              "microserviceName": "ts-wait-order-service",
              "annotations": [
                {
                  "attributes": {},
                  "name": "Override",
                  "packageAndClassName": "waitorder.entity.WaitListOrder"
                }
              ],
              "className": "WaitListOrder",
              "name": "hashCode",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            },
            {
              "parameters": [
                {
                  "type": "Date",
                  "annotations": [],
                  "name": "createdTime",
                  "packageAndClassName": "waitorder.entity.WaitListOrder"
                }
              ],
              "returnType": "void",
              "microserviceName": "ts-wait-order-service",
              "annotations": [],
              "className": "WaitListOrder",
              "name": "setCreatedTime",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            }
          ],
          "fields": [
            {
              "type": "String",
              "name": "id",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            },
            {
              "type": "int",
              "name": "contactsDocumentType",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            }
          ],
          "annotations": [
            {
              "attributes": {
                "name": "jpa-uuid",
                "strategy": "uuid"
              },
              "name": "GenericGenerator",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            },
            {
              "attributes": {},
              "name": "AllArgsConstructor",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            }
          ],
          "methodCalls": [
            {
              "objectName": "id",
              "objectType": "String",
              "calledFrom": "hashCode",
              "parameterContents": "",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrder",
              "name": "hashCode",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "getCreatedTime",
              "parameterContents": "createdTime",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrder",
              "name": "String2Date",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "getTravelTime",
              "parameterContents": "createdTime",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrder",
              "name": "String2Date",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "getWaitUtilTime",
              "parameterContents": "waitUtilTime",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrder",
              "name": "String2Date",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setCreatedTime",
              "parameterContents": "createdTime",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrder",
              "name": "Date2String",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setTravelTime",
              "parameterContents": "travelTime",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrder",
              "name": "Date2String",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            },
            {
              "objectName": "StringUtils",
              "objectType": "Solving StringUtils",
              "calledFrom": "setWaitUntilTime",
              "parameterContents": "waitUntilTime",
              "microserviceName": "ts-wait-order-service",
              "className": "WaitListOrder",
              "name": "Date2String",
              "packageAndClassName": "waitorder.entity.WaitListOrder"
            }
          ],
          "name": "WaitListOrder",
          "path": "/ts-wait-order-service/src/main/java/waitorder/entity/WaitListOrder.java",
          "fileType": "JCLASS"
        }
      ],
      "feignClients": [],
      "files": [
        {
          "data": {
            "project": {
              "parent": {
                "relativePath": "../pom.xml",
                "groupId": "org.services",
                "artifactId": "ts-service",
                "version": "0.1.0"
              },
              "modelVersion": "4.0.0",
              "groupId": "fdse.microservice",
              "xsi:schemaLocation": "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd",
              "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
              "packaging": "jar",
              "version": 1,
              "dependencies": {
                "dependency": [
                  {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-starter-data-jpa"
                  },
                  {
                    "groupId": "mysql",
                    "artifactId": "mysql-connector-java"
                  },
                  {
                    "groupId": "org.services",
                    "artifactId": "ts-common",
                    "version": "0.1.0"
                  },
                  {
                    "groupId": "jakarta.validation",
                    "scope": "compile",
                    "artifactId": "jakarta.validation-api",
                    "version": "2.0.2"
                  }
                ]
              },
              "xmlns": "http://maven.apache.org/POM/4.0.0",
              "build": {
                "plugins": {
                  "plugin": {
                    "groupId": "org.springframework.boot",
                    "artifactId": "spring-boot-maven-plugin"
                  }
                }
              },
              "name": "ts-wait-order-service",
              "artifactId": "ts-wait-order-service",
              "properties": {
                "java.version": 1.8,
                "project.build.sourceEncoding": "UTF-8"
              }
            }
          },
          "name": "pom.xml",
          "path": "/ts-wait-order-service/pom.xml",
          "fileType": "CONFIG"
        },
        {
          "data": {
            "server": {
              "port": 17525
            },
            "spring": {
              "cloud": {
                "nacos": {
                  "discovery": {
                    "server-addr": "${NACOS_ADDRS:127.0.0.1:8848}"
                  }
                }
              },
              "application": {
                "name": "ts-wait-order-service"
              },
              "datasource": {
                "url": "jdbc:mysql://${WAIT_ORDER_MYSQL_HOST:10.176.122.1}:${WAIT_ORDER_MYSQL_PORT:3306}/${WAIT_ORDER_MYSQL_DATABASE:ts}?useSSL=false",
                "username": "${WAIT_ORDER_MYSQL_USER:root}",
                "password": "${WAIT_ORDER_MYSQL_PASSWORD:Abcd1234#}",
                "driver-class-name": "com.mysql.cj.jdbc.Driver"
              },
              "jpa": {
                "hibernate": {
                  "ddl-auto": "update"
                },
                "properties": {
                  "hibernate": {
                    "dialect": "org.hibernate.dialect.MySQL5Dialect"
                  }
                }
              }
            },
            "swagger": {
              "controllerPackage": "waitorder.controller"
            }
          },
          "name": "application.yml",
          "path": "/ts-wait-order-service/src/main/resources/application.yml",
          "fileType": "CONFIG"
        }
      ]
    }
  ],
  "orphans": [
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.11"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/void-elements/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/constantinople/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.11",
          "0.12",
          "iojs"
        ],
        "after_script": "NODE_ENV=test YOURPACKAGE_COVERAGE=1 ./node_modules/.bin/mocha --require patched-blanket --reporter mocha-lcov-reporter | ./node_modules/coveralls/bin/coveralls.js"
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/cliui/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "repositories": {
          "repositories": [
            "// Use jcenter for resolving your dependencies.",
            "// You can declare any Maven/Ivy/file repository here.",
            "jcenter()"
          ]
        },
        "dependencies": {
          "dependencies": [
            "// This dependency is found on compile classpath of this component and consumers.",
            "compile 'com.google.guava:guava:21.0'",
            "// https://mvnrepository.com/artifact/org.json/json",
            "compile group: 'org.json', name: 'json', version: '20170516'",
            "// Use JUnit test framework",
            "testCompile 'junit:junit:4.12'"
          ]
        },
        "//mainClassName": "\"org.services.analysis.CallAnalysis\"",
        "mainClassName": "\"org.services.analysis.TraceTranslator\""
      },
      "name": "build.gradle",
      "path": "/old-docs/Json2Shiviz/build.gradle",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/transformers/node_modules/is-promise/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "version": "3",
        "services": {
          "redis": {
            "image": "redis",
            "ports": [
              "6379:6379"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-ui-dashboard": {
            "image": "${NAMESPACE}/ts-ui-dashboard:${TAG}",
            "restart": "always",
            "ports": [
              "8080:8080"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-auth-service": {
            "image": "${NAMESPACE}/ts-auth-service:${TAG}",
            "restart": "always",
            "ports": [
              "12340:12340"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-auth-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-user-service": {
            "image": "${NAMESPACE}/ts-user-service:${TAG}",
            "restart": "always",
            "ports": [
              "12342:12342"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-user-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-verification-code-service": {
            "image": "${NAMESPACE}/ts-verification-code-service:${TAG}",
            "restart": "always",
            "ports": [
              "15678:15678"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-route-service": {
            "image": "${NAMESPACE}/ts-route-service:${TAG}",
            "restart": "always",
            "ports": [
              "11178:11178"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-route-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-contacts-service": {
            "image": "${NAMESPACE}/ts-contacts-service:${TAG}",
            "restart": "always",
            "ports": [
              "12347:12347"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-contacts-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-order-service": {
            "image": "${NAMESPACE}/ts-order-service:${TAG}",
            "restart": "always",
            "ports": [
              "12031:12031"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-order-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-order-other-service": {
            "image": "${NAMESPACE}/ts-order-other-service:${TAG}",
            "restart": "always",
            "ports": [
              "12032:12032"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-order-other-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-config-service": {
            "image": "${NAMESPACE}/ts-config-service:${TAG}",
            "restart": "always",
            "ports": [
              "15679:15679"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-config-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-station-service": {
            "image": "${NAMESPACE}/ts-station-service:${TAG}",
            "restart": "always",
            "ports": [
              "12345:12345"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-station-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-train-service": {
            "image": "${NAMESPACE}/ts-train-service:${TAG}",
            "restart": "always",
            "ports": [
              "14567:14567"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-train-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-service": {
            "image": "${NAMESPACE}/ts-travel-service:${TAG}",
            "restart": "always",
            "ports": [
              "12346:12346"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-travel2-service": {
            "image": "${NAMESPACE}/ts-travel2-service:${TAG}",
            "restart": "always",
            "ports": [
              "16346:16346"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel2-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-preserve-service": {
            "image": "${NAMESPACE}/ts-preserve-service:${TAG}",
            "restart": "always",
            "ports": [
              "14568:14568"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-preserve-other-service": {
            "image": "${NAMESPACE}/ts-preserve-other-service:${TAG}",
            "restart": "always",
            "ports": [
              "14569:14569"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-basic-service": {
            "image": "${NAMESPACE}/ts-basic-service:${TAG}",
            "restart": "always",
            "ports": [
              "15680:15680"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-price-service": {
            "image": "${NAMESPACE}/ts-price-service:${TAG}",
            "restart": "always",
            "ports": [
              "16579:16579"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-price-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-notification-service": {
            "image": "${NAMESPACE}/ts-notification-service:${TAG}",
            "restart": "always",
            "ports": [
              "17853:17853"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-notification-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-security-service": {
            "image": "${NAMESPACE}/ts-security-service:${TAG}",
            "restart": "always",
            "ports": [
              "11188:11188"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-security-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-inside-payment-service": {
            "image": "${NAMESPACE}/ts-inside-payment-service:${TAG}",
            "restart": "always",
            "ports": [
              "18673:18673"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-inside-payment-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-execute-service": {
            "image": "${NAMESPACE}/ts-execute-service:${TAG}",
            "restart": "always",
            "ports": [
              "12386:12386"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-payment-service": {
            "image": "${NAMESPACE}/ts-payment-service:${TAG}",
            "restart": "always",
            "ports": [
              "19001:19001"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-payment-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-rebook-service": {
            "image": "${NAMESPACE}/ts-rebook-service:${TAG}",
            "restart": "always",
            "ports": [
              "18886:18886"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-rebook-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-cancel-service": {
            "image": "${NAMESPACE}/ts-cancel-service:${TAG}",
            "restart": "always",
            "ports": [
              "18885:18885"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-assurance-service": {
            "image": "${NAMESPACE}/ts-assurance-service:${TAG}",
            "restart": "always",
            "ports": [
              "18888:18888"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-assurance-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-seat-service": {
            "image": "${NAMESPACE}/ts-seat-service:${TAG}",
            "restart": "always",
            "ports": [
              "18898:18898"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-plan-service": {
            "image": "${NAMESPACE}/ts-travel-plan-service:${TAG}",
            "restart": "always",
            "ports": [
              "14322:14322"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-news-service": {
            "image": "${NAMESPACE}/ts-news-service:${TAG}",
            "restart": "always",
            "ports": [
              "12862:12862"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-news-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-voucher-mysql": {
            "image": "mysql",
            "expose": [
              "3306"
            ],
            "environment": {
              "MYSQL_ROOT_PASSWORD": "root"
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-voucher-service": {
            "image": "${NAMESPACE}/ts-voucher-service:${TAG}",
            "restart": "always",
            "ports": [
              "16101:16101"
            ],
            "depends_on": [
              "ts-voucher-mysql"
            ],
            "volumes": [
              "/var/lib/mysql"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-route-plan-service": {
            "image": "${NAMESPACE}/ts-route-plan-service:${TAG}",
            "restart": "always",
            "ports": [
              "14578:14578"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-service": {
            "image": "${NAMESPACE}/ts-food-service:${TAG}",
            "restart": "always",
            "ports": [
              "18856:18856"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-service": {
            "image": "${NAMESPACE}/ts-consign-service:${TAG}",
            "restart": "always",
            "ports": [
              "16111:16111"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-price-service": {
            "image": "${NAMESPACE}/ts-consign-price-service:${TAG}",
            "restart": "always",
            "ports": [
              "16110:16110"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-price-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-food-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-basic-info-service": {
            "image": "${NAMESPACE}/ts-admin-basic-info-service:${TAG}",
            "restart": "always",
            "ports": [
              "18767:18767"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-order-service": {
            "image": "${NAMESPACE}/ts-admin-order-service:${TAG}",
            "restart": "always",
            "ports": [
              "16112:16112"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-route-service": {
            "image": "${NAMESPACE}/ts-admin-route-service:${TAG}",
            "restart": "always",
            "ports": [
              "16113:16113"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-travel-service": {
            "image": "${NAMESPACE}/ts-admin-travel-service:${TAG}",
            "restart": "always",
            "ports": [
              "16114:16114"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-user-service": {
            "image": "${NAMESPACE}/ts-admin-user-service:${TAG}",
            "restart": "always",
            "ports": [
              "16115:16115"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-avatar-service": {
            "image": "${NAMESPACE}/ts-avatar-service:${TAG}",
            "restart": "always",
            "ports": [
              "17001:17001"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-delivery-service": {
            "image": "${NAMESPACE}/ts-delivery-servicee:${TAG}",
            "restart": "always",
            "ports": [
              "18808:18808"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-delivery-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-food-delivery-service": {
            "image": "${NAMESPACE}/ts-food-delivery-service:${TAG}",
            "restart": "always",
            "ports": [
              "18957:18957"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-delivery-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-gateway-service": {
            "image": "${NAMESPACE}/ts-gateway-service:${TAG}",
            "restart": "always",
            "ports": [
              "18888:18888"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-gateway-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-station-food-service": {
            "image": "${NAMESPACE}/ts-station-food-service:${TAG}",
            "restart": "always",
            "ports": [
              "18855:18855"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-station-food-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-train-food-service": {
            "image": "${NAMESPACE}/ts-train-food-service:${TAG}",
            "restart": "always",
            "ports": [
              "19999:19999"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-train-food-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          }
        },
        "networks": {
          "my-network": {
            "driver": "bridge"
          }
        }
      },
      "name": "quickstart-docker-compose.yml",
      "path": "/deployment/docker-compose-manifests/quickstart-docker-compose.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.8",
          "0.10",
          "0.12",
          "iojs"
        ],
        "before_install": [
          "npm install -g npm@~1.4.6"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/minimist/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.4",
          "0.6",
          "0.8",
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/utils-merge/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "apiVersion": "v1",
        "kind": "ConfigMap",
        "metadata": {
          "name": "alertmanager-config",
          "namespace": "kube-system",
          "labels": {
            "kubernetes.io/cluster-service": "true",
            "addonmanager.kubernetes.io/mode": "EnsureExists"
          }
        },
        "data": {
          "alertmanager.yml": "global:\n  resolve_timeout: 5m\nreceivers:\n- name: default-receiver\n  email_configs:\n  - to: 'xxxxxxxxxxxx@126.com'\n- name: alertsnitch\n  webhook_configs:\n    - url: http://alertsnitch:9567/webhook\n\nroute:\n  group_interval: 5m # 如果组内内容不变化，合并为一条警报信息，5m后发送。\n  group_wait: 30s # 在组内等待所配置的时间，如果同组内，30秒内出现相同报警，在一个组内出现。\n  receiver: default-receiver\n  repeat_interval: 24h # 发送报警间隔，如果指定时间内没有修复，则重新发送报警。\n  group_by: [alertname]  # 报警分组\n  routes:\n  - receiver: default-receiver\n    continue: true\n  - receiver: alertsnitch\n    continue: true\n"
        }
      },
      "name": "alert-manager-configmap.yml",
      "path": "/deployment/kubernetes-manifests/prometheus/alert-manager-configmap.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.8",
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/isarray/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "repo_token": "SIAeZjKYlHK74rbcFvNHMUzjRiMpflxve"
      },
      "name": ".coveralls.yml",
      "path": "/ts-ticket-office-service/node_modules/debug/.coveralls.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "sudo": false,
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.11",
          "0.12",
          "iojs",
          "4",
          "6",
          "8",
          "node"
        ],
        "env": [
          "CXX=g++-4.8"
        ],
        "addons": {
          "apt": {
            "sources": [
              "ubuntu-toolchain-r-test"
            ],
            "packages": [
              "gcc-4.8",
              "g++-4.8"
            ]
          }
        }
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/iconv-lite/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/is-promise/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "version": "3",
        "services": {
          "redis": {
            "image": "redis",
            "ports": [
              "6379:6379"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-ui-dashboard": {
            "build": "ts-ui-dashboard",
            "image": "${IMG_REPO}/ts-ui-dashboard:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "8080:8080"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-auth-service": {
            "build": "ts-auth-service",
            "image": "${IMG_REPO}/ts-auth-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "12340:12340"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-auth-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-user-service": {
            "build": "ts-user-service",
            "image": "${IMG_REPO}/ts-user-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "12342:12342"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-user-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-verification-code-service": {
            "build": "ts-verification-code-service",
            "image": "${IMG_REPO}/ts-verification-code-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "15678:15678"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-account-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-route-service": {
            "build": "ts-route-service",
            "image": "${IMG_REPO}/ts-route-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "11178:11178"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-route-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-contacts-service": {
            "build": "ts-contacts-service",
            "image": "${IMG_REPO}/ts-contacts-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "12347:12347"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-contacts-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-order-service": {
            "build": "ts-order-service",
            "image": "${IMG_REPO}/ts-order-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "12031:12031"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-order-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-order-other-service": {
            "build": "ts-order-other-service",
            "image": "${IMG_REPO}/ts-order-other-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "12032:12032"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-order-other-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-config-service": {
            "build": "ts-config-service",
            "image": "${IMG_REPO}/ts-config-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "15679:15679"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-config-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-station-service": {
            "build": "ts-station-service",
            "image": "${IMG_REPO}/ts-station-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "12345:12345"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-station-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-train-service": {
            "build": "ts-train-service",
            "image": "${IMG_REPO}/ts-train-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "14567:14567"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-train-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-service": {
            "build": "ts-travel-service",
            "image": "${IMG_REPO}/ts-travel-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "12346:12346"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-travel2-service": {
            "build": "ts-travel2-service",
            "image": "${IMG_REPO}/ts-travel2-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "16346:16346"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel2-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-preserve-service": {
            "build": "ts-preserve-service",
            "image": "${IMG_REPO}/ts-preserve-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "14568:14568"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-preserve-other-service": {
            "build": "ts-preserve-other-service",
            "image": "${IMG_REPO}/ts-preserve-other-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "14569:14569"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-basic-service": {
            "build": "ts-basic-service",
            "image": "${IMG_REPO}/ts-basic-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "15680:15680"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-ticketinfo-service": {
            "build": "ts-ticketinfo-service",
            "image": "${IMG_REPO}/ts-ticketinfo-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "15681:15681"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-price-service": {
            "build": "ts-price-service",
            "image": "${IMG_REPO}/ts-price-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "16579:16579"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-price-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-notification-service": {
            "build": "ts-notification-service",
            "image": "${IMG_REPO}/ts-notification-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "17853:17853"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-security-service": {
            "build": "ts-security-service",
            "image": "${IMG_REPO}/ts-security-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "11188:11188"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-security-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-inside-payment-service": {
            "build": "ts-inside-payment-service",
            "image": "${IMG_REPO}/ts-inside-payment-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "18673:18673"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-inside-payment-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-execute-service": {
            "build": "ts-execute-service",
            "image": "${IMG_REPO}/ts-execute-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "12386:12386"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-payment-service": {
            "build": "ts-payment-service",
            "image": "${IMG_REPO}/ts-payment-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "19001:19001"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-payment-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-rebook-service": {
            "build": "ts-rebook-service",
            "image": "${IMG_REPO}/ts-rebook-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "18886:18886"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-rebook-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-cancel-service": {
            "build": "ts-cancel-service",
            "image": "${IMG_REPO}/ts-cancel-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "18885:18885"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-assurance-service": {
            "build": "ts-assurance-service",
            "image": "${IMG_REPO}/ts-assurance-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "18888:18888"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-assurance-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-seat-service": {
            "build": "ts-seat-service",
            "image": "${IMG_REPO}/ts-seat-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "18898:18898"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-plan-service": {
            "build": "ts-travel-plan-service",
            "image": "${IMG_REPO}/ts-travel-plan-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "14322:14322"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-ticket-office-service": {
            "build": "ts-ticket-office-service",
            "image": "${IMG_REPO}/ts-ticket-office-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "16108:16108"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-ticket-office-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-news-service": {
            "build": "ts-news-service",
            "image": "${IMG_REPO}/ts-news-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "12862:12862"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-news-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-voucher-mysql": {
            "image": "mysql",
            "expose": [
              "3306"
            ],
            "environment": {
              "MYSQL_ROOT_PASSWORD": "root"
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-voucher-service": {
            "build": "ts-voucher-service",
            "image": "${IMG_REPO}/ts-voucher-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "16101:16101"
            ],
            "depends_on": [
              "ts-voucher-mysql"
            ],
            "volumes": [
              "/var/lib/mysql"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-map-service": {
            "build": "ts-food-map-service",
            "image": "${IMG_REPO}/ts-food-map-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "18855:18855"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-map-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-route-plan-service": {
            "build": "ts-route-plan-service",
            "image": "${IMG_REPO}/ts-route-plan-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "14578:14578"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-service": {
            "build": "ts-food-service",
            "image": "${IMG_REPO}/ts-food-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "18856:18856"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-service": {
            "build": "ts-consign-service",
            "image": "${IMG_REPO}/ts-consign-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "16111:16111"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-price-service": {
            "build": "ts-consign-price-service",
            "image": "${IMG_REPO}/ts-consign-price-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "16110:16110"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-price-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-food-mongo": {
            "image": "mongo",
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-basic-info-service": {
            "build": "ts-admin-basic-info-service",
            "image": "${IMG_REPO}/ts-admin-basic-info-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "18767:18767"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-order-service": {
            "build": "ts-admin-order-service",
            "image": "${IMG_REPO}/ts-admin-order-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "16112:16112"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-route-service": {
            "build": "ts-admin-route-service",
            "image": "${IMG_REPO}/ts-admin-route-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "16113:16113"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-travel-service": {
            "build": "ts-admin-travel-service",
            "image": "${IMG_REPO}/ts-admin-travel-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "16114:16114"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-user-service": {
            "build": "ts-admin-user-service",
            "image": "${IMG_REPO}/ts-admin-user-service:${IMG_TAG}",
            "restart": "always",
            "ports": [
              "16115:16115"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-avatar-service": {
            "image": "${NAMESPACE}/ts-avatar-service:${TAG}",
            "restart": "always",
            "ports": [
              "17001:17001"
            ],
            "networks": [
              "my-network"
            ]
          }
        },
        "networks": {
          "my-network": {
            "driver": "bridge"
          }
        }
      },
      "name": "docker-compose.yml",
      "path": "/docker-compose.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "node",
          "5",
          "4",
          "0.12",
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/safe-buffer/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.12",
          "io.js"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/graceful-readlink/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10",
          "0.11",
          "0.12",
          "4.0",
          "4.1",
          "4.2",
          "5"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/ipaddr.js/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "sudo": false,
        "node_js": [
          "0.10",
          "0.12",
          "4"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/acorn/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.8",
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/optimist/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "repo_token": "NiRhyj91Z2vtgob6XdEAqs83rzNnbMZUu"
      },
      "name": ".coveralls.yml",
      "path": "/ts-ticket-office-service/node_modules/cliui/.coveralls.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": "0.10"
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/with/node_modules/acorn/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/uglify-to-browserify/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          "6",
          "5",
          "4"
        ],
        "install": [
          "make node_modules"
        ],
        "script": [
          "make lint",
          "make test",
          "make coveralls"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/debug/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "language": "node_js",
        "node_js": [
          0.8,
          "0.10"
        ]
      },
      "name": ".travis.yml",
      "path": "/ts-ticket-office-service/node_modules/transformers/node_modules/source-map/.travis.yml",
      "fileType": "CONFIG"
    },
    {
      "data": {
        "version": "3",
        "services": {
          "redis": {
            "image": "redis",
            "ports": [
              "6379:6379"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-ui-dashboard": {
            "image": "codewisdom/ts-ui-dashboard-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "8080:8080"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-auth-service": {
            "image": "codewisdom/ts-auth-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "12340:12340"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-auth-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-user-service": {
            "image": "codewisdom/ts-user-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "12342:12342"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-user-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-verification-code-service": {
            "image": "codewisdom/ts-verification-code-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "15678:15678"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-route-service": {
            "image": "codewisdom/ts-route-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "11178:11178"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-route-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-contacts-service": {
            "image": "codewisdom/ts-contacts-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "12347:12347"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-contacts-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-order-service": {
            "image": "codewisdom/ts-order-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "12031:12031"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-order-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-order-other-service": {
            "image": "codewisdom/ts-order-other-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "12032:12032"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-order-other-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-config-service": {
            "image": "codewisdom/ts-config-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "15679:15679"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-config-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-station-service": {
            "image": "codewisdom/ts-station-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "12345:12345"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-station-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-train-service": {
            "image": "codewisdom/ts-train-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "14567:14567"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-train-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-service": {
            "image": "codewisdom/ts-travel-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "12346:12346"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-travel2-service": {
            "image": "codewisdom/ts-travel2-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "16346:16346"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel2-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-preserve-service": {
            "image": "codewisdom/ts-preserve-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "14568:14568"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-preserve-other-service": {
            "image": "codewisdom/ts-preserve-other-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "14569:14569"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-basic-service": {
            "image": "codewisdom/ts-basic-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "15680:15680"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-price-service": {
            "image": "codewisdom/ts-price-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "16579:16579"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-price-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-notification-service": {
            "image": "codewisdom/ts-notification-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "17853:17853"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-notification-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-security-service": {
            "image": "codewisdom/ts-security-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "11188:11188"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-security-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-inside-payment-service": {
            "image": "codewisdom/ts-inside-payment-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18673:18673"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-inside-payment-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-execute-service": {
            "image": "codewisdom/ts-execute-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "12386:12386"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-payment-service": {
            "image": "codewisdom/ts-payment-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "19001:19001"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-payment-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-rebook-service": {
            "image": "codewisdom/ts-rebook-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18886:18886"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-rebook-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-cancel-service": {
            "image": "codewisdom/ts-cancel-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18885:18885"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-assurance-service": {
            "image": "codewisdom/ts-assurance-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18888:18888"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-assurance-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-seat-service": {
            "image": "codewisdom/ts-seat-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18898:18898"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-travel-plan-service": {
            "image": "codewisdom/ts-travel-plan-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "14322:14322"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-news-service": {
            "image": "codewisdom/ts-news-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "12862:12862"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-news-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-voucher-mysql": {
            "image": "mysql",
            "expose": [
              "3306"
            ],
            "environment": {
              "MYSQL_ROOT_PASSWORD": "root"
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-voucher-service": {
            "image": "codewisdom/ts-voucher-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "16101:16101"
            ],
            "depends_on": [
              "ts-voucher-mysql"
            ],
            "volumes": [
              "/var/lib/mysql"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-route-plan-service": {
            "image": "codewisdom/ts-route-plan-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "14578:14578"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-service": {
            "image": "codewisdom/ts-food-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18856:18856"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-service": {
            "image": "codewisdom/ts-consign-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "16111:16111"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-price-service": {
            "image": "codewisdom/ts-consign-price-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "16110:16110"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-consign-price-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-basic-info-service": {
            "image": "codewisdom/ts-admin-basic-info-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18767:18767"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-order-service": {
            "image": "codewisdom/ts-admin-order-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "16112:16112"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-route-service": {
            "image": "codewisdom/ts-admin-route-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "16113:16113"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-travel-service": {
            "image": "codewisdom/ts-admin-travel-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "16114:16114"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-admin-user-service": {
            "image": "codewisdom/ts-admin-user-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "16115:16115"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          },
          "ts-avatar-service": {
            "image": "codewisdom/ts-avatar-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "17001:17001"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-delivery-service": {
            "image": "${NAMESPACE}/ts-delivery-servicee-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18808:18808"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-delivery-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-food-delivery-service": {
            "image": "${NAMESPACE}/ts-food-delivery-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18957:18957"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-food-delivery-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-gateway-service": {
            "image": "${NAMESPACE}/ts-gateway-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18888:18888"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-gateway-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-station-food-service": {
            "image": "${NAMESPACE}/ts-station-food-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "18855:18855"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-station-food-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "ts-train-food-service": {
            "image": "${NAMESPACE}/ts-train-food-service-with-jaeger:v1",
            "restart": "always",
            "ports": [
              "19999:19999"
            ],
            "networks": [
              "my-network"
            ]
          },
          "ts-train-food-mysql": {
            "image": "mysql:5.7",
            "networks": [
              "my-network"
            ]
          },
          "jaeger": {
            "image": "jaegertracing/all-in-one:1.15",
            "ports": [
              "16686:16686"
            ],
            "deploy": {
              "replicas": 1,
              "restart_policy": {
                "condition": "on-failure"
              }
            },
            "networks": [
              "my-network"
            ]
          }
        },
        "networks": {
          "my-network": {
            "driver": "bridge"
          }
        }
      },
      "name": "docker-compose-with-jaeger.yml",
      "path": "/deployment/docker-compose-manifests/docker-compose-with-jaeger.yml",
      "fileType": "CONFIG"
    }
  ]
}